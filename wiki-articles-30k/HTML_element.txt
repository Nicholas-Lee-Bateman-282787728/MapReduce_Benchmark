     An HTML element is an individual component of an HTML document or web page, once this has been parsed into the Document Object Model. HTML is composed of a tree of HTML elements and other nodes, such as text nodes. Each element can have HTML attributes specified. Elements can also have content, including other elements and text. Many HTML elements represent semantics, or meaning. For example, the title element represents the title of the document. In the HTML syntax, most elements are written with a start tag and an end tag, with the content in between. An HTML tag is composed of the name of the element, surrounded by angle brackets. An end tag also has a slash after the opening angle bracket, to distinguish it from the start tag. For example, a paragraph, which is represented by the p element, would be written as  In the HTML syntax, most elements are written ...  However, not all of these elements require the end tag, or even the start tag, to be present.  Some elements, the so-called void elements, do not have an end tag. A typical example is the br element, which represents a significant line break, such as in a poem or an address. A void element's behaviour is predefined, and it cannot contain any content or other elements. For example, the address of the dentist in the movie Finding Nemo would be written as  P. Sherman42 Wallaby WaySydney  When using an XHTML DTD, it is required to open and close the element with a single tag. To specify that it is a void element, a "/" is included at the end of the tag (not to be confused with the "/" at the beginning of a closing tag).  P. Sherman42 Wallaby WaySydney  HTML attributes are specified inside the start tag. For example, the abbr element, which represents an abbreviation, expects a title attribute within its opening tag. This would be written as  abbr.  HTML documents are delivered as "documents"."Document" may refer interchangeably to either a file stored on a computer filesystem, usually on disk, or to a document delivered across the Web by HTTP. Such documents may equally be copies of disk files stored on the web server, or they may be generated on demand. These are then parsed, which turns them into the Document Object Model (DOM) internal representation, within the web browser.The term "web browser" here is used for simplicity. It does of course include other sorts of web user agent, such as search engine web crawlers, automatic news-feed retrievers etc. Presentation by the web browser, such as screen rendering or access by JavaScript, is then performed on this internal model, not the original document. Early HTML documents, and to a lesser extent today, were largely invalid HTML and riddled with syntax errors. The parsing process was also required to "fix-up" these errors, as best it could. The resultant model was often not correct (i.e. it did not represent what a careless coder had originally intended), but it would at least be valid, according to the HTML standard. A valid model was produced, no matter how bad the "tag soup" supplied had been. Only in the rarest cases would the parser abandon parsing altogether. "Elements" and "tags" are terms that are widely confused. HTML documents contain tags, but do not contain the elements. The elements are only generated after the parsing step, from these tags. As is generally understood, the position of an element is indicated as spanning from a start tag, possibly including some child content, and is terminated by an end tag. This is the case for many, but not all, elements within an HTML document. As HTML is based on SGML, its parsing also depends on the use of a DTD, specifically an HTML DTD such as that for HTML 4.01.HTML 4.01 is one of a small number of well-known HTML DTDs. It is chosen here as the best illustrative example, although the same behaviour applies to the other W3C-published DTDs for HTML. The DTD specifies which element types are possible (i.e. it defines the set of element types that go to make up HTML) and it also specifies the valid combinations in which they may appear in a document. It is part of general SGML behaviour that where only one valid structure is possible (per the DTD), it is not generally a requirement that the document explicitly states that structure. As a simple example, the &lt;p&gt; start tag indicating the start of a paragraph element should be closed by a &lt;/p&gt; end tag, indicating the end of the element. Also the DTD states that paragraph elements cannot be nested. The HTML document fragment: &lt;p&gt;Para 1 &lt;p&gt;Para 2 &lt;p&gt;Para 3  can thus be inferred to be equivalent to: &lt;p&gt;Para 1 &lt;/p&gt;&lt;p&gt;Para 2 &lt;/p&gt;&lt;p&gt;Para 3  (If one paragraph element cannot contain another, any currently open paragraph must be closed before starting another.) Because of this implied behaviour, based on the combination of the DTD and the individual document, it is not possible to infer elements from the document tags alone, but only by also using an SGML or HTML aware parser, with knowledge of the DTD. SGML is complex, which has limited its widespread adoption and understanding. XML was developed as a simpler alternative. XML is similar to SGML, and can also use the DTD mechanism to specify the elements supported and their permitted combinations as document structure. XML parsing is however simpler. The relation from tags to elements is always simply that of parsing the actual tags included in the document, without the implied closures that are part of SGML.Even this is not the whole story, as a macro-like feature of DTDs may still be used within XML. Where HTML can be formed as XML, either through XHTML or through HTML5 as XML, the parsing from document tags to DOM elements is simplified, but still follows the same basic process. Once the DOM of elements is obtained, behaviour beyond that point (i.e. screen rendering) is identical. Part of this CSS presentation behaviour is the notion of the "box model". This is applied to those elements that CSS considers to be "block" elements, set through the CSS display: block; statement. HTML also has a similar concept, although different, and the two are very frequently confused. %block; and %inline; are groups within the HTML DTD that group elements as being either "block-level" or "inline". This is used to define their nesting behaviour: block-level elements cannot be placed into an inline context.Although see &lt;object&gt; for the inevitable exception. This behaviour cannot be changed, it is fixed in the DTD. Block and inline elements have the appropriate and different CSS behaviours attached to them by default, including the relevance of the box model for particular element types. Note though that this CSS behaviour can, and frequently is, changed from the default. Lists with &lt;ul&gt;&lt;li&gt; ... are %block; elements and are presented as block elements by default. However, it is quite common to set these with CSS to display as an inline list. There are multiple kinds of HTML elements: void elements, raw text elements, and normal elements. Void elements only have a start tag, which contains any HTML attributes. They may not contain any children, such as text or other elements. Often they are place holders for elements which reference external files, such as the image () element. The attributes included in the element will then point to the external file in question. Another example of a void element is the link element, for which the syntax is    This link element points the browser at a style sheet to use when presenting the HTML document to the user. Note that in the HTML syntax, attributes don't have to be quoted. When using the XML syntax (XHTML), on the other hand, all attributes must be quoted, and a trailing slash is required before the last angle bracket:    Raw text elements are constructed with: Normal elements usually have both a start tag and an end tag, although for some elements the end tag, or both tags, can be omitted. It is constructed in a similar way: HTML attributes define desired behaviour or indicate additional element properties. Most attributes require a value. In HTML, the value can be left unquoted if it doesn't include spaces (name=value), or it can be quoted with single or double quotes (name='value' or name="value"). In XML, those quotes are required. Boolean attributes, on the other hand, don't require a value to be specified. An example is the checked for checkboxes:    In the XML syntax, though, the name should be repeated as the value:    Informally, HTML elements are sometimes referred to as "tags" (an example of synecdoche), though many prefer the term tag strictly in reference to the markup delimiting the start and end of an element. Element (and attribute) names may be written in any combination of upper or lower case in HTML, but must be in lower case in XHTML.XHTML 1.0 ยง4.2 The canonical form was upper-case until HTML 4, and was used in HTML specifications, but in recent years, lower-case has become more common. HTML elements are defined in a series of freely available open standards issued since 1995, initially by the IETF and subsequently by the W3C. Since the early 1990s, developers of user agents (e.g. web browsers) have often developed their own elements, some of which have been adopted in later standards. Other user agents may not recognize non-standard elements, and they may be ignored or displayed improperly. In 1998, XML (a simplified form of SGML) introduced mechanisms to allow anyone to develop their own elements and incorporate them in XHTML documents, for use with XML-aware user agents.XML 1.0  (The ability to produce additional elements is part of the eXtensibility in the acronym.) Subsequently, HTML 4.01 was rewritten in an XML-compatible form, XHTML 1.0 (eXtensible HTML). The elements in each are identical, and in most cases valid XHTML 1.0 documents will be valid or nearly valid HTML 4.01 documents. This article mainly focuses on real HTML, unless noted otherwise; however, it remains applicable to XHTML. (See HTML for a discussion of the minor differences between the two). Since the first version of HTML, several elements have become outmoded, and are deprecated in later standards, or do not appear at all, in which case they are invalid (and will be found invalid, and perhaps not displayed, by validating user agents).XML 1.0 ยง5.1 At present, the status of elements is complicated by the existence of three types of HTML 4.01 / XHTML 1.0 DTD: The first Standard (HTML 2.0) contained four deprecated elements, one of which was invalid in HTML 3.2. All four are invalid in HTML 4.01 Transitional, which also deprecated a further ten elements. All of these, plus two others, are invalid in HTML 4.01 Strict. While the frame elements are still current in the sense of being present in the Transitional and Frameset DTDs, there are no plans to preserve them in future standards, as their function has been largely replaced, and they are highly problematic for user accessibility. (Strictly speaking, the most recent XHTML standard, XHTML 1.1 (2001), does not include frames at all; it is approximately equivalent to XHTML 1.0 Strict, but also includes the Ruby markup module.)XHTML 1.1 ยงA A common source of confusion is the loose use of deprecated to refer to both deprecated and invalid status, and to elements which are expected to be formally deprecated in future. Since HTML 4, HTML has increasingly focused on the separation of content (the visible text and images) from presentation (like color, font size, and layout).  This is often referred to as a separation of concerns. HTML is used to represent the structure or content of a document, its presentation remains the sole responsibility of CSS style sheets. A default style sheet is suggested as part of the CSS standard, giving a default rendering for HTML. Behavior (interactivity) is also kept separate from content, and is handled by scripts. Images are contained in separate graphics files, separate from text, though they can also be considered part of the content of a page. Separation of concerns allows the document to be presented by different user agents according to their purposes and abilities. For example, a user agent can select an appropriate style sheet to present a document by displaying on a monitor, printing on paper, or to determine speech characteristics in an audio-only user agent. The structural and semantic functions of the markup remain identical in each case. Historically, user agents did not always support these features. In the 1990s, as a stop-gap, presentational elements (like &lt;b&gt; and &lt;i&gt;) were added to HTML, at the cost of creating problems for interoperability and user accessibility. This is now regarded as outmoded and has been superseded by style sheet-based design; most presentational elements are now deprecated.HTML 4.01 ยง14.1 External image files are incorporated with the img or object elements. (With XHTML, the SVG language can also be used to write graphics within the document, though linking to external SVG files is generally simpler.) Where an image is not purely decorative, HTML allows replacement content with similar semantic value to be provided for non-visual user agents. An HTML document can also be extended through the use of scripts to provide additional behaviours beyond the abilities of HTML hyperlinks and forms. The elements style and script, with related HTML attributes, provide reference points in HTML markup for links to style sheets and scripts. They can also contain instructions directly. The Root element of an HTML document; all other elements are contained in this. The HTML element delimits the beginning and the end of an HTML document. Standardized in HTML 2.0; still current. Container for processing information and metadata for an HTML document. Standardized in HTML 2.0; still current. (See Document head elements for child elements.) Container for the displayable content of an HTML document. Standardized in HTML 2.0; still current. (See Document body elements for child elements.) Specifies a base URL for all relative href and other links in the document. Must appear before any element that refers to an external resource. HTML permits only one base element for each document. The base element has HTML attributes, but no contents. A development version of BASE is mentioned in HTML Tags; standardized in HTML 2.0; still current. Specifies a base font size, typeface, and colour for the document. Used together with font elements. Deprecated in favour of style sheets. Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. isindex could either appear in the document head or in the body, but only once in a document. See Forms.   Specifies links to other documents, such as previous and next links, or alternate versions.HTML 4.01 ยง12.3  A common use is to link to external style sheets, using the form: :&lt;link rel="stylesheet" type="text/css" href="url" title="description_of_style"&gt;HTML 4.01 ยง14.3.2 A less-common, but important, usage is to supply navigation hints consistently through use of microformats. Several common relationships are defined, that may be exposed to users through the browser interface rather than directly in the web page. :&lt;link rel="next" href="url"&gt; A document's head element may contain any number of link elements. The link element has HTML attributes, but no contents. LINK existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current.   Can be used to specify additional metadata about a document, such as its author, publication date, expiration date, page description, keywords, or other information not provided through the other header elements and HTML attributes. Because of their generic nature, meta elements specify associative key-value pairs. In general, a meta element conveys hidden information about the document. Several meta tags can be used, all of which should be nested in the head element. The specific purpose of each meta element is defined by its attributes. In one form, meta elements can specify HTTP headers which should be sent by a web server before the actual content, for example: :&lt;meta http-equiv="foo" content="bar"&gt; &mdash; this specifies that the page should be served with an HTTP header called foo that has a value bar. In the general form, a meta element specifies name and associated content HTML attributes describing aspects of the HTML page. To prevent possible ambiguity, an optional third attribute, scheme, may be supplied to specify a semantic framework that defines the meaning of the key and its value: for example: :&lt;meta name="foo" content="bar" scheme="DC"&gt; In this example, the meta element identifies itself as containing the foo element, with a value of bar, from the DC or Dublin Core resource description framework. Standardized in HTML 2.0; still current. Used for including generic objects within the document header. Though rarely used within a head element, it could potentially be used to extract foreign data and associate it with the current document. Standardized in HTML 4.0; still current. Can act as a container for script instructions or link to an external script with the optional src attribute.HTML 4.01 ยง18  Also usable in the document body to dynamically generate either both block or inline content. Standardized in HTML 3.2; still current. Specifies a style for the document, usually in the form: :&lt;style type="text/css"&gt; ... &lt;/style&gt; Can either act as a container for style instructions or link to external style sheets โ for example, in CSS, with @import directives of the form: :&lt;style&gt; @import url; &lt;/style&gt;CSS ยง1.1 Standardized in HTML 3.2; still current. Define a document title. Required in every HTML and XHTML document. User agents may use the title in different ways. For example: * Web browsers usually display it in a window's title bar when the window is open, and (where applicable) in the task bar when the window is minimized. * It may become the default file-name when saving the page. * Search engines&rsquo; web crawlers may pay particular attention to the words used in the title. The title element must not contain other elements, only text. Only one title element is permitted in a document. TITLE existed in HTML Tags, and was standardized in HTML 2.0; still current. In visual browsers, displayable elements can be rendered as either block or inline. While all elements are part of the document sequence, block elements appear within their parent elements: Conversely, inline elements are treated as part of the flow of document text; they cannot have margins, width or height set, and do break across lines. Block elements, or block-level elements, have a rectangular structure. By default, these elements will span the entire width of its parent element, and will thus not allow any other element to occupy the same horizontal space as it is placed on. The rectangular structure of a block element is often referred to as the , and is made up of several parts. Each element contains the following: The above section refers only to the detailed implementation of CSS rendering and has no relevance to HTML elements themselves. Creates a paragraph, perhaps the most common block level element. P existed in HTML Tags, and was standardized in HTML 2.0; still current.       Section headings at different levels. &lt;h1&gt; delimits the highest-level heading, &lt;h2&gt; the next level down (sub-section), &lt;h3&gt; for a level below that, and so on to &lt;h6&gt;. They are sometimes referred to collectively as &lt;hn&gt; tags, n meaning any of the available heading levels. Most visual browsers show headings as large bold text by default, though this can be overridden with CSS. Heading elements are not intended merely for creating large or bold textโin fact, they should not be used for explicitly styling text. Rather, they describe the document&rsquo;s structure and organization. Some programs use them to generate outlines and tables of contents. Headings existed in HTML Tags, and were standardized in HTML 2.0; still current.   A description list (a.k.a. association list), which consists of nameโvalue groups, and was known as a definition list prior to HTML5.  Description lists are intended for groups of "terms and definitions, metadata topics and values, questions and answers, or any other groups of nameโvalue data".. DL existed in HTML Tags, and was standardized in HTML 2.0; still current. A name in a description list (previously definition term in a definition list). DT existed in HTML Tags, and was standardized in HTML 2.0; still current. A value in a description list (previously definition data in a definition list). DD existed in HTML Tags, and was standardized in HTML 2.0; still current. An ordered (enumerated) list. The type attribute can be used to specify the kind of marker to use in the list, but style sheets give more control. The default is Arabic numbering.  CSS: list-style-type: foo. HTML attribute: , in either case, replacing foo with one of the following: *A for A, B, C... *a for a, b, c... *I for I, II, III... *i for i, ii, iii... *1 for 1, 2, 3... OL existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. An unordered (bulleted) list. Style sheets can be used to specify the list marker: list-style-type: foo. The default marker type is disc, other values are square, circle and none. UL existed in HTML Tags, and was standardized in HTML 2.0; still current. A list item in ordered (ol) or unordered (ul) lists. LI existed in HTML Tags, and was standardized in HTML 2.0; still current. A directory listing. The original purpose of this element was never widely supported; deprecated in favor of &lt;ul&gt;. DIR existed in HTML Tags, and was standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. Contact information for the document author. ADDRESS existed in HTML Tags, and was standardized in HTML 2.0; still current.    A block-level quotation, for when the quotation includes block level elements, e.g. paragraphs. The cite attribute may give the source, and must be a fully qualified Uniform Resource Identifier. The default presentation of block quotations in visual browsers is usually to indent them from both margins. This has led to the element being unnecessarily used just to indent paragraphs, regardless of semantics. For quotations not containing block level elements see the quote (q) element. BLOCKQUOTE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. See blockquote element for more information. Creates a block-level center-aligned division. Deprecated in favor of &lt;div&gt; or another element with centring defined using style sheets. Standardized in HTML 3.2; Marks a deleted section of content. This element can also be used as inline. Standardized in HTML 4.0; still current.   A block-level logical division. A generic element with no semantic meaning used to distinguish a document section, usually for purposes such as presentation or behaviour controlled by style sheets or DOM calls. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. A horizontal rule. Presentational rules can also be drawn with style sheets. Standardized in HTML 2.0; still current. Marks a section of inserted content. This element can also be used as inline. Standardized in HTML 4.0; still current. Replacement content for scripts. Unlike script this can only be used as a block-level element. Standardized in HTML 4.0; still current. Pre-formatted text. Text within this element is typically displayed in a non-proportional font exactly as it is laid out in the file (see ASCII art). Whereas browsers ignore white-space for other HTML elements, in pre, white-space should be rendered as authored. (With the CSS properties: {white-space: pre; font-family: mono-space;}, other elements can be presented in the same way.)  This element can contain any inline element except: image (IMG), object (OBJECT), big font size (BIG), small font size (SMALL), superscript (SUP), and subscript (SUB). PRE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Places a script in the document. Also usable in the head and in inline contexts. :Note: SCRIPT is not itself either a block or inline element; by itself it should not display at all, but it can contain instructions to dynamically generate either both block or inline content. Standardized in HTML 3.2; still current. Inline elements cannot be placed directly inside the body element; they must be wholly nested within block-level elements. An anchor element is called an anchor because web designers can use it to anchor a URL to some text on a web page. When users view the web page in a browser, they can click the text to activate the link and visit the page whose URL is in the link.HTML 4 for dummies, 5th edition, 2005, By Ed Tittel, Mary C. Burmeister, p.&nbsp;96. In HTML, an anchor can be either the origin or the target (destination) end of a hyperlink. With the attribute href (hypertext reference [ ]), the anchor becomes a hyper-link to either another part of the document or another resource (e.g. a webpage) using an external URL. Alternatively (and sometimes concurrently), with the name or id HTML attributes set, the element becomes a target. A Uniform Resource Locator can link to this target via a fragment identifier. In HTML5, any element can now be made into a target by using the id attribute,HTML5 attributes index so using &lt;a name="foo">...&lt;/a> is not necessary, although this way of adding anchors continues to work. To illustrate: the header of a table of contents section on example.com could be turned into a target by writing : &lt;h1 id="contents">Table of contents&lt;/h1> Continuing with this example, now that the section has been marked up as a target, it can be referred to from external sites with a link like : &lt;a href="http&#58;//example.com#contents">see contents&lt;/a> or with a link on the same page like: : &lt;a href="#contents">contents, above&lt;/a> The attribute title may be set to give brief information about the link: :&lt;a href="URL" title="additional information"&gt;link text&lt;/a&gt; In most graphical browsers, when the cursor hovers over a link, the cursor changes into a hand with a stretched index finger and the title is displayed in a tooltip or in some other manner. Some browsers render alt text the same way, despite this not being what the specification calls for. A existed in HTML Tags, and was standardized in HTML 2.0; still current. Marks an abbreviation, and can make the full form available: :&lt;abbr title="abbreviation"&gt;abbr.&lt;/abbr&gt; Standardized in HTML 4.0; still current. Similar to the abbr element, but marks an acronym: :&lt;acronym title="Hyper-Text Mark-up Language"&gt;HTML&lt;/acronym&gt; Standardized in HTML 4.0; still current, not supported in HTML5. inline definition of a single term. DFN existed in HTML Internet Draft 1.2, and was fully standardized in HTML 3.2; still current. Emphasis (conventionally displayed in italics) EM existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. strong emphasis (conventionally displayed bold). An aural user agent may use different voices for emphasis. STRONG existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. These elements are useful primarily for documenting computer code development and user interaction through differentiation of source code (&lt;code&gt;), source code variables (&lt;var&gt;), user input (&lt;kbd&gt;), and terminal output (&lt;samp&gt;). A code snippet. Conventionally rendered in a mono-space font: Code snippet. CODE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Sample output (from a program or script) SAMP existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Keyboard - text to be entered by the user KBD existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Variable VAR existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. As visual presentational markup only applies directly to visual browsers, its use is discouraged. Style sheets should be used instead. Several of these elements are deprecated or invalid in HTML 4 / XHTML 1.0, and the remainder are invalid in the current draft of XHTML 2.0. The current draft of HTML 5, however, re-includes &lt;s&gt;, &lt;u&gt;, and &lt;small&gt;, assigning new semantic meaning to each. In an HTML 5 document, the use of these elements is no longer discouraged, provided that it is semantically correct. In HTML 4, set font to boldface where possible. Equivalent CSS: {font-weight: bold}. &lt;strong&gt;...&lt;/strong&gt; usually has the same effect in visual browsers, as well as having more semantic meaning, under HTML 4.01. In HTML 5, however, b has its own meaning, distinct from that of strong. It denotes "text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood." B existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. In HTML 4, set font to italic where possible. Equivalent CSS: {font-style: italic}. &lt;em&gt;...&lt;/em&gt; usually has the same effect in visual browsers, as well as having more semantic meaning, under HTML 4.01. In HTML 5, however, i has its own semantic meaning, distinct from that of em. It denotes "a different quality of text" or "an alternative voice or mood"โe.g., a thought, a ship name, a binary species name, a foreign-language phrase, etc. I existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. In HTML 4, underlined text. Equivalent CSS: {text-decoration: underline}. Deprecated in HTML 4.01. Restored in HTML 5. In HTML 5, the u element denotes "a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labelling the text as being a proper name in Chinese text (a Chinese proper name mark), or labelling the text as being misspelt."  The HTML 5 specification reminds developers that other elements are almost always more appropriate than u and admonishes designers not to use underlined text where it could be confused for a hyper-link. U existed in HTML Internet Draft 1.2, was standardized in HTML 3.2 but was deprecated in HTML 4.0 Transitional and was invalid in HTML 4.0 Strict. The u element is reintroduced in HTML 5. In HTML 4, decreased font size (smaller text). Equivalent CSS: {font-size: smaller} In HTML 5, the small element denotes "side comments such as small print." Standardized in HTML 3.2; still current. In HTML 4, indicated strike-through text (Strikethrough) and was equivalent to strike. In HTML 5, the s element denotes information that is "no longer accurate or no longer relevant", and is not to be confused with del, which indicates removal/deletion. S was deprecated in HTML 4.0 Transitional (having not appeared in any previous standard), and was invalid in HTML 4.0 Strict. The s element is reintroduced in HTML 5. Increased font size (bigger text). Equivalent CSS: {font-size: larger} Standardized in HTML 3.2; not supported in HTML5. Strike-through text (Strikethrough),  (Equivalent CSS: {text-decoration: line-through}) STRIKE was standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. Fixed-width font (typewriter-like), also known as teletype. (Equivalent CSS: {font-family: monospace;}) TT existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; not supported in HTML 5. &lt;font [color=colour] [size=size] [face=face]&gt;...&lt;/font&gt; Can specify the font colour with the color attribute (note the American spelling), typeface with the face attribute, and absolute or relative size with the size attribute. Examples (all uses are deprecated, use CSS equivalents if possible): # &lt;font color="green">text&lt;/font> creates green text. # &lt;font color="#114499">text&lt;/font> creates text with hexadecimal color #114499. # &lt;font size="4">text&lt;/font> creates text with size 4. Sizes are from 1 to 7. The standard size is 3, unless otherwise specified in the &lt;body> or other tags. # &lt;font size="+1">text&lt;/font> creates text with size 1 bigger than the standard. &lt;font size="-1">text&lt;/font> is opposite. # &lt;font face="Courier">text&lt;/font> makes text with Courier font. Equivalent CSS for font attributes: *&lt;font size="N"> corresponds to {font-size: Yunits} (the HTML specification does not define the relationship between size N and unit-size Y, nor does it define a unit). *&lt;font color="red"> corresponds to {color: red} *&lt;font face="Courier"> corresponds to {font-family: "Courier"} Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. Not part of HTML5.   An inline logical division. A generic element with no semantic meaning used to distinguish a document section, usually for purposes such as presentation or behaviour controlled by style sheets or DOM calls. Standardized in HTML 4.0; still current. A forced line-break. Standardized in HTML 2.0; still current, Marks an inline section of text in which the reading direction is the opposite from that of the parent element. Standardized in HTML 4.0; still current. In HTML 4, a citation or a reference for a quote or statement in the document. In HTML 5, the title of a book, paper, article, poem, film, TV show, opera, play, musical, painting, sculpture, or other piece of work. CITE existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Deleted text. Typically rendered as a strikethrough: Deleted text. Standardized in HTML 4.0; still current. Inserted text. Often used to mark up replacement text for &lt;del>'d text. Typically rendered underlined: Inserted text. Standardized in HTML 4.0; still current. :Note, both &lt;ins&gt; and &lt;del&gt; elements may also be used as block elements: containing other block and inline elements. However, these elements must still remain wholly within their parent element to maintain a well-formed HTML document. For example deleting text from the middle of one paragraph across several other paragraphs and ending in a final paragraph would need to use three separate &lt;del&gt; elements. Two &lt;del&gt; elements would be required as inline element to indicate the deletion of text in the first and last paragraphs, and a third, used as a block element, to indicate the deletion in the intervening paragraphs. An inline quotation (for block level quotation see BLOCK-QUOTE). Quote elements may be nested. &lt;q&gt; should automatically generate quotation marks in conjunction with style sheets. Practical concerns due to browser non-compliance may force authors to find workarounds. The cite attribute gives the source, and must be a fully qualified URI. Standardized in HTML 4.0; still current. :Note: Lengthy inline quotations may be displayed as indented blocks (as block-quote) using style sheets. For example, with a suitable CSS rule associated with q.lengthy: ::&lt;q class="lengthy"&gt;An inline quotation of significant length (say 25 words, for example) goes here...&lt;/q&gt; Places a script in the document. Also usable in the head and in block contexts. :Note: &lt;script&gt; is not itself either a block or inline element; by itself it should not display at all, but it can contain instructions to dynamically generate either both block or inline content. Standardized in HTML 3.2; still current.  and  Mark subscript or superscript text. (Equivalent CSS: {vertical-align: sub} or {vertical-align: super}.) Both were proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. An optional line break. Was widely used (and supported by all major browsers) for years despite being non-standard until finally being standardized in HTML 5. Embeds a Java applet in the page. Deprecated in favour of &lt;object&gt;, as it could only be used with Java applets, and had accessibility limitations. Standardized in HTML 3.2; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. As of 2011, still widely used as the implementations of the replacing &lt;object&gt; are not consistent between different browsers. Specifies a focusable area in a map. Standardized in HTML 3.2; still current. Used by visual user agents to insert an image in the document. The src attribute specifies the image URL. The required alt attribute provides alternative text in case the image cannot be displayed.The alt attribute's text cannot be styled with markup; as a result, other methods of alternative text presentation, such as Fahrner Image Replacement, have been devised to accommodate situations in which the coder wishes styled text to be displayed if images are disabled in a user's browser. (Though alt is intended as alternative text, Microsoft Internet Explorer 7 and below render it as a tooltip if no title is given. Safari and Google Chrome, on the other hand, do not display the alt attribute at all.)  img was proposed by Marc Andreessen and implemented in the NSCA Mosaic web browser. IMG existed in HTML Internet Draft 1.2, and was standardized in HTML 2.0; still current. Specifies a client-side image map. Standardized in HTML 3.2; still current. Includes an object in the page of the type specified by the type attribute. This may be in any MIME-type the user agent understands, such as an embedded HTML page, a file to be handled by a plug-in such as Flash, a Java applet, a sound file, etc. Standardized in HTML 4.0; still current. Originally introduced with applet, this element is now used with, and should only occur as a child of object. It uses HTML attributes to set a parameter for the object, e.g. width, height, font, background colour, etc., depending on the type of object. An object can have multiple params. Standardized in HTML 3.2; still current. These elements can be combined into a form or in some instances used separately as user-interface controls; in the document, they can be simple HTML or used in conjunction with Scripts. HTML markup specifies the elements that make up a form, and the method by which it will be submitted. However, some form of scripts (server-side, client-side, or both) must be used to process the userโs input once it is submitted. (These elements are either block or inline elements, but are collected here as their use is more restricted than other inline or block elements.) Creates a form. The form element specifies and operates the overall action of a form area, using the required action attribute. Standardized in HTML 2.0; still current. A generic form button which can contain a range of other elements to create complex buttons. Standardized in HTML 4.0; still current. A container for adding structure to forms. For example, a series of related controls can be grouped within a field-set, which can then have a legend added in order to identify their function. Standardized in HTML 4.0; still current. input elements allow a variety of standard form controls to be implemented. Standardized in HTML 2.0; still current. Input Types: :A checkbox. Can be checked or unchecked. :A radio button. If multiple radio buttons are given the same name, the user will only be able to select one of them from this group. :A general-purpose button. The element &lt;button&gt; is preferred if possible (i.e. if the client supports it) as it provides richer possibilities. :A submit button. :An image button. The image URL may be specified with the src attribute. :A reset button for resetting the form to default values. :A one-line text input field. The size attribute specifies the default width of the input in character-widths. max-length sets the maximum number of characters the user can enter (which may be greater than size). :A variation of text. The difference is that text typed in this field is masked&nbsp;โ characters are displayed as an asterisk, a dot or another replacement. It should be noted, however, that the password is still submitted to the server as clear text, so an underlying secure transport layer like HTTPS is needed if confidentiality is a concern. :A file select field (for uploading files to a server). :hidden inputs are not visible in the rendered page, but allow a designer to maintain a copy of data that needs to be submitted to the server as part of the form. This may, for example, be data that this web user entered or selected on a previous form that needs to be processed in conjunction with the current form. isindex could either appear in the document head or in the body, but only once in a document. Isindex operated as a primitive HTML search form; but was de facto obsoleted by more advanced HTML forms introduced in the early to mid-1990s. Represents a set of hyperlinks composed of a base URI, an ampersand and percent-encoded keywords separated by plus signs. ISINDEX existed in HTML Tags; standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict. Creates a label for a form input (e.g. radio button). Clicking on the label fires a click on the matching input. Standardized in HTML 4.0; still current. A legend (caption) for a fieldset. Standardized in HTML 4.0; still current. Creates an item in a select list. Standardized in HTML 2.0; still current. Identifies a group of options in a select list. Standardized in HTML 4.0; still current. Creates a selection list, from which the user can select a single option. May be rendered as a dropdown list. Standardized in HTML 2.0; still current. A multiple-line text area, the size of which is specified by cols (where  a col is a one-character width of text) and rows HTML attributes. The content of this element is restricted to plain text, which appears in the text area as default text when the page is loaded. Standardized in HTML 2.0; still current. The format of HTML Tables was proposed in the HTML 3.0 Drafts and the later RFC 1942 HTML Tables. They were inspired by the CALS Table Model. Some elements in these proposals were included in HTML 3.2; the present form of HTML Tables was standardized in HTML 4. (Many of the elements used within tables are neither block nor inline elements.) Frames allow a visual HTML Browser window to be split into segments, each of which can show a different document. This can lower bandwidth use, as repeating parts of a layout can be used in one frame, while variable content is displayed in another. This may come at a certain usability cost, especially in non-visual user agents, due to separate and independent documents (or websites) being displayed adjacent to each other and being allowed to interact with the same parent window. Because of this cost, frames (excluding the  element) are only allowed in HTML 4.01 Frame-set. Iframes can also hold documents on different servers. In this case the interaction between windows is blocked by the browser. Sites like Facebook and Twitter use iframes to display content (plugins) on third party websites. Google AdSense uses iframes to display banners on third party websites. In HTML 4.01, a document may contain a  and a  or a  and a , but not both a  and a . However,  can be used in a normal document body. In HTML, longdesc is an attribute used within the image element, frame element, or iframe element. It is supposed to be a URLStrictly an IRI, not a URL; although URLs are a subset of IRIs. to a document that provides a long description for the image, frame, or iframe in question. Note that this attribute should contain a URL, and not as is commonly mistaken, the text of the description itself. Longdesc was designed to be used by screen readers to display image information for computer users with accessibility issues, such as the blind or visually impaired, and is widely implemented by both web browsers and screen readers.  Some developers object that  it is actually seldom used for this purpose, because there are relatively few authors who use the attribute, and most of those authors use it incorrectly, and have used this argument to recommend dropping longdesc. The publishing industry has responded, advocating the retention of longdesc.    Content of description.html:  ... This is an image of a two-layered birthday cake. ...  Since very few graphical browsers support making the link available natively (Opera and iCab being the exceptions), it is useful to include a link to the description page near the img element whenever possible, as this can also aid sighted users.   [D]   The following elements were part of the early HTML developed by Tim Berners-Lee from 1989โ91; they are mentioned in HTML Tags, but deprecated in HTML 2.0 and were never part of HTML standards.  This section lists some widely used obsolete elements, which means they are not used in valid code. They may not be supported in all user agents. HTML 2.0: A menu listing. Should be more compact than a &lt;ul&gt; list. MENU existed in HTML Tags, and was standardized in HTML 2.0; deprecated in HTML 4.0 Transitional; invalid in HTML 4.0 Strict; but then redefined in HTML 5.  A comment in HTML (and related XML, SGML and SHTML) uses the same syntax as the SGML comment or XML comment, depending on the doctype. Unlike most HTML tags, comments do not nest. The markup &lt;!--Xbegin&lt;!--Y-->Xend--> will yield the comment Xbegin&lt;!--Y and the text Xend--> after it. Comments can appear anywhere in a document, as the HTML parser is supposed to ignore them no matter where they appear so long as they are not inside other HTML tag structures. Comments can even appear before the doctype declaration; no other tags are permitted to do this. However, not all browsers and HTML editors are fully compliant with the HTML syntax framework and may do unpredictable things under some syntax conditions. Defective handling of comments only affects about 5% of all browsers and HTML editors in use (IE6 accounting for most of this high percentage). Even then only certain versions are affected by comment mishandling issues. There are a few compatibility quirks involving comments: Identifies a table. Several HTML attributes are possible in HTML Transitional, but most of these are invalid in HTML Strict and can be replaced with style sheets. The summary attribute is however informally required for accessibility purposes, though its usage is not simple. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. Contains a row of cells in a table. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. A table header cell; contents are conventionally displayed bold and centered. An aural user agent may use a louder voice for these items. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. A table data cell. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. Specifies a column group in a table. Proposed in HTML Tables; Standardized in HTML 4.0; still current. Specifies a column in a table. Proposed in HTML Tables; Standardized in HTML 4.0; still current. Specifies a caption for a table. Proposed in the HTML 3.0 Drafts; Standardized in HTML 3.2; still current. Specifies the header part of a table. This section may be repeated by the user agent if the table is split across pages (in printing or other paged media). Proposed in HTML Tables; Standardized in HTML 4.0; still current. Specifies a body of data for the table. Proposed in HTML Tables; Standardized in HTML 4.0; still current. Specifies the footer part of a table. Like , this section may be repeated by the user agent if the table is split across pages (in printing or other paged media). Proposed in HTML Tables; Standardized in HTML 4.0; still current. Contains the set of frame elements for a document. The layout of frames is given by comma separated lists in the rows and cols HTML attributes. Standardized in HTML 4.0 Frameset, obsolete in HTML 5. Defines a single frame, or region, within the frameset. A separate document is linked to a frame using the src attribute inside the frame element. Standardized in HTML 4.0 Frameset, obsolete in HTML 5. Contains normal HTML content for user agents that don't support frames. Standardized in HTML 4.0 Transitional, obsolete in HTML 5. An inline frame places another HTML document in a frame. Unlike an object element, an inline frame can be the "target" frame for links defined by other elements, and it can be selected by the user agent as the focus for printing, viewing its source, and so on. The content of the element is used as alternative text to be displayed if the browser does not support iframes. First introduced by Microsoft Internet Explorer in 1997, standardized in HTML 4.0 Transitional, allowed in HTML 5. These elements were used to show fixed-width text; their use was replaced by pre. plaintext cannot have an end tag โ it terminates the markup and causes the rest of the document to be parsed as if it were plain text. These existed in HTML Tags; deprecated in HTML 2.0; invalid in HTML 4.0. This element related to the original NeXT http server, and was not used once the web had spread to other systems. nextid existed in HTML Tags (described as obsolete); deprecated in HTML 2.0; invalid in HTML 3.2 and later. Causes text to blink. Can be done with CSS where supported: {text-decoration: blink}  (This effect may have negative consequences for people with photosensitive epilepsy; its use on the public Internet should follow the appropriate guidelines.) blink originated in Netscape Navigator and is mostly recognized by its descendants, including Firefox; deprecated or invalid in HTML 2.0 and later. Note that the replacement CSS tag, while standard, is not required to be supported. Creates scrolling text. Can be done with scripting instead. (This effect may have negative consequences for people with photosensitive epilepsy; its use on the public Internet should follow the appropriate guidelines.) There are three options, including Alternate, Scroll and slide. Scrolldelay can also be added. marquee originated in Microsoft Internet Explorer; deprecated or invalid in HTML 4.01 and later. Causes text to not break at end of line, preventing word wrap where text exceeds the width of the enclosing object. Adjacent text may break before and after it. Can be done with CSS: {white-space: nowrap;} nobr is a proprietary element which is recognized by most browsers for compatibility reasons; deprecated or invalid in HTML 2.0 and later. Specifies alternative content, if the embed cannot be rendered. Replaced by the content of the embed or object element. Inserts a non-standard object (like applet) or external content (typically non-HTML) into the document. Deprecated in HTML 4 in favor of the object tag, but then was added back into the HTML 5 specificationJennifer Kyrnin <embed>W3Schools about <embed>   (HTML 4.01 is the updated form of HTML 4.0.)   (Part of the first published description of HTML.)   (This is the final draft of HTML 3.0, which expired without being developed further.) a start tag (&lt;tag&gt;) marking the beginning of an element, which may incorporate any number of HTML attributes; some amount of text content, but no elements (all tags, apart from the applicable end tag, will be interpreted as content); an end tag, in which the element name is prefixed with a slash: &lt;/tag&gt;. In some versions of HTML, the end tag is optional for some elements. The end tag is required in XHTML. a start tag (&lt;tag&gt;) marking the beginning of an element, which may incorporate any number of HTML attributes; some amount of content, including text and other elements; an end tag, in which the element name is prefixed with a slash: &lt;/tag&gt;. Transitional, which contain deprecated elements, but which were intended to provide a transitional period during which authors could update their practices; Frameset, which are versions of the Transitional DTDs which also allow authors to write frameset documents; Strict, which is the up-to date (as at 1999) form of HTML. In the document head, script and style may either link to shared external documents, or contain embedded instructions. (The link element can also be used to link style sheets.) The style attribute is valid in most document body elements for inclusion of inline style instructions. Event-handling attributes, which provide links to scripts, are optional in most elements. script can occur at any point in the document body. For user agents which do not operate scripts, the noscript element provides alternative content where appropriate; however, it can only be used as a block-level element. as rectangular objects which do not break across lines; with block margins, width and height properties which can be set independently of the surrounding elements. The content of an element is the actual text (or other media) placed between the opening and closing tags of an element. The padding of an element is the space around that content, which still form part of said element. Padding is physically part of an element, and should not be used to create white space between two elements. Any background style assigned to the element, such as a background image or color, will be visible within the padding. Increasing the size of an element's padding increases the space this element will take up. The border of an element is the absolute end of an element, and spans the perimeter of that element. The thickness of a border increases the size of an element. The margin of an element is the white-space that surrounds an element. The content, padding and border of any other element will not be allowed to enter this area, unless forced to do so by some advanced CSS placement. Using most standard DTDs, margins on the left and right of different elements will push each other away. Margins on the top or bottom of an element, on the other hand, will not stack, or will inter mingle. This means that the white-space between these elements will be as big as the larger margin between them. Placing comments โ or indeed any characters except for white-space โ before the doctype will cause Internet Explorer 6 to use quirks mode for the HTML page. None of its enclosed contents are processed. For compatibility with some pre-1995 browsers, the contents of style and script elements are still sometimes surrounded by comment delimiters. The BlueGriffon HTML editor, in versions 1.7.x makes comments that are not embedded in the syntax structure  ... {comment tags} ... show up on screen. Other HTML editors may have this same defect. Complete lists of elements and attributes for HTML 4.01

 The International Bank Account Number (IBAN) is an internationally agreed system of identifying bank accounts across national borders to facilitate the communication and processing of cross border transactions with a reduced risk of transcription errors. It was originally adopted by the European Committee for Banking Standards (ECBS), and later as an international standard under ISO 13616:1997. The current standard is ISO 13616:2007, which indicates SWIFT as the formal registrar. Initially developed to facilitate payments within the European Union, it has been implemented by most European countries and many countries in the other parts of the world, especially in the Middle East and in the Caribbean. As of September 2014, 66 countries were using the IBAN numbering system. The IBAN consists of up to 34 alphanumeric characters, comprising a country code, two check digits and a long and detailed bank account-number. The check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. Before IBAN, differing national standards for bank account identification (i.e. bank, branch, routing codes, and account number) were confusing for some users. This often led to necessary routing information being missing from payments. Routing information as specified by ISO 9362 (also known as Business Identifier Codes (BIC code), SWIFT ID or SWIFT code, and SWIFT-BIC) does not require a specific format for the transaction so the identification of accounts and transaction types is left to agreements of the transaction partners. It also does not contain check digits, so errors of transcription were not detectable and it was not possible for a sending bank to validate the routing information prior to submitting the payment. Routing errors caused delayed payments and incurred extra costs to the sending and receiving banks and often to intermediate routing banks. In 1997, to overcome these difficulties, the International Organization for Standardization (ISO) published ISO 13616:1997. This proposal had a degree of flexibility, which the European Committee for Banking Standards (ECBS) believed would make it unworkable, and they produced a "slimmed down" version of the standard which, amongst other things, permitted only upper-case letters and required that the IBAN for each country have a fixed length. ISO 13616:1997 was subsequently withdrawn and replaced by ISO 13616:2003. The standard was revised again in 2007 when it was split into two parts. ISO 13616-1:2007 "specifies the elements of an international bank account number (IBAN) used to facilitate the processing of data internationally in data interchange, in financial environments as well as within and between other industries" but "does not specify internal procedures, file organization techniques, storage media, languages, etc. to be used in its implementation". ISO 13616-2:2007 describes "the Registration Authority (RA) responsible for the registry of IBAN formats that are compliant with ISO 13616-1 [and] the procedures for registering ISO 13616-compliant IBAN formats". The official IBAN registrar under ISO 13616-2:2007 is SWIFT. IBAN imposes a flexible but regular format sufficient for account identification and contains validation information to avoid errors of transcription. It carries all the routing information needed to get a payment from one bank to another wherever it may be; it contains key bank account details such as country code, branch codes (known as sort codes in the UK and Ireland) and account numbers, and it contains check digits which can be validated at source according to a single standard procedure. Where used, IBANs have reduced trans-national money transfer errors to under 0.1% of total payments. The IBAN consists of up to 34 alphanumeric characters, as follows: The check digits enable a sanity check of the bank account number to confirm its integrity before submitting a transaction. The IBAN should not contain spaces when transmitted electronically. When printed it is expressed in groups of four characters separated by a single space, the last group being of variable length as shown in the example below: Permitted IBAN characters are the digits 0 to 9 and the 26 upper-case Latin alphabetic characters A to Z. This applies even in countries (e.g., Thailand) where these characters are not used in the national language. The Basic Bank Account Number (BBAN) format is decided by the national central bank or designated payment authority of each country. There is no consistency between the formats adopted. The national authority may register its BBAN format with SWIFT, but is not obliged to do so. It may adopt IBAN without registration. SWIFT also acts as the registration authority for the SWIFT system, which is used by most countries that have not adopted IBAN. A major difference between the two systems is that under SWIFT there is no requirement that BBANs used within a country be of a pre-defined length. The BBAN must be of a fixed length for the country and comprise case-insensitive alphanumeric characters. It includes the domestic bank account number, branch identifier, and potential routing information. Each country can have a different national routing/account numbering system, up to a maximum of 30 alphanumeric characters. The check digits enable the sending bank (or its customer) to perform a sanity check of the routing destination and account number from a single string of data at the time of data entry. This check is guaranteed to detect any instances where a single character has been omitted, duplicated, mistyped or where two characters have been transposed. Thus routing and account number errors are virtually eliminated. One of the design aims of the IBAN was to enable as much validation as possible to be done at the point of data entry. In particular, the computer program that accepts an IBAN will be able to validate: The check digits are calculated using MOD-97-10 as per ISO/IEC 7064:2003 (abbreviated to mod-97 in this article), which specifies a set of check character systems capable of protecting strings against errors which occur when people copy or key data. In particular, the standard states that the following can be detected: The underlying rules for IBANs is that the account-servicing financial institution should issue an IBAN, as there are a number of areas where different IBANs could be generated from the same account and branch numbers that would satisfy the generic IBAN validation rules. In particular cases where 00 is a valid check digit, 97 will not be a valid check digit, likewise, if 01 is a valid check digit, 98 will not be a valid check digit, similarly with 02 and 99. The UN CEFACT TBG5 has published a free IBAN validation service in 32 languages for all 57 countries that have adopted the IBAN standard. They have also published the Javascript source code of the verification algorithm. An English language IBAN checker for ECBS member country bank accounts is available on its website. An IBAN is validated by converting it into an integer and performing a basic mod-97 operation (as described in ISO 7064) on it. If the IBAN is valid, the remainder equals 1.In equations, the remainder of A divided by B is denoted  ,  See Remainders. The algorithm of IBAN validation is as follows: If the remainder is 1, the check digit test is passed and the IBAN might be valid. Example (fictitious United Kingdom bank, sort code 12-34-56, account number 98765432): According to the ECBS "generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account". The ECBS document replicates part of the ISO/IEC 7064:2003 standard as a method for generating check digits in the range 02 to 98. Check digits in the ranges 00 to 96, 01 to 97, and 03 to 99 will also provide validation of an IBAN, but the standard is silent as to whether or not these ranges may be used. The preferred algorithm is: Any computer programming language or software package that is used to compute D mod 97 directly must have the ability to handle integers of more than 30 digits. In practice, this can only be done by software that either supports arbitrary-precision arithmetic or that can handle 220 bit (unsigned) integers,The maximum length of D in (decimal) digits for the fully generic IBAN with 34 alphanumeric digits (two of which, the check digits, can, however, only be numeric) is (34-2) × 2 + 2 × 1 = 66. 2220 is equal to 1.7 × 1066, from which it can be inferred that 220 bit unsigned integers can accommodate all unsigned integers of 66 digits. features that are often not standard. If the application software in use does not provide the ability to handle integers of this size, the modulo operation can be performed in a piece-wise manner (as is the case with the UN CEFACT TBG5 Javascript program). Piece-wise calculation  can be done in many ways. One such way is as follows: 1. Starting from the leftmost digit of D, construct a number using the first 9 digits and call it N.231 is approximately equal to , making it possible for any 9-digit integer to be handled using 32 bit integer arithmetic 2. Calculate N mod 97. 3. Construct a new 9-digit N by concatenating above result (step 2) with the next 7 digits of D. If there are fewer than 7 digits remaining in D but at least one, then construct a new N, which will have less than 9 digits, from the above result (step 2) followed by the remaining digits of D 4. Repeat steps 2–3 until all the digits of D have been processed The result of the final calculation in step 2 will be D mod 97 = N mod 97. Example In this example, the above algorithm for D mod 97 will be applied to D = 3214282912345698765432161182. (The digits are colour-coded to aid the description below.) If the result is one, the IBAN corresponding to D passes the check digit test. 1. Construct N from the first 9 digits of D : N = 321428291 2. Calculate N mod 97 = 70 3. Construct a new 9-digit N from the above result (step 2) followed by the next 7 digits of D. :N = 702345698 4. Calculate N mod 97 = 29 5. Construct a new 9-digit N from the above result (step 4) followed by the next 7 digits of D. :N = 297654321 6. Calculate N mod 97 = 24 7. Construct a new N from the above result (step 6) followed by the remaining 5 digits of D. :N = 2461182 8. Calculate N mod 97 = 1 From step 8, the final result is D mod 97 = 1 and the IBAN has passed this check digit test.  International bank transactions use either an IBAN or the ISO 9362 Bank Identifier Code system (BIC or SWIFT code) in conjunction with the BBAN. The banks of most countries in Europe publish account numbers using both the IBAN format and the nationally recognised identifiers, this being mandatory within the European Economic Area. Banks in many other countries including most states of the Middle East, North Africa and the Caribbean have implemented the IBAN format for account identification. Day-to-day administration of banking in British Overseas Territories varies from territory to territory — some, such as South Georgia and the South Sandwich Islands, have too small a population to warrant a banking system while others, such as Bermuda, have a thriving financial sector. The use of the IBAN is up to the local government — Gibraltar, being part of the European Union is required to use the IBAN, as are the Crown dependencies, which use the British clearing system and the British Virgin Islands have elected to do so. , no other British Overseas Territories have elected to use the IBAN. Banks in the Caribbean Netherlands also do not use the IBAN. In some countries the IBAN is used on an ad hoc basis, an example being Ukraine where account numbers used for international transfers of four of the national banks have additional aliases that follow the IBAN format as a precursor to formal SWIFT registration. The degree to which bank verifies the validity of a recipient's bank account number depends of the configuration of the transmitting bank's software&mdash;many major software packages supply bank account validation as a standard function. Some banks outside Europe may not recognize IBAN, though this is expected to diminish with time. Non-European banks usually accept IBANs for accounts in Europe, although they might not treat IBANs differently from other foreign bank account numbers. In particular, they might not check the IBAN's validity prior to sending the transfer. Banks in the United States do not use IBAN as account numbers for US accounts. Any adoption of the IBAN standard by US banks would likely be initiated by ANSI ASC X9, the US financial services standards development organization: a working group (WGAB20) was established as an X9 subcommittee to generate an IBAN construction for US Bank accounts. Canadian financial institutions have not adopted IBAN and use bank transit numbers issued by the Canadian Payments Association for domestic transfers, and SWIFT for international transfers. There is no formal governmental or private sector regulatory requirement in Canada for the major banks to use IBAN. Financial institutions in Australia and New Zealand do not use IBAN. They use Bank State Branch codes for domestic transfers and SWIFT for international transfers. Broken link as of September 2015. Archived copy   The IBAN designation scheme was chosen as the foundation for electronic straight-through processing in the European Economic Area. The European Parliament mandated that a bank charge needs to be the same amount for domestic credit transfers as for cross-border credit transfers regulated in decision 2560/2001 (updated in 924/2009). This regulation took effect in 2003. Only payments in euro up to €12,500 to a bank account designated by its IBAN were covered by the regulation. The Euro Payments regulation has been the foundation for the decision to create a Single Euro Payments Area (SEPA). The European Central Bank has created the TARGET2 interbank network that unifies the technical infrastructure of the 26 central banks of the European Union (although Sweden and the UK have opted-out). SEPA is a self-regulatory initiative by the banking sector of Europe as represented in the European Payments Council (EPC). The European Union made the scheme mandatory through the Payment Services Directive published in 2007. Since January 2008, all countries must support SEPA credit transfer, and SEPA direct debit must be supported since November 2009. The regulation on SEPA payments increases the charge cap (same price for domestic payments as for cross-border payments) to €50,000. With a further decision of the European Parliament, the IBAN scheme for bank accounts fully replaced the domestic numbering schemes from 31 December 2012. On 16 December 2010, the European Commission published proposed regulations that will make IBAN support mandatory for domestic credit transfer by 2013 and for domestic direct debit by 2014 (with a 12 and 24 months transition period respectively). Some countries have already replaced their traditional bank account scheme by IBAN. This includes Switzerland where IBAN was introduced for national credit transfer on 1 January 2006 and the support for the old bank account numbers has not been required from 1 January 2010. Based on a 20 December 2011 memorandum, the EU parliament resolved the mandatory dates for the adoption of the IBAN on 14 February 2012. From 1 February 2014, all national systems for credit transfer and direct debit must be abolished and replaced by an IBAN-based system. This will be extended to all cross-border SEPA transactions from 1 February 2016 (Article 5 Section 7). After these dates the IBAN will be sufficient to identify an account for home and foreign financial transactions in SEPA countries and banks will no longer be permitted to require that the customer supply the BIC for the beneficiary's bank. In the run-up to the 1 February 2014 deadline, it became apparent that many old bank account numbers had not been allocated IBANs&mdash;an issue that has to be addressed on a country-by-country basis. In Germany, for example, the German Federal Bank and the German Banking Industry Committee require that all holders of German bank codes ("Bankleitzahl") publish the specifics of their IBAN generation format taking into account not only the generation of check digits but also the handling of legacy bank codes, thereby enabling third parties to generate IBANs independently of the bank. The first such catalogue was published in June 2013 as a variant of the old bank code catalog ("Bankleitzahlendatei"). This table summarises the IBAN formats by country: In addition to the above list, Nordea has catalogued IBANs for countries listed below. In this list There is criticism about the length and readability of IBAN. Printed on paper the IBAN is often difficult to read. Therefore, it is popular to group the IBAN with four symbols. However, for electronic documents (e.g. PDF invoice) the copy and paste of grouped IBAN can result in errors with online banking forms. Only a few  user friendly bank institutes allow and detect the copy and paste of both grouped and ungrouped IBAN. Country IBAN formatting example Greece GR16 0110 1250 0000 0001 2300 695 United Kingdom GB29 NWBK 6016 1331 9268 19 Saudi Arabia SA03 8000 0000 6080 1016 7519 Switzerland CH93 0076 2011 6238 5295 7 • IBAN: GB82 WEST 1234 5698 7654 32 • Rearrange:  W E S T12345698765432 G B82 • Convert to integer: 3214282912345698765432161182 • Compute remainder: 3214282912345698765432161182 mod 97 = 1 Country Chars BBAN Format IBAN Fields Comment Albania 28 8n, 16c ALkk bbbs sssx cccc cccc cccc cccc b = National bank code s = Branch code x = National check digitc = Account number Andorra 24 8n,12c ADkk bbbb ssss cccc cccc cccc b = National bank code s = Branch code c = Account number Austria 20 16n ATkk bbbb bccc cccc cccc b = National bank code c = Account number Azerbaijan 28 4c,20n AZkk bbbb cccc cccc cccc cccc cccc  b = National bank code c = Account number Bahrain 22 4a,14c BHkk bbbb cccc cccc cccc cc b = National bank codec = Account number Belgium 16 12n BEkk bbbc cccc ccxx b = National bank code c = Account number x = National check digits Bosnia and Herzegovina 20 16n BAkk bbbs sscc cccc ccxx k = IBAN check digits (always 39) b = National bank code s = Branch code c = Account number x = National check digits Brazil 29 23n, 1a, 1c BRkk bbbb bbbb ssss sccc cccc ccct n k = IBAN check digits (Calculated by MOD 97-10) b = National bank code s = Branch code c = Account numbert = Account type (Cheque account, Savings account etc.)n = Owner account number ("1", "2" etc.) Bulgaria 22 4a,6n,8c BGkk bbbb ssss ddcc cccc cc b = BIC bank code s = Branch (BAE) number d = Account type c = Account number Costa Rica 21 17n CRkk bbbc cccc cccc cccc c b = bank code c = Account number Croatia 21 17n HRkk bbbb bbbc cccc cccc c b = Bank code c = Account number Cyprus 28 8n,16c CYkk bbbs ssss cccc cccc cccc cccc b = National bank code s = Branch code c = Account number Czech Republic 24 20n CZkk bbbb ssss sscc cccc cccc b = National bank code s = Account number prefix c = Account number Denmark 18 14n DKkk bbbb cccc cccc cc b = National bank code c = Account number Dominican Republic 28 4a,20n DOkk bbbb cccc cccc cccc cccc cccc b = Bank identifier c = Account number East Timor 23 19n TLkk bbbc cccc cccc cccc cxx k = IBAN check digits (always = "38") b = Bank identifier c = Account number x = National check digit Estonia 20 16n EEkk bbss cccc cccc cccx b = National bank code s = Branch code c = Account number x = National check digit Faroe IslandsRegistered at SWIFT as part of Denmark, but with its own country code. 18 14n FOkk bbbb cccc cccc cx b = National bank code c = Account number  x = National check digit Finland 18 14n FIkk bbbb bbcc cccc cx b = Bank and branch code c = Account number x = National check digit FranceFrench Guyana, French Polynesia, French Southern Territories, Guadeloupe, Martinique, Mayotte, New Caledonia, Réunion, Saint Barthélemy, Saint Martin (French part), Saint Pierre and Miquelon, and Wallis and Futuna Islands have their own ISO country code but use "FR" as their IBAN country code. 27 10n,11c,2n FRkk bbbb bggg ggcc cccc cccc cxx b = National bank code g = Branch code () c = Account number x = National check digits () Georgia 22 2c,16n GEkk bbcc cccc cccc cccc cc b = National bank code  c = Account number Germany 22 18n DEkk bbbb bbbb cccc cccc cc b = Bank and branch identifier ( or BLZ) c = Account number Gibraltar 23 4a,15c GIkk bbbb cccc cccc cccc ccc b = BIC bank code c = Account number Greece 27 7n,16c GRkk bbbs sssc cccc cccc cccc ccc b = National bank code s = Branch code c = Account number Greenland 18 14n GLkk bbbb cccc cccc cc b = National bank code c = Account number Guatemala  28 4c,20c GTkk bbbb mmtt cccc cccc cccc cccc b = National bank code c = Account number m = Currency t = Account type Hungary 28 24n HUkk bbbs sssk cccc cccc cccc cccx b = National bank code s = Branch code c = Account number  x = National check digit Iceland 26 22n ISkk bbbb sscc cccc iiii iiii ii b = National bank code s = Branch code c = Account number i = holder's kennitala (national identification number). Ireland 22 4c,14n IEkk aaaa bbbb bbcc cccc cc a = BIC bank code b = Bank/branch code (sort code) c = Account number Israel 23 19n ILkk bbbn nncc cccc cccc ccc b = National bank code n = Branch number c = Account number 13 digits (padded with zeros) Italy 27 1a,10n,12c ITkk xaaa aabb bbbc cccc cccc ccc x = Check char () a = National bank code ( or Codice ABI ) b = Branch code ( or CAB – Codice d'Avviamento Bancario) c = Account number Jordanhttp://www.citi.com/jordan/homepage/pdf/IBAN-letter.pdf 30 4a, 22n JOkk bbbb nnnn cccc cccc cccc cccc cc b = National bank code n = Branch code c = Account number Kazakhstan 20 3n,13c KZkk bbbc cccc cccc cccc b = National bank code c = Account number Kosovo 20 4n,10n,2n XKkk bbbb cccc cccc cccc b = National bank code c = Account number Kuwait 30 4a, 22c KWkk bbbb cccc cccc cccc cccc cccc cc b = National bank code c = Account number. Latvia 21 4a,13c LVkk bbbb cccc cccc cccc c b = BIC Bank code c = Account number Lebanon 28 4n,20c LBkk bbbb cccc cccc cccc cccc cccc b = National bank code c = Account number Liechtenstein 21 5n,12c LIkk bbbb bccc cccc cccc c b = National bank code c = Account number Lithuania 20 16n LTkk bbbb bccc cccc cccc b = National bank code c = Account number Luxembourg 20 3n,13c LUkk bbbc cccc cccc cccc b = National bank code c = Account number Macedonia 19 3n,10c,2n MKkk bbbc cccc cccc cxx k = IBAN check digits (always = "07")b = National bank code c = Account number x = National check digits Malta 31 4a,5n,18c MTkk bbbb ssss sccc cccc cccc cccc ccc b = BIC bank code s = Branch code c = Account number Mauritania 27 23n MRkk bbbb bsss sscc cccc cccc cxx k = IBAN check digits (always 13)b = National bank code s = Branch code () c = Account number x = National check digits () Mauritius 30 4a,19n,3a MUkk bbbb bbss cccc cccc cccc 000d dd b = National bank code s = Branch identifier c = Account number 0 = Zeroes  d = Currency Symbol Monaco 27 10n,11c,2n MCkk bbbb bsss sscc cccc cccc cxx b = National bank code s = Branch code () c = Account number x = National check digits (). Moldova 24 2c,18c MDkk bbcc cccc cccc cccc cccc b = National bank codec = Account number Montenegro 22 18n MEkk bbbc cccc cccc cccc xx k = IBAN check digits (always = "25") b = Bank code c = Account number x = National check digits NetherlandsNot applicable to Aruba, Curaçao, Sint Maarten, and the Caribbean Netherlands. 18 4a,10n NLkk bbbb cccc cccc cc b = BIC Bank code c = Account number Norway 15 11n NOkk bbbb cccc ccx b = National bank code c = Account number x = Modulo-11 national check digit Pakistan 24 4c,16n PKkk bbbb cccc cccc cccc cccc b = National bank code c = Account number Palestinian territories 29 4c,21n PSkk bbbb xxxx xxxx xccc cccc cccc c b = National bank code c = Account numberx = Not specified Poland 28 24n PLkk bbbs sssx cccc cccc cccc cccc b = National bank code s = Branch code x = National check digit c = Account number, Portugal 25 21n PTkk bbbb ssss cccc cccc cccx x k = IBAN check digits (always = "50") b = National bank code s = Branch code C = Account number x = National check digit Qatar 29 4a, 21c QAkk bbbb cccc cccc cccc cccc cccc c b = National bank code c = Account number Romania 24 4a,16c ROkk bbbb cccc cccc cccc cccc b = BIC Bank code c = Branch code and account number (bank-specific format) San Marino 27 1a,10n,12c SMkk xaaa aabb bbbc cccc cccc ccc x = Check char () a = National bank code ( or Codice ABI)  b = Branch code ( or CAB – Codice d'Avviamento Bancario) c = Account number Saudi Arabia 24 2n,18c SAkk bbcc cccc cccc cccc cccc b = National bank code c = Account number preceded by zeros, if required Serbia 22 18n RSkk bbbc cccc cccc cccc xx b = National bank code c = Account number x = Account check digits Slovakia 24 20n SKkk bbbb ssss sscc cccc cccc b = National bank code s = Account number prefix c = Account number Slovenia 19 15n SIkk bbss sccc cccc cxx k = IBAN check digits (always = "56") b = National bank code  s = Branch code c = Account number x = National check digits Spain 24 20n ESkk bbbb gggg xxcc cccc cccc b = National bank code g = Branch code x = Check digits c = Account number Sweden 24 20n SEkk bbbc cccc cccc cccc cccc b = National bank code c = Account number Switzerland 21 5n,12c CHkk bbbb bccc cccc cccc c b = National bank code c = Account number Tunisia 24 20n TNkk bbss sccc cccc cccc cccc k = IBAN check digits (always 59)b = National bank code s = Branch code c = Account number Turkey 26 5n,17c TRkk bbbb bxcc cccc cccc cccc cc b = National bank code x = Reserved for future use (currently "0") c = Account number United Arab Emirates 23 3n,16n AEkk bbbc cccc cccc cccc ccc b = National bank code c = Account number United KingdomThe United Kingdom of Great Britain and Northern Ireland, the Isle of Man and the Bailiwicks of Guernsey and Jersey use this format. British Overseas Territories have their own formats &mdash; only Gibraltar and the British Virgin Islands use IBANs. 22 4a,14n GBkk bbbb ssss sscc cccc cc b = BIC bank code s = Bank and branch code (sort code) c = Account number Virgin Islands, British 24 4c,16n VGkk bbbb cccc cccc cccc cccc b = National bank code c = Account number Country Chars Example Algeria 24 DZkk nnnn nnnn nnnn nnnn nnnn Angola 25 AOkk nnnn nnnn nnnn nnnn nnnn n Benin 28 BJkk annn nnnn nnnn nnnn nnnn nnnn Burkina Faso 27 BFkk nnnn nnnn nnnn nnnn nnnn nnn Burundi 16 BIkk nnnn nnnn nnnn Cameroon 27 CMkk nnnn nnnn nnnn nnnn nnnn nnn Cape Verde 25 CVkk nnnn nnnn nnnn nnnn nnnn n Iran 26 IRkk nnnn nnnn nnnn nnnn nnnn nn Ivory Coast 28 CIkk annn nnnn nnnn nnnn nnnn nnnn Madagascar 27 MGkk nnnn nnnn nnnn nnnn nnnn nnn Mali 28 MLkk annn nnnn nnnn nnnn nnnn nnnn Mozambique 25 MZkk nnnn nnnn nnnn nnnn nnnn n Senegal 28 SNkk annn nnnn nnnn nnnn nnnn nnnn Ukraine 29 UAkk bbbb bbcc cccc cccc cccc cccc c country code using ISO 3166-1 alpha-2 - two letters, check digits - two digits, and Basic Bank Account Number (BBAN) - up to 30 alphanumeric characters that are country-specific. Country code Number of characters in the IBAN correspond to the number specified for the country code BBAN format specified for the country code Account number, bank code and country code combination is compatible with the check digits All single substitution errors (the substitution of a single character for another, for example 4234 for 1234) All or nearly all single (local) transposition errors (the transposition of two single characters, either adjacent or with one character between them, for example 12354 or 12543 for 12345) All or nearly all shift errors (shifts of the whole string to the left or right) High proportion of double substitution errors (two separate single substitution errors in the same string, for example 7234587 for 1234567) High proportion of all other errors Check that the total IBAN length is correct as per the country. If not, the IBAN is invalid Move the four initial characters to the end of the string Replace each letter in the string with two digits, thereby expanding the string, where A = 10, B = 11, ..., Z = 35 Interpret the string as a decimal integer and compute the remainder of that number on division by 97 Check that the total IBAN length is correct as per the country. If not, the IBAN is invalid Replace the two check digits by 00 (e.g. GB00 for the UK) Move the four initial characters to the end of the string Replace the letters in the string with digits, expanding the string as necessary, such that A or a = 10, B or b = 11, and Z or z = 35. Each alphabetic character is therefore replaced by 2 digits Convert the string to an integer (i.e. ignore leading zeroes) Calculate mod-97 of the new number, which results in the remainder Subtract the remainder from 98, and use the result for the two check digits. If the result is a single digit number, pad it with a leading 0 to make a two-digit number The kk after the two-character ISO country code represents the check digits calculated from the rest of the IBAN characters. If it is a constant for the country concerned, this will be stated in the Comments column. This happens where the BBAN has its own check digits that use the same algorithm as the IBAN check digits The BBAN format column shows the format of the BBAN part of an IBAN in terms of upper case alpha characters (A–Z) denoted by "a", numeric characters (0–9) denoted by "n" and mixed case alphanumeric characters (a–z, A–Z, 0–9) denoted by "c". For example, the Bulgarian BBAN (4a,6n,8c) consists of 4 alpha characters, followed by 6 numeric characters, then by 8 mixed-case alpha-numeric characters Descriptions in the Comments field have been standardised with country specific names in brackets. The format of the various fields can be deduced from the BBAN field Countries that are planning to introduce the IBAN are shown in italics with the planned date of introduction in bold "kk" represent the IBAN checksum "a" represents an alphabetic character "n" represents a numeric character "b" represents a bank code character "c" represents an account digit. Bank card number Bank regulation Routing transit number Official ISO 13616 Registry Society for Worldwide Interbank Financial Telecommunication (SWIFT) ISO 13616-1:2007 International Organization for Standardization (ISO) IBAN Implementation Guidelines State Bank of Pakistan, 15 May 2012 Handbook of the Standardization and Application of BBAN and IBAN in Cyprus Central Bank of Cyprus Check digits (or characters) are a 'checksum' on a number to help prevent manual typing errors. in PHP Check digits (or characters) are a 'checksum' on a number to help prevent manual typing errors. in PHP

 Interactive fiction, often abbreviated IF, is software simulating environments in which players use text commands to control characters and influence the environment. Works in this form can be understood as literary narratives, either in the form of Interactive narratives or Interactive narrations. These works can also be understood as a form of video game,Montfort, Nick & Urbano, Paulo (Tr.). A quarta Era da Ficção Interactiva. Nada, Volume 8. October 2006. either in the form of an adventure game or role-playing game. In common usage, the term refers to text adventures, a type of adventure game where the entire interface can be "text-only", however, Graphical text adventure games, where the text is accompanied by graphics (still images, animations or video) still fall under the text adventure category if the main way to interact with the game is by typing text. Some users of the term distinguish between interactive fiction, known as "Puzzle-free", that focuses on narrative, and "text adventures" that focus on puzzles. As a commercial product, interactive fiction reached its peak in popularity from 1979 to 1986, as a dominant software product marketed for home computers. Due to their text-only nature, they sidestepped the problem of writing for widely divergent graphics architectures. This meant that interactive fiction games were easily ported across all the popular platforms at the time, including CP/M (not known for gaming or strong graphics capabilities). Today, a steady stream of new works is produced by an online interactive fiction community, using freely available development systems. The term can also be used to refer to digital versions of literary works that are not read in a linear fashion, known as gamebooks, where the reader is instead given choices at different points in the text; these decisions determine the flow and outcome of the story. The most famous example of this form of printed fiction is the Choose Your Own Adventure book series, and the collaborative "" format has also been described as a form of interactive fiction.Soultanis, Greg. Mullin, Eileen, ed. XYZZY News - The Magazine for Interactive Fiction Enthusiasts. Issue #4. July/August 1995.  The term Interactive fiction is sometimes used wrongly as a synonym for Interactive movies or visual novels (a popular style of entertainment software in Japan) which are alternative forms of interactive narrative.  Text adventures are one of the oldest types of computer games and form a subset of the adventure genre. The player uses text input to control the game, and the game state is relayed to the player via text output. Input is usually provided by the player in the form of simple sentences such as "get key" or "go east", which are interpreted by a text parser. Parsers may vary in sophistication; the first text adventure parsers could only handle two-word sentences in the form of verb-noun pairs. Later parsers, such as those built on Infocom's ZIL (Zork Implementation Language), could understand complete sentences.DeMaria, Rusel and Wilson, Johnny L.  (2002) High Score!: The Illustrated History of Electronic Games McGraw-Hill/Osborne, Berkeley, Calif., p. 52, ISBN 0-07-222428-2  Later parsers could handle increasing levels of complexity parsing sentences such as "open the red box with the green key then go north". This level of complexity is the standard for works of interactive fiction today. Despite their lack of graphics, text adventures include a physical dimension where players move between rooms. Many text adventure games boasted their total number of rooms to indicate how much gameplay they offered. These games are unique in that they may create an illogical space, where going north from area A takes you to area B, but going south from area B did not take you back to area A. This can create mazes that do not behave as players expect, and thus players must maintain their own map. These illogical spaces are much more rare in today's era of 3D gaming, and the Interactive Fiction community in general decries the use of mazes entirely, claiming that mazes have become arbitrary 'puzzles for the sake of puzzles' and that they can, in the hands of inexperienced designers, become immensely frustrating for players to navigate. Interactive fiction shares much in common with Multi-User Dungeons ('MUDs'). MUDs, which became popular in the mid-1980s, rely on a textual exchange and accept similar commands from players as do works of IF; however, since interactive fiction is single player, and MUDs, by definition, have multiple players, they differ enormously in gameplay styles. MUDs often focus gameplay on activities that involve communities of players, simulated political systems, in-game trading, and other gameplay mechanics that aren't possible in a single player environment. Interactive fiction usually relies on reading from a screen and on typing input, although text-to-speech synthesizers allow blind and visually impaired users to play interactive fiction titles as audio games. Interactive fiction features two distinct modes of writing: the player input and the game output. As described above, player input is expected to be in simple command form (imperative sentences). A typical command may be: pull lever The responses from the game are usually written from a second-person point of view, in present tense. This is because, unlike in most works of fiction, the main character is closely associated with the player, and the events are seen to be happening as the player plays. While older text adventures often identified the protagonist with the player directly, newer games tend to have specific, well-defined protagonists with separate identities from the player. The classic essay "Crimes Against Mimesis"  This is a reformatted version of a set of articles originally posted to Usenet:      discusses, among other IF issues, the nature of "You" in interactive fiction. A typical response might look something like this, the response to "look in tea chest" at the start of Curses: That was the first place you tried, hours and hours ago now, and there's nothing there but that boring old book. You pick it up anyway, bored as you are.Nelson, Graham Curses, 1993. Many text adventures, particularly those designed for humour (such as Zork, The Hitchhiker's Guide to the Galaxy, and Leather Goddesses of Phobos), address the player with an informal tone, sometimes including sarcastic remarks (see the transcript from Curses, above, for an example). The late Douglas Adams, in designing the IF version of his 'Hitchhiker's Guide to the Galaxy', created a unique solution to the final puzzle of the game: the game requires the one solitary item that the player didn't choose at the outset of play. Some IF works dispense with second-person narrative entirely, opting for a first-person perspective ('I') or even placing the player in the position of an observer, rather than a direct participant.  In some 'experimental' IF, the concept of self-identification is eliminated entirely, and the player instead takes the role of an inanimate object, a force of nature, or an abstract concept; experimental IF usually pushes the limits of the concept and challenges many assumptions about the medium. Around 1975, Will Crowther, a programmer and an amateur caver, wrote the first text adventure game, Adventure (originally called ADVENT because a filename could only be six characters long in the operating system he was using, and later named Colossal Cave Adventure). Having just gone through a divorce, he was looking for a way to connect with his two young children. Over the course of a few weekends, he wrote a text based cave exploration game that featured a sort of guide/narrator who talked in full sentences and who understood simple two word commands that came close to natural English. Adventure was programmed in Fortran for the PDP-10. Crowther's original version was an accurate simulation of part of the real Colossal Cave, but also included fantasy elements (such as axe-wielding dwarves and a magic bridge). Stanford University graduate student Don Woods discovered Adventure while working at the Stanford Artificial Intelligence Laboratory, and in 1977 obtained and expanded Crowther's source code (with Crowther's permission). Woods's changes were reminiscent of the writings of J.R.R. Tolkien, and included a troll, elves, and a volcano some claim is based on Mount Doom, but Woods says was not."Even the description of the volcano, which some writers have claimed was modelled after Mount Doom, was written with no particular vision in mind."   In early 1977, Adventure spread across ARPAnet, and has survived on the Internet to this day. The game has since been ported to many other operating systems, and was included with the floppy-disk distribution of Microsoft's MS-DOS 5.0 OS.  Adventure is a cornerstone of the online IF community; there currently exist dozens of different independently-programmed versions, with additional elements, such as new rooms or puzzles, and various scoring systems. The popularity of Adventure led to the wide success of interactive fiction during the late 1970s, when home computers had little, if any, graphics capability. Many elements of the original game have survived into the present, such as the command 'xyzzy', which is now included as an Easter Egg in modern games, such as Microsoft Minesweeper. Adventure was also directly responsible for the founding of Sierra Online (later Sierra Entertainment); Ken and Roberta Williams played the game and decided to design one of their own, but with graphics. Adventure International was founded by Scott Adams (not to be confused with the creator of Dilbert). In 1978, Adams wrote Adventureland, which was loosely patterned after (the original) Colossal Cave Adventure. He took out a small ad in a computer magazine in order to promote and sell Adventureland, thus creating the first commercial adventure game. In 1979 he founded Adventure International, the first commercial publisher of interactive fiction. The largest company producing works of interactive fiction was Infocom, which created the Zork series and many other titles, among them Trinity, The Hitchhiker's Guide to the Galaxy and A Mind Forever Voyaging. In June 1977, Marc Blank, Bruce K. Daniels, Tim Anderson, and Dave Lebling began writing the mainframe version of Zork (also known as Dungeon), at the MIT Laboratory for Computer Science. The game was programmed in a computer language called MDL, a variant of LISP. The term Implementer was the self-given name of the creators of the text adventure series Zork called themselves Implementers, it is for this reason that game designers and programmers can be referred to as an Implementer (video games), often shortened to Imp, rather than a writer. In early 1979, the game was completed. Ten members of the MIT Dynamics Modelling Group went on to join Infocom when it was incorporated later that year. In order to make its games as portable as possible, Infocom developed the Z-machine, a custom virtual machine which could be implemented on a large number of platforms, and which took standardized "story files" as input. In a non-technical sense, Infocom was responsible for developing the interactive style that would be emulated by many later interpreters. The Infocom parser was widely regarded as the best of its era. It accepted complex, complete sentence commands like "put the blue book on the writing desk" at a time when most of its competitors parsers were restricted to simple two word verb-noun combinations such as "put book". The parser was actively upgraded with new features like undo and error correction, and later games would 'understand' multiple sentence input: 'pick up the gem and put it in my bag. take the newspaper clipping out of my bag then burn it with the book of matches'. Several companies offered optional commercial feelies (physical props associated with a game). The tradition of 'Feelies' (and the term itself) is believed to have originated with Deadline (1982), the third Infocom title after Zork I and II. When writing this game, it was not possible to include all of the information in the limited (80KB) disk space, so Infocom created the first feelies for this game; extra items that gave more information than could be included within the digital game itself. These included police interviews, the coroner's findings, letters, crime scene evidence and photo of the murder scene. These materials were very difficult for other to copy or otherwise reproduce, and many included information which was essential to completing the game. Seeing the potential benefits of both aiding game-play immersion and providing a measure of creative copy-protection, in addition to acting as a deterrent to software piracy, Infocom and later other companies began creating feelies for numerous titles. In 1987, Infocom released a special version of the first three Zork titles together with plot-specific coins and other trinkets. This concept would see expansion as time went on, such that later game feelies would contain passwords, coded instructions, page numbers, or other information that would be required to successfully complete the game. Whilst Interactive fiction became a standard product for many software companies. By 1982 Softline wrote that "the demands of the market are weighted heavily toward hi-res graphics" in games like Sierra's The Wizard and the Princess and its imitators. Such graphic adventures became the dominant form of the genre on computers with graphics, like the Apple II. By 1982 Adventure International began releasing versions of its games with graphics. The company went bankrupt in 1985. Synapse Software and Acornsoft were also closed in 1985. Leaving Infocom as the leading company producing text-only adventure games on the Apple II with sophisticated parsers and writing, and still advertising its lack of graphics as a virtue. The company was bought by Activision in 1986 after the failure of Cornerstone, Infocom's database software program, and stopped producing text adventures a few years later. Soon after Telaium/Trillium also closed. Probably the first commercial work of interactive fiction produced outside the U.S. was the dungeon crawl game of Acheton, produced in Cambridge, England, and first commercially released by Acornsoft (later expanded and reissued by Topologika). Other leading companies in the U.K. were Magnetic Scrolls and Level 9 Computing. Also worthy of mention are Delta 4, Melbourne House, and the homebrew company Zenobi. In the early 1980s Edu-Ware also produced interactive fiction for the Apple II as designated by the "if" graphic that was displayed on startup. Their titles included the Prisoner and Empire series (Empire I: World Builders, Empire II: Interstellar Sharks, Empire III: Armageddon). In 1981, CE Software published SwordThrust as a commercial successor to the Eamon gaming system for the Apple II. SwordThrust and Eamon were simple two-word parser games with many role-playing elements not available in other interactive fiction. While SwordThrust published seven different titles, it was vastly overshadowed by the non-commercial Eamon system which allowed private authors to publish their own titles in the series. By March 1984, there were 48 titles published for the Eamon system [and over 270 titles in total as of March 2013]. In Italy, interactive fiction games were mainly published and distributed through various magazines in included tapes. The largest number of games were published in the two magazines Viking and Explorer, with versions for the main 8-bit home computers (Sinclair ZX Spectrum, Commodore 64 and MSX). The software house producing those games was Brainstorm Enterprise, and the most prolific IF author was Bonaventura Di Bello, who produced 70 games in the Italian language. The wave of interactive fiction in Italy lasted for a couple of years thanks to the various magazines promoting the genre, then faded and remains still today a topic of interest for a small group of fans and less known developers, celebrated on Web sites and in related newsgroups. In Spain, interactive fiction was considered a minority genre, and was not very much successful. The first Spanish interactive fiction commercially released was Yenght in 1983, by Dinamic Software, for the ZX Spectrum. Later on, it was in 1987, when the same company produced an interactive fiction about Don Quijote. After several other attempts, a company emerged from Dinamic, called Aventuras AD which was the main interactive fiction publisher in Spain, including titles like a Spanish adaptation of Colossal Cave Adventure, an adaptation of the Spanish comic El Jabato, and mainly the Ci-U-Than trilogy, composed by La diosa de Cozumel (1990), Los templos sagrados (1991) and Chichen Itzá (1992). During this period, the Club de Aventuras AD (CAAD), the main Spanish speaking community around interactive fiction in the world, was founded, and after the end of Aventuras AD in 1992, the CAAD continued on its own, first with their own magazine, and then with the advent of Internet, with the launch of an active internet community that still produces interactive non commercial fiction nowadays. Legend Entertainment was founded by Bob Bates and Mike Verdu in 1989. It started out from the ashes of Infocom. The text adventures produced by Legend Entertainment used (high-resolution) graphics as well as sound. Some of their titles include Eric the Unready, the Spellcasting series and Gateway (based on Frederik Pohl's novels). The last text adventure created by Legend Entertainment was Gateway II(1992), while the last game ever created by Legend was Unreal II: The Awakening(2003) - the well-known first-person shooter action game using the Unreal Engine for both impressive graphics and realistic physics. In 2004 Legend Entertainment was acquired by Atari, who published Unreal II and released for both Microsoft Windows and Microsoft's Xbox. Many other companies such as Level 9 Computing, Magnetic Scrolls, Delta 4 and Zenobi had also closed by 1992. In 1991 and 1992, Activision released The Lost Treasures of Infocom in two volumes, a collection containing most of Infocom's games, followed in 1996 by Classic Text Adventure Masterpieces of Infocom. After the decline of the commercial interactive fiction market in the 1990s, an online community eventually formed around the medium. In 1987, the Usenet newsgroup rec.arts.int-fiction was created, and was soon followed by rec.games.int-fiction. By custom, the topic of rec.arts.int-fiction is interactive fiction authorship and programming, while rec.games.int-fiction encompasses topics related to playing interactive fiction games, such as hint requests and game reviews. As of late 2011, discussions between writers have mostly moved from rec.arts.int-fiction to the Interactive Fiction Community Forum.intfiction.org • Index page One of the most important early developments was the reverse-engineering of Infocom's Z-Code format and Z-Machine virtual machine in 1987 by a group of enthusiasts called the InfoTaskForce and the subsequent development of an interpreter for Z-Code story files. As a result, it became possible to play Infocom's work on modern computers. For years amateurs with the IF community produced interactive fiction works of relatively limited scope using the Adventure Game Toolkit and similar tools. The breakthrough that allowed the interactive fiction community to truly prosper, however, was the creation and distribution of two sophisticated development systems. In 1987, Michael J. Roberts released TADS, a programming language designed to produce works of interactive fiction. In 1993, Graham Nelson released Inform, a programming language and set of libraries which compiled to a Z-Code story file. Each of these systems allowed anyone with sufficient time and dedication to create a game, and caused a growth boom in the online interactive fiction community. Despite the lack of commercial support, the availability of high quality tools allowed enthusiasts of the genre to develop new high quality games. Competitions such as the annual Interactive Fiction Competition for short works, the Spring Thing for longer works, and the XYZZY Awards, further helped to improve the quality and complexity of the games. Modern games go much further than the original "Adventure" style, improving upon Infocom games, which relied extensively on puzzle solving, and to a lesser extent on communication with non player characters, to include experimentation with writing and story-telling techniques. While the majority of modern interactive fiction developed is distributed for free, there are some commercial endeavors. In 1998, Michael Berlyn a former an Implementor at Infocom, started a new game company, Cascade Mountain Publishing, whose goals were to publish interactive fiction. Despite the Interactive Fiction community providing social and financial backing Cascade Mountain Publishing went out of business in 2000. Other commercial endeavors include; Peter Nepstad's 1893: A World's Fair Mystery, several games by Howard Sherman published as Malinche Entertainment, The General Coffee Company's Future Boy!, Cypher, a graphically enhanced cyberpunk game and various titles by Textfyre. Emily Short was commissioned to develop the game City of Secrets but the project fell through and she ended up releasing it herself. To learn more about the history of Interactive Fiction, see the Get Lamp documentary. The original Interactive fiction Colossal Cave Adventure was programmed in Fortran, originally developed by IBM. Whilst Fortran is heavily criticized nowadays, but it was far more legible than the machine-level code. Adventure's parsers could only handle two-word sentences in the form of verb-noun pairs. Infocom's games of 1979-88, such as Zork, were written using a LISP-like programming language called ZIL (Zork Implementation Language or Zork Interactive Language, it was referred to as both) that compiled into a byte code able to run on a standardized virtual machine called the Z-machine. As the games were text based and used variants of the same Z-machine interpreter, the interpreter only had to be ported to a computer once, rather than once each game. Each game file included a sophisticated parser which allowed the user to type complex instructions to the game. Unlike earlier works of interactive fiction which only understood commands of the form 'verb noun', Infocom's parser could understand a wider variety of sentences. For instance one might type "open the large door, then go west", or "go to the hall". With the Z-machine, Infocom was able to release most of their games for most popular home computers of the time simultaneously, including  Apple II family, Atari 800, IBM PC compatibles, Amstrad CPC/PCW (one disc worked on both machines), Commodore 64, Commodore Plus/4, Commodore 128, Kaypro CP/M, Texas Instruments TI-99/4A, the Mac, Atari ST, the Commodore Amiga and the Radio Shack TRS-80.  Infocom was also known for shipping creative props, or "feelies" (and even "smellies"), with its games. During the 1990's Interactive fiction was mainly written with C-like languages, such as TADS 2 and Inform 6. A number of systems for writing interactive fiction now exist. The most popular remain Inform, TADS, or ADRIFT, but it should be noted that they diverged in their approach to IF-writing during the 2000s, giving today's IF writers a objective choice. By 2006 IFComp, most games were written for Inform, with a strong minority of games for TADS and ADRIFT, followed by a small number of games for other systems. While familiarity with a programming language leads many new authors to attempt to produce their own complete IF application, most established IF authors recommend use of a specialised IF language, arguing that such systems allow authors to avoid the technicalities of producing a full featured parser, while allowing broad community support. The choice of authoring system usually depends on the author's desired balance of ease of use versus power, and the portability of the final product. Other development systems include: Interpreters are the software used to play the works of interactive fiction created with a development system. Since they need to interact with the player, the "story files" created by development systems are programs in there own right. Rather than running directly on any one computer, they are programs run by Interpreters, or virtual machines, which are designed specially for IF. They may be part of the development system, or can be compiled together with the work of fiction as a standalone executable file. The Z-machine was designed by the founders of Infocom, in 1979. They were influenced by the then-new idea of a virtual Pascal computer, but replaced P with Z for Zork, the celebrated adventure game of 1977-79. The Z-machine evolved during the 1980s but over 30 years later, it remains in use essentially unchanged. Glulx was designed by Andrew Plotkin in the late 1990's as a new-generation IF virtual machine. It overcomes the technical constraint on the Z-machine by being a 32-bit rather than 16-bit processor. Frotz is a modern Z-machine interpreter originally written in C (programming language) by Stefan Jokisch in 1995 for DOS. Over time it was ported to other platforms, such as Unix, RISC OS, Mac OS and most recently iOS. Modern Glulx interpreters are based on "Glulxe", by Andrew Plotkin, and "Git", by Iain Merrick. Other interpreters include Zoom for Mac OS X, or for Unix or Linux, maintained by Andrew Hunter, and Spatterlight for Mac OS X, maintained by Tor Andersson. In addition to commercial distribution venues and individual websites, many works of free interactive fiction are distributed through community websites. These include the Interactive Fiction Database (IFDb),  The Interactive Fiction Reviews Organization (IFRO), a game catalog and recommendation engine, and the Interactive Fiction Archive. Works may be distributed for playing with in a separate interpreter. In which case they are often made available in the Blorb package format that many interpreters support. All of the interpreters we recommend can read blorb files. A filename ending .zblorb is a story file intended for a Z-machine in a Blorb wrapper, while a filename ending .gblorb is a story file intended for a Glulx in a Blorb wrapper. It is not common but IF files are sometimes also seen without a Blorb wrapping, though this usually means cover art, help files, and so forth are missing, like a book with the covers torn off. Z-machine story files usually have names ending .z5 or .z8, the number being a version number, and Glulx story files usually end .ulx. Alternatively, works may be distributed for playing in a web browser. For example, the 'Parchment' project is for web browser-based IF Interpreter, for both Z-machine and Glulx files. Some software such as Twine (software) publishes directly to HTML, the standard language used to create web pages, reducing the requirement for an Interpreter or virtual machine. A brief list of advantages, disadvantages, debate and criticisms of interactive fiction. Until recently playing an IF title meant not only downloading a game file but also downloading an interpreter in order to read game files. This has the advantage that a story file is able to run on any number of different types of computer and as the story file is isolated from the host computer it is not possible to alter or damage any of the hosts other files. However, whilst this relativity easy method of acquisition, the disadvantage is that the story file can only be used with an interpreter. Furthermore many people are cautious downloading files and programs from the internet unless it is from a reputable source, in case they accidentally download unstable software or something malicious. The lack of a commercial Corporation or Company legally responsible for the product and its distribution only adds to the distrust. The presence of an official website for a title does not make this any less so. With the development of web based interpreters also title to run in a web browser the risk has been reduced. The downside of this is that it is not possible to save or skip chapters whilst using these. This is essential for most people, for books you can use bookmarks and for computer games you have levels, which levels can be selected to play, and the gameplay progresses after the level is completed. All IF title share a standard set of common commands based on a two word verb-noun combination. However, many players, particularly new players, can easily become frustrated with the lack of prompts, the limited vocabulary, and limited combinations that they are permitted to use. Some attempts have been made to include software that is capable of syntax guessing was a notable failure, perhaps the introduction of predictive text or spell check might help reduce some errors and “I don’t understand”. The concept that you can type in any grammatically correct sentence and the game will understand your commands is simply not true. IF author Emily Shot has noted, “the command prompt is a lie. It tells the player “type something, and I’ll understand you. Which it won’t”. This implication that the player can type anything leads new readers to lots of frustration. However, she also points out “I haven’t much interest in the simulate-everything, let-the-player-do-anything kind of IF...you could spend an eternity building the world-model to offer the player as much freedom as possible, and wind up with something utterly flaccid and dull when you were done, where no action is meaningful because all actions are possible”. Part of the experience is in the formulation of the command. Mike Roberts, one of the founders of IFDb, comments “I think a novice player is going to have a much more satisfying experience if you can hand him or her a short list of all of the command phrasing that they could possibly need to play the game, and tell them that if they get stuck, they should just remember that they never need any commands but those on the list” To which Emily Shot, responded “trick isn’t to make the parser understand whatever a novice might type… It’s a matter of making the game better at communicating to the player what kinds of things are valid actions in the first place… If you can do anything at the command prompt, where do you start?” A similar criticism can be found with dialogue. The interaction with other players is often a difficult process. As a player interacts with a character the dialogue provides more and more data, however, this does not also match the player’s needs, a player typically only wants the information that they require in order to progress the plot. A player can find that they have more information than the need, and others find that they have missed or misinterpreted some important detail. In fiction a character have their own motivations. They progress the plot more than the plot progress them, meaning the plot exists as a direct result of the character’s actions. This is what actors mean when they ask ‘what is my motivation’. A character’s personality, moods, morality, values, ego, understanding of the world and its rules should form a coherent decision-making process, and the various aspects of their character (e.g. bravery, happiness, empathy, sympathy) should reflect that process. Instead of allowing a player to do whatever they want to do, a player should be limited to doing what the character they are playing would do. So if you are playing a kind and gentle person then you should not be able to perform cruel or harmful actions. This however may add to the player-to-avatar disconnect, in which a play may not feel in control of their character. Many titles can appear unbeatable unless the right words are phrased in the correct way at the correct time. This is particular fault is often referred to as guess-the-verb (GTV). For example, if there is a crate to be opened with a crowbar and the only way to open it is to "pry crate with crowbar", other actions like "open crate with crowbar" give a misleading response without hinting at the correct answer. Some titles, failed in this respect, for example the text adventure game Cloak Of Death boasted of understanding "32 verbs" on the sleeve but failed to say what they were, meaning players were required to use the uncommon verbs KICK, MAKE and EXORCISE at specific points in order to complete the game without the slightest hint that they had to do so. It is for this reason that it is not only convention to refer to particularly unusual verb to in descriptive text, but also to capitalize it, highlighting it to both experienced and new players. When titles introduce new verb commands it is common that the new commands are ‘mapped’ into old verb commands, i.e. make them actual synonyms instead of giving responses along the lines of 'Try INSCRIBE rather than WRITE'. For example, if a player types ‘look in’, ‘look under’, or ‘search’ the software silently tries ‘examine’ instead, and are often understood as the common command ‘examine’, since examine is the most common way to get more detail about something, meaning that such that the standard actions can be used consistently and that examining things is sufficient to obtain the required information. An associate fault is often referred to as guess-the-noun (GTN). Whilst not an interactive fiction title, a famous example of this can be found in the video game Monkey Island 2: LeChuck's Revenge in which the player is required use a monkey as a wrench to turn a water pipe off, referring to old fashioned (form of adjustable spanner) tool known as a monkey wrench in some parts of the United States of American. This puzzle is near impossible for the majority of people in the world who are unfamiliar with the colloquial term. Many 'clues' can also cause this issue either because it assume prior knowledge, it is a bad pun and or relies on an in-joke. For example, almost every player of ‘Colossal cave Adventure’ has considered the rock marked Y2 to be a decoy, emblematic of the mysterious cave. But it was meant as a clue. On the original cave maps used by Will Crowther's group, “Y2” denoted a secondary cave entrance, which in a certain sense is a description of the location, in another example, the game Dungeon Adventure, a pride of lions is carved over a doorway. Any player walking through falls into a lethal pit. The clue referring to the proverb ‘pride comes before a fall’. Whilst problems of this nature are reduced through extensive beta-testing, the use of synonyms for nouns is now common practice. For example, hyphenated words like chat-room deserve the synonyms chatroom, and chat room. Words like television should have common nicknames understood, such as TV, tele, and set, whilst words like pickup should allow for class-based synonyms such as vehicle, car, van or truck. One of the most common solutions to the issue of unbeatable situations is to allow for multiple routes or multiple solutions for any given puzzle, since rigorous simulation makes it possible to offer the player solutions which haven’t even occurred to the author. For example, there are seven ways to open the child-proof medicine bottle in Curses, or in another example, a puzzle in The lost pig allows the players several solutions to the problem of seeing the item on the top shelf. By its definition a puzzle is a problem that tests a person's ingenuity or knowledge. Puzzles can't be obvious or they are not a puzzle. However, puzzles need to be understandable, User-centered design implies that anything that is used should be self-explanatory, but many puzzles in Interactive fiction are not self-explanatory. Visibility The first point is visibility, for example many drawers have a handle so you know where to pull it, does a player know when they are confronted with a puzzle and do they know if the puzzle involve timing. A locked door in some titles sometimes represents a simple puzzle whilst in other titles it represents a door which an un-openable part of the scenery. Other puzzles do not make it clear whether the solution of a puzzle is the use of an object or a set of steps which need to be performed. The use of multiple rooms can make it unclear which rooms are required to solve which puzzle. The video game Portal for example uses transparent walls between rooms which are required for a related puzzle, and uses motion to signal the items that are required. If an incorrect action is tried then the game should give some form of feedback to help guide the player, the worst thing you can do is not say anything to the player, which often happens in Interactive fiction. For example, if you try opening a door and it does not open, the game should feedback to the player whether this is the correct pathway or not. Other video games place monsters in the direction that the player is indented to go in, to signal to the player that it is the correct way to go. Feedback is also an important part of Visibility. For example, a kettle will click or whistle when it has boiled, the status of the system is ‘visible’ to the user. With the lack of visual and auditory signals feedback is much harder in Interactive fiction than in order media. Randy smith has written extensively on the design of computer games. He comments that if the puzzle requires the use of an object then it should be clear to the player if they use the wrong object, or the right object in the wrong way. Furthermore, when an item is used it is often unclear if the item will be needed again or not. If the puzzle requires a set of steps or actions which need to be performed, the player should receive feedback if they are trying the wrong actions or if they are tying the right actions in the wrong sequence. It must also be clear if the puzzle has be completed, if an action is tried then the game should give some form of feedback. Affordance The second is Affordance, the relationship between an object (or environment) and the player that affords the opportunity for that player to perform an action (such as pulling or pushing). For example, a push plate on a door without handles severs no purpose other than signaling to the user that it may be pushed. In a game if you see a ladder you not only assume that you can climb something, but that you are required to. Similarly, if you can talk to a character you assume that you are required to talk to them in order to progress the narrative. In video games the differences can be made clear using position, color, texture or resolution. The video game Mirror’s edge shows things that are climbable in red and things that are not climbable in blue, whilst in Thief: Deadly Shadows readable books are open whilst unreadable book are closed. Usual or novel ways to use items is not allowing for reasonable affordance. To reduce the issues caused by the user interface many title include descriptive introductions, the option to view hints, allow layers adjust difficultly, or access to walk through for help players to use. These, however, do not solve the cause they simply alleviate the symptoms. Some puzzles are solved by intelligence or trial and error, but some puzzles are solved by accident, such as using the hidden exit in the notorious ‘Bank of Zork puzzle’ in Zork II, has been understood by almost nobody who solved it. The only effective solution is through the application of the above principle. For example, some puzzles prompt the player to try other senses such as TASTE, SMELL or LISTEN, which will describe an object in more detail, as a form subtle hints, giving the player a clearer direction whilst allowing the player to retain a sense of control and sense of achievement when solving the puzzle. It is common for players to find themselves in a situation (either due to a bug or by poor game design) where it is impossible for them to progress in the narrative or in an unable to win the game without notifying the player. This can be as simple as moving into the next area (causing a plot device such as a landslide) without finding a necessary item beforehand, or due to some other mistake, poor timing or oversight that the player is unable to correct. For example, the classic games Colossal Cave Adventure, the Zork series and The Hitchhiker's Guide to the Galaxy (video game) remain notorious for leaving players in unwinnable situations without telling them in, more than twenty years later. In modern interactive fiction, unwinnable states that fail notifying the player have gone out of fashion, but some are still made (designed for old-school text-adventure fan) which are not clearly described as being designed in this way. Killing the player as common way to notify the player of an unwinnable state. Most titles now also allow the player the use of an UNDO command to allow players a bit more freedom without giving them a sense of invincibility.   Colossal Cave Adventure, by Will Crowther and Don Woods, was the first text adventure ever made. Adventureland, by Scott Adams, is considered one of the defining works of interactive fiction. The Zork series by Infocom (1979 onwards) was the first text adventure to see widespread commercial release.Article at The Dot Eaters. 2006.  Softporn Adventure, by Chuck Benton, a popular adult game that inspired the Leisure Suit Larry series. The Hobbit, by Philip Mitchell and Veronika Megler of Beam Software (1982) was an early reinterpretation of an existing novel into interactive fiction, with several independent non-player characters. Planetfall, by Steve Meretzky of Infocom (1983), featured Floyd the robot, which Allen Varney claimed  to be the first game character who evoked a strong emotional commitment from players. Suspended by Michael Berlyn was an Infocom game notable for a large vocabulary and unique character personalities. The Hitchhiker's Guide to the Galaxy, by Douglas Adams and Steve Meretzky of Infocom (1984), was notable in that the author of the original work was involved in the reinterpretation. A Mind Forever Voyaging, by Steve Meretzky of Infocom (1985), a story-heavy, puzzle-light game often touted as Infocom's first serious work of science fiction. Leather Goddesses of Phobos by Steve Meretzky, a risqué sci-fi parody from Infocom. Amnesia (1987), by Hugo Award and Nebula Award winning science fiction and fantasy author Thomas M. Disch, a purely text-only adventure published by Electronic Arts. Curses, by Graham Nelson (1993), the first game ever written in the Inform programming language. Considered one of the first "modern" games to meet the high standards set by Infocom's best titles. DUNNET, by Ron Schnell (1992 eLisp port from the 1983 MacLisp original), surreal text adventure that has shipped with GNU Emacs since 1994, and thus comes with Mac OS X and most Linux distributions; often mistaken for an easter egg. So Far, by Andrew Plotkin (1996), the first XYZZY Award for Best Game winner in 1996.http://www.ifarchive.org/if-archive/magazines/XYZZYnews/award96-winners.txt Anchorhead, by Michael S. Gentry (1998) is a highly rated horror story inspired by H. P. Lovecraft's Cthulhu Mythos. Photopia, by Adam Cadre (1998), one of the first almost entirely puzzle-free games. It won the annual Interactive Fiction Competition in 1998. Spider and Web, by Andrew Plotkin (1998), an award-winning espionage story with many twists and turns. Varicella by Adam Cadre (1999). It won four XYZZY Awards in 1999 including the XYZZY Award for Best Game, and had a scholarly essay written about it. Galatea, by Emily Short (2000).  Galatea is focused entirely on interaction with the animated statue of the same name.  Galatea has one of the most complex interaction systems for a non-player character in an interactive fiction game. Adam Cadre called Galatea "the best NPC ever". Slouching Towards Bedlam, by Star C. Foster and Daniel Ravipinto (2003).  Set in a steampunk setting, the game integrates meta-game functionality (saving, restoring, restarting) into the game world itself.  The game won four XYZZY Awards. The Dreamhold, by Andrew Plotkin (2004). Designed for those new to IF, it provides an extensive help section and tutorials. Although the puzzles are not too difficult, it can be a challenge for both novice and experienced players.http://pr-if.org/play/ Façade by Michael Mateas, Andrew Stern and John Grieve (2005). An interactive drama using natural language processing. Lost Pig by Admiral Jota (2007). A comedic interactive fiction about an orc finding a pig that escaped from his farm. It won best game, best writing, best individual non-player character, and best individual player character in the 2007 XYZZY Awards. 80 Days by inkle (2014). An interactive adventure based on the novel by Jules Verne, it was nominated by TIME magazine as their Game of the Year for 2014.https://time.com/3582118/top-10-video-games-2014/ Hugo JACL Adventure Creation Language Twine Gilsoft's The Quill and the Professional Adventure Writer Incentive Software's Graphic Adventure Creator (GAC) David Malmberg's Adventure Game Toolkit (AGT) The Big Bang Theory: In The Hofstadter Isotope (S2E20) and The Irish Pub Formulation (S4E6) Sheldon plays interactive fiction, believed to be Zork. Hey Ash, Whatcha Playin'?: In text adventures (S1E14) Ashley is forced to ask his brother questions in the style of an Interactive Fiction. MC Frontalot: In his second album Secrets from the Future this nerdcore hip hop artist released a song called It Is Pitch Dark about text adventures. The gameshelf: In the episode Modern interactive fiction (episode 8) the host Jason McIntosh discuses IF. Time Gentlemen, Please! (video game): In this point and click adventure game the player is intentionally given the same ‘common commands’ that an IF title would use, such as look at, talk to, walk to. Call of Duty: Black Ops: The game Zork can be played on the computer terminal by typing in zork. role-playing games/Live action games: Jared Sorensen created The Parsley system also known as Parsley engine, a style of game play for party games that is similar to Interactive fiction, in which the gamemaster take the role of an inflexible parser interpreting the player’s wishes. The Parsley series started with Action castle and was followed by seven more games, including Jungle adventure, Space station, Spooky manor and Z-ward. Hypertext fiction Visual novel, interactive fiction with graphics. Gamebook Graphic adventures, adventure games with roots in interactive fiction. Multi-User Dungeon (MUD), which may be considered as a kind of multiplayer or collaborative interactive fiction. Role-playing games, which are occasionally described as another form of interactive fiction. Interactive storytelling Get Lamp, a documentary about interactive fiction Keller, Daniel. "Reading and playing: what makes interactive fiction unique"   p.&nbsp;276-298.  in Williams, J. P., & Smith, J. H. (2007). The players' realm: studies on the culture of video games and gaming. Jefferson, N.C.: McFarland & Co. ISBN 978-0-7864-2832-8 Seegert, Alf. (2009), "'Doing there' vs. 'being there': performing presence in interactive fiction", Journal of Gaming and Virtual Worlds 1: 1, pp.&nbsp;23–37,  Robinson Wheeler, J, & Kevin, Jackson-Mead (2014), "IF Theory Reader", JRW Digital Media. Baf's Guide to the Interactive Fiction Archive, a more user-friendly interface for the IF archive. A Brief History of Interactive Fiction, a timeline of events in interactive fiction history at the Brass Lantern website. The Interactive Fiction Reviews Organization (IFRO), huge repository for text adventure game reviews written and rated by Interactive Fiction community players and members since 2004. The Interactive Fiction Archive, a large archive of free-to-download and play interactive fiction (random mirror). Interactive Fiction Database (IFDB), a community site where one can find personalized recommendations for IF games to play. Interactive Fiction: More Than Retro Fun, a beginner's introduction and setup guide to Interactive Fiction games and interpreters The Interactive Fiction Wiki, a MediaWiki wiki specific to Interactive Fiction. Parchment, a z-machine interpreter written in javascript and playable in any browser.  Links to many playable games. Something about Interactive Fiction - MobyGames examines the history (and future) of this gaming genre. SPAG, a quarterly e-zine discussing all things IF Web-adventures, an online z-machine interpreter

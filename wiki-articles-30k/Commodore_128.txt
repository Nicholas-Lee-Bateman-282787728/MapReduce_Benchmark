   The Commodore 128, also known as the C128, C-128, C= 128,The "C=" represents the graphical part of the logo. or occasionally CBM 128, is the last 8-bit home computer that was commercially released by Commodore Business Machines (CBM). Introduced in January 1985 at the CES in Las Vegas, it appeared three years after its predecessor, the bestselling Commodore 64. The C128 is a significantly expanded successor to the C64, with nearly full compatibility. The newer machine has 128&nbsp;kB of RAM in two 64 kB banks, and an 80-column color video output. It has a redesigned case and keyboard. Also included is a Zilog Z80 CPU which allows the C128 to run CP/M, as an alternative to the usual Commodore BASIC environment. The presence of the Z80 and the huge CP/M software library it brings, coupled with the C64's software library, gives the C128 one of the broadest ranges of available software among its competitors. The primary hardware designer of the C128 was Bil Herd, who had worked on the Plus/4. Other hardware engineers were Dave Haynie and Frank Palaia, while the IC design work was done by Dave DiOrio. The main Commodore system software was developed by Fred Bowen and Terry Ryan, while the CP/M subsystem was developed by Von Ertwine. The C128's keyboard includes four cursor keys, an Alt key, Help key, Esc key, Tab key and a numeric keypad. None of these were present on the C64. Previous Commodores had only two cursor keys, which required using the shift key to move the cursor up or left. This arrangement was retained on the 128, for C64 compatibility. The lack of a numeric keypad, Alt key, and Esc key on the C-64 were an issue with some CP/M productivity software when used with the 64's Z-80 cartridge.  A keypad was requested by many C64 owners who spent long hours entering machine language programs using MLX.  Many of the added keys match ones present on the IBM PC's keyboard and made the new computer more attractive to business software developers. While the 128's 40 column mode closely duplicates that of the C64, an extra 1K of color RAM was made available to the programmer, as it was multiplexed through memory address 1.  The 128's power supply was improved over the 64's unreliable design, being much larger and equipped with cooling vents and a replaceable fuse. Instead of the single 6510 microprocessor of the C64, the C128 incorporated a two-CPU design. The primary CPU, the 8502, is a slightly improved version of the 6510 capable of being clocked at 2 MHz. The second CPU is a Zilog Z80 which is used to run CP/M software, as well as to initiate operating mode selection at boot time. The two processors cannot run concurrently, thus the C128 is not a multiprocessing system. The C128's complex architecture includes four differently accessed kinds of RAM (128 kB main RAM, 16-64 kB VDC video RAM, 2 kNibbles VIC-II Color RAM, 2-kB floppy-drive RAM on C128Ds, 0, 128 or 512 kB REU RAM), two or three CPUs (main: 8502, Z80 for CP/M; the 128D also incorporates a 6502 in the disk drive), and two different video chips (VIC-IIe and VDC) for its various operational modes.http://oldcomputers.net/c128d.htmlhttp://www.datasalen.se/Utstallning/Data/CBM/commodore128deng.htm Early versions of the C128 occasionally experience temperature-related reliability issues due to the use of an electromagnetic shield over the main circuit board. The shield was equipped with fingers that contacted the tops of the major chips, ostensibly causing the shield to act as a large heat sink. A combination of poor contact between the shield and the chips, the inherently limited heat conductivity of plastic chip packages, as well as the relatively poor thermal conductivity of the shield itself, resulted in overheating and failure in some cases. The SID sound chip is particularly vulnerable in this respect. The most common remedy is to remove the shield, which Commodore had added late in development in order to comply with FCC radio frequency regulations. The C128 has three operating modes. C128 Mode (native mode) ran at 1 or 2&nbsp;MHz with the 8502 CPU and had both 40- and 80-column text modes available. CP/M Mode uses both the Z80 and the 8502Commodore CP/M Source code and programmers' manual. and is able to function in both 40- or 80-column text mode. C64 Mode is nearly 100 percent compatible with the earlier computer. Selection of these modes is implemented via the Z80 chip. The Z80 controls the bus on initial boot-up and checked to see if there is a CP/M disk in the drive, if there are any C64/C128 cartridges present, and if the Commodore key (C64-mode selector) is active on boot-up. Based on what it finds, it will switch to the appropriate mode of operation.   In 1984, a year before the release of the Commodore 128, Commodore released the Plus/4. Although targeted at a low-end business market that could not afford the relatively high cost and training requirements of early IBM PC compatibles, it was perceived by the Commodore press as a follow-up to the 64 and would be expected to improve upon that model's capabilities. While the C64's graphics and sound capabilities were generally considered excellent, the response to the Plus/4 was one of disappointment. Upon the Plus/4's introduction, repeated recommendations were made in the Commodore press for a new computer called the "C-128" with increased RAM capacity, an 80-column display as was standard in business computers, a new BASIC programming language that made it easy for programmers to use the computer's graphics and sound without resorting to PEEK and POKEs, a new disk drive that improved upon the 1541's abysmal transfer rate, as well as total C-64 compatibility The designers of the C128 succeeded in addressing most of these concerns. A new chip, the VDC, provides the C128 with an 80-column color CGA-compatible display (also called RGBI for red-green-blue plus intensity). The then-new 8502 microprocessor is completely backward-compatible with the C64's 6510, but can run at double the speed if desired. The C64's BASIC 2.0 was replaced with BASIC 7.0, which includes structured programming commands from the Plus/4's BASIC 3.5, as well as keywords designed specifically to take advantage of the machine's capabilities. A sprite editor and machine language monitor were added. The screen-editor part of the Kernal was further improved to support an insert mode and other features accessed through ESC-key combinations, as well as a rudimentary windowing feature and was relocated to a separate ROM. The VIC-II chip which controls the 40-column display can only operate at 1&nbsp;MHz, so the 40 column display appears jumbled in FAST mode. In 80-column mode the editor takes advantage of VDC features to provide blinking and underlined text, activated through escape codes, in addition to the standard Commodore reverse text. The C128's 80-column mode can display lowercase characters along with PETSCII graphics characters; 40-column mode was subject to the same upper- and lowercase or uppercase+graphics restriction as earlier Commodores. The 40- and 80-column modes are independent and both can be active at the same time. A programmer with both a composite and RGB display can use one of the screens as a "scratchpad" or for rudimentary multiple buffer support. The active display can be switched with ESC X. A hardware reset button was added to the system. The keyboard, however, was not switched to the Selectric layout as had become standard, but remains the same ADM-3A-derived design as on Commodore's prior models. The VDC chip is largely useless for gaming since it has no sprites or raster interrupts. NTSC C128s will work with any CGA-type monitor (TTL RGB @ 15&nbsp;kHz/60&nbsp;Hz) such as the IBM 5153. However, PAL models of the C128 operate at 50&nbsp;Hz and aren't compatible with most CGA monitors, which expect a 60&nbsp;Hz refresh rate. Pin 7 of the VDC output (normally unused on CGA monitors) produces a monochrome NTSC/PAL signal, but no cable was provided for it and interested users had to make their own or purchase one on the aftermarket. Two new disk drives were introduced in conjunction with the C128, the short-lived single-sided 1570 and the dual-sided 1571. A dual-disk 1572 model was announced but never produced. Later on, the 3.5&nbsp;inch 1581 was introduced.  All of these drives were more reliable than the 1541 and promised much better performance via a new "burst mode" feature. The 1581 drive also has more on-board RAM than its predecessors, making it possible to open a larger number of files at one time. BASIC 7.0 includes DLOAD and DSAVE commands to support loading and saving to disk without using the ",8" or other device number, and also a DIRECTORY command that reads a disk's catalog information directly to screen memory without overwriting BASIC memory as in BASIC 2.0. In addition, the C128 introduces auto-booting of disk software, a feature standard on most personal computers, but absent from Commodore machines up to that point. Users no longer have to type LOAD"*",8,1. 1571 drives normally will start up in native mode on the C128. If the user switches to C64 mode by typing "GO 64", the drive stays like this, but if C64 mode is activated by holding the C= key down on power-up, 1571s go into 1541 mode (1541 mode is necessary for software that performs low-level drive access), The C128 has twice the RAM of the C64, and a far-higher proportion is available for BASIC programming, due to the new MMU bank-switching chip. This allows BASIC program code to be stored separately from variables, greatly enhancing the machine's ability to handle complex programs, speeding garbage collection and easing debugging for the programmer. An executing program can be STOPped, its code edited, variable values inspected or altered in direct mode, and program execution resumed with the variable table intact using BASIC's GOTO command.[ ] Although other BASICs support the CONT command to restart execution without clearing variables, editing any code causes them to be cleared. Different memory configurations can be loaded using BASIC's BANK command. The 128's ROM contains an easter egg: Entering the command "SYS 32800,123,45,6" in native mode reveals a screen with a listing of the machine's main developers followed by the message "Link arms, don't make them.". Also, entering the keywords QUIT or OFF will produce an "?UNIMPLEMENTED COMMAND ERROR". These commands are holdovers from the BASIC interpreter intended for a planned but never-produced LCD portable computer and were intended to exit from the BASIC interpreter and to ignore keyboard input during sensitive program execution, respectively. The C128's greater hardware capabilities, especially the increased RAM, screen display resolution, and serial bus speed, make it a more capable platform than the 64 for running the GEOS graphical operating system.  The second of the C128's two CPUs is the Zilog Z80, which allows the C128 to run CP/M.  The C128 was shipped with CP/M 3.0 (aka CP/M Plus, which is backward compatible with CP/M 2.2) and ADM31/3A terminal emulation. A CP/M cartridge had been available for the C-64, but it was expensive and of limited use since the 1541 drive cannot read the MFM-formatted disks that CP/M software was distributed on. Software had to be made available on Commodore-specific discs formatted using the GCR encoding scheme. Commodore made versions of PerfectCalc and the EMACS-derived PerfectWriter available,Compute! April 1985 and Commodore user groups sometimes had a selection of CP/M diskettes, but the limited software availability negated one of CP/M's chief attractions&nbsp;— its huge software library. In addition, the cartridges only work on early-model C64s from 1982 and are incompatible with later units. Since they also won't work with the C128, the design team decided to support CP/M by putting the Z80 on the main system board. The C128 runs CP/M noticeably slower than most dedicated CP/M systems, as the Z80 processor runs at an effective speed of only 2&nbsp;MHz (instead of the more common 4&nbsp;MHz). From the source code of the C128 CP/M implementation, it is clear that the engineers originally planned to make it possible to run CP/M in the "fast" mode as well, with the 40-column output turned off and the Z80 running at an effective 4&nbsp;MHz; however, this feature does not correctly function on the first-generation C128 hardware. An unusual feature of the C128 among CP/M systems is that some of the low-level BIOS services are executed by the 8502 instead of the Z80. The latter transfers control to the 8502 after placing the pertinent parameter values in designated memory locations. The Z80 then turns itself off, being awakened by the 8502 at completion of the BIOS routine, with status value(s) available in RAM for inspection. The reason for this is so that the Commodore development team would not have to rewrite the KERNAL routines for two completely different CPU instruction sets. The source code for the BIOS was available. CP/M mode is very different from the operating environments familiar to Commodore users. While Commodore DOS was built into the ROM of Commodore disk drives and was usually accessed through BASIC, CP/M requires the use of a boot diskette and requires entry of terse commands inherited from minicomputer platforms. CP/M programs tend to lack the user-friendly nature of most Commodore applications. Intended to give the new computer a large library of professional-grade business software that Commodore lacked, CP/M was long-past its prime by the mid-1980s, and so it was seldom used on the C128.  By incorporating the original C64 BASIC and kernal ROMs in their entirety (16 kB total), the C128 achieves almost 100 percent compatibility with the Commodore 64. The C64 mode can be accessed in one of three ways: Grounding the cartridge port's /EXROM and/or /GAME lines will cause the computer to automatically start up in C64 mode. This feature faithfully duplicates the C64 behavior when a cartridge (such as Simons' BASIC) is plugged into the port and asserts either of these lines, but unlike the actual C64, where the memory-map changing action of these lines is implemented directly in hardware, the C128's Z80 firmware startup code polls these lines on power-up and then switches modes as necessary. C128 native mode cartridges are recognized and started by the kernal-polling-defined locations in the memory map. C64 mode almost exactly duplicates the features of a hardware C64. Many of the 128's additional features are disabled or unavailable in this mode. The 80-column display, fast mode, MMU, and BASIC 7.0 are not available in 64 mode. The 4 cursor keys at the top of the keyboard are unrecognized, forcing the user to use the 64's cumbersome shifted-key arrangement, which are included at the bottom of the 128 keyboard. Also ignored are the 128's numeric keypad and most added top-row keys (the only top-row keys that are functional in 64 mode are the f1-f8 keys above the keypad.) Some of these features can be turned back on by user software, but most commercial programs ignore them at best, or are completely nonfunctional with these user "wedge" programs in memory. On North American C128s, when in C64 mode, even the character (font) ROM changed from that of C128 mode. Early C128 prototypes had a single ROM, with a slightly improved character set over that of the C64. But some C64 programs read the character ROM as data, and will fail in various ways on a C128. Thus, the C128 was given a double-sized character ROM, which delivered the C128 font in C128 mode, the C64 font in C64 mode. International models of the C128 use the unmodified C64 font in both modes, since the second half of the character ROM is instead dedicated to the international font (containing such things as accented characters or German umlauts). Some of the few C64 programs that fail on a C128 run correctly when the CAPS LOCK key is pressed down (or the ASCII/National key on international C128 models). This has to do with the larger built-in I/O port of the C128's CPU. Whereas the SHIFT LOCK key found on both C64 and C128 is simply a mechanical latch for the left SHIFT key, the CAPS LOCK key on the C128 can be read via the 8502's built-in I/O port. A few C64 programs are confused by this extra I/O bit; keeping the CAPS LOCK key in the down position will force the I/O line low, matching the C64's configuration and resolving the issue. A handful of C64 programs write to $D030 (53296), often as part of a loop initializing the VIC-II chip registers. This memory-mapped register, unused in the C64, determines the system clock rate. Since this register is fully functional in C64 mode, an inadvertent write can scramble the 40-column display by switching the CPU over to 2–MHz, at which clock rate the VIC-II video processor cannot produce a coherent display. Fortunately, few programs suffer from this flaw. In July 1986, COMPUTE!'s Gazette published a type-in program that exploits this difference by using a raster interrupt to enable fast mode when the bottom of the visible screen is reached, and then disables it when screen rendering began again at the top. By using the higher clock rate during the vertical blank period, standard video display is maintained while increasing overall execution speed by about 20 percent.jul86-64 ModeSpeedjul86-64 ModeSpeed An easy way to differentiate between a hardware C64 and a C128 operating in C64 mode, typically used from within a running program, is to write a value different from $FF (255) to memory address $D02F (53295), a register which is used to decode the extra keys of the C128 (the numerical keypad and some other keys). On the 64 this memory location will always contain the value $FF no matter what is written to it, but on a C128 in 64 mode the value of the location—a memory-mapped register—can be changed. Thus, checking the location's value after writing to it will reveal the actual hardware platform. To handle the relatively large amounts of ROM and RAM, tenfold the 8502's 64 kB address space, the C128 used the 8722 MMU chip to create different memory maps, in which different combinations of RAM and ROM would appear according to bit patterns written into the MMU's confguration register at memory address $FF00. Another feature of the memory management unit was to allow relocation of zero page and the stack. The C128's RAM is expandable from the standard 128kb to 256, 512 or even 1024kb, by either using commercial memory expansion modules, or by making one based on schematics available on the internet.Memory expansions for the Commodore 128 Commodore's RAM Expansion Units utilized an external 8726 DMA controllerhttp://c64.saschakimmel.de/produkt-reu-1764.php to transfer data between the C-128's RAM and the RAM in the expansion unit.  Late in 1985, Commodore released to the European market a new version of the C128 with a redesigned chassis resembling the Amiga 1000. Called the Commodore 128D, this new European model featured a plastic chassis with a carrying handle on the side, incorporated a 1571 disk drive into the main chassis, replaced the built-in keyboard with a detachable one, and added a cooling fan.  The keyboard featured two folding legs for changing the typing angle. Per Bil Herd, head of the Hardware Team (aka the "C128 Animals"), the C128D was ready for production at the same time as the regular version.  Working to release two models at the same time had increased the risk for on-time delivery and was apparent in that the main PCB has large holes in critical sections to support the C128D case and the normal case concurrently. In the latter part of 1986, Commodore released a version of the C128D in North America and parts of Europe referred to as the C128DCR, CR meaning "cost reduced".  The DCR model featured a stamped steel chassis in place of the plastic version of the C128D (with no carrying handle), a modular switched-mode power supply similar to that of the C128D, retaining that model's detachable keyboard and internal 1571 floppy drive.  A number of components on the mainboard were consolidated to reduce production costs, and as an additional cost reduction measure, the 40 millimeter cooling fan that was fitted to the D model's power supply was removed.  However, the mounting provisions on the power supply subchassis were retained, as well as the two 12 volt DC connection points on the power supply's printed circuit board for powering the fan. A significant improvement introduced with the DCR model was the replacement of the 8563 video display controller (VDC) with the more technically advanced 8568 VDC and equipping it with 64 kilobytes of video RAM&mdash;the maximum amount addressable by the device. The four-fold increase in video RAM over that installed in the "flat" C128 made it possible, among other things, to maintain multiple text screens in support of a true windowing system, or generate higher-resolution graphics with a more flexible color palette.  Little commercial software took advantage of these possibilities. The C128DCR was equipped with new ROMs dubbed the "1986 ROMs," so-named from the copyright date displayed on the power-on banner screen.  The new ROMs addressed a number of bugs that were present in the original ROMs, including an infamous off-by-one error in the keyboard decoding table, in which the 'Q' character would remain lower case when CAPS LOCK was active.  Some software would only run on the DCR, due to dependencies on the computer's enhanced hardware features and revised ROMs. Despite the DCR's improved RGB video capabilities, Commodore did not enhance BASIC 7.0 with the ability to manipulate RGB graphics.  Driving the VDC in graphics mode continued to require the use of calls to screen editor ROM primitives or their assembly language equivalents, or by using third-party BASIC language extensions, such as Free Spirit Software's "BASIC 8", which added high-resolution VDC graphics commands to BASIC 7.0. Compute! stated in 1989, "If you bought your 128 under the impression that 128-specific software would be plentiful and quick to arrive, you've probably been quite disappointed. One of the 128's major selling points is its total compatibility with the 64, a point that's worked more against the 128 than for it". Because the 128 would run virtually all 64 software, and because the next-generation 32/16-bit home computers - primarily the Commodore Amiga and Atari ST - represented the latest technology, relatively little software for the C128's native mode appeared (probably on the order of 100–200 commercial titles, plus the usual share of public domain and magazine type-in programs), leading some users to regret their purchase. While the C128 sold a total number of 4&nbsp;million units between 1985 and 1989, its popularity paled in comparison to that of its predecessor. One explanation may be found in the fact that the C64 sold huge numbers to people primarily interested in video games, which the more expensive C128 didn't add much value towards improving. Some 64 software such as Bard's Tale III and Kid Niki ran in 128 mode without stating this in the documentation, using the autoboot and the 1571's faster disk access. Some Infocom text adventures took advantage of the 80 column screen and increased memory capacity. Some C64 games were ported to native mode like Kikstart 2 and The Last V8 from Mastertronic, which have separate 128 versions, and Ultima V: Warriors of Destiny from Origin Systems, which uses extra RAM for music if running on the C128. The vast majority of games simply ran in 64 mode. By contrast, many C64 productivity software titles were ported to the 128, including the popular PaperClip and Paperback Writer series. This software used the extra memory, 80 column screen, enhanced keyboard and large capacity disk drives to provide features that were considered essential for business use. With its advanced BASIC programming language, CP/M compatibility and "user-friendly" native software packages such as Jane, Commodore attempted to create a low-end business market for the 128 similar to its strategy with the Plus/4, even distancing itself from the home computer label by branding the 128 a "Personal Computer" on the case. Significantly, the C128 was the first Commodore computer to advertise its use of Microsoft BASIC, where the Microsoft name would have been a competitive asset. The C128 was certainly a better business machine than the C64, but not really a better gaming machine, and people who wanted business machines bought IBM PC clones almost exclusively by the time the C128 was released. The availability of low-cost IBM compatibles like the Leading Edge Model D and Tandy 1000 that, in some cases, sold for less than a complete 128 system derailed Commodore's small business computer strategy. There was a professional-level CAD program, Home Designer by BRiWALL,RUN Magazine Issue 64 but again, most of this work was done on PCs by the 128's era. The main reason that the C128 still sold fairly well was probably that it was a much better machine for hobbyist programming than the C64, as well as being a natural follow-on model to owners with significant investments in C64 peripherals. But ultimately the C128 could not compete with the new 16/32-bit systems, which outmatched it and the rest of its 8-bit generation in nearly every aspect. When the C128(D/DCR) was discontinued in 1989, it was reported to cost nearly as much to manufacture as the Amiga 500, even though the C128D had to sell for several hundred dollars less to keep the Amiga's high-end marketing image intact. Bil Herd has stated that the design goals of the 128 did not initially include 100% compatibility with the C64. Some form of compatibility was always intended after Herd was approached at the Plus/4's introduction by a woman who was disappointed that the educational software package she had written for the C64 would not run on Commodore's new computer, but when Commodore's marketing department learned of this, they independently announced total compatibility. Herd gave the reason for the 128's inclusion of a Z-80 processor as to ensure this "100% compatibility" claim, since supporting the 64's Z-80 cartridge would have meant the 128 supplying additional power to the cartridge port. He also stated that the VDC video chip and Z80 were sources of trouble during the machine's design. Herd added that "I only expected the C128 to be sold for about a year, we figured a couple of million would be nice and of course it wouldn’t undercut Amiga or even the C64"In Memory Of The Commodore C128 After Commodore raised the price of the 64 for the first time by introducing the redesigned 64C in 1986, its profit from each 64C sold was reportedly much greater than from the 128.   Hold down the Commodore logo key when booting the system Enter the GO64 command in BASIC 7.0 Boot with a C64 cartridge plugged in CPUs: MOS Technology 8502 @ 2 MHz (1&nbsp;MHz selectable for C64 compatibility mode) Zilog Z80&nbsp;&nbsp;@ 4&nbsp;MHz (running at an effective 2&nbsp;MHz because of wait states in order to allow the VIC-II video chip access to the system bus) (C128D(CR)): MOS Technology 6502 for the integrated floppy controller MMU: MOS Technology 8722 Memory Management Unit controls 8502/Z80 processor selection; ROM/RAM banking; common RAM areas; relocation of zero page and stack RAM: 128 kB system RAM, 2 kB 4-bit dedicated color RAM (for the VIC-II E), 16 kB or 64 kB dedicated video RAM (for the VDC), up to 512 kB REU expansion RAM ROM: 72 kB 28 kB BASIC 7.0 4 kB MLM 8 kB C128 KERNAL 4 kB screen editor 4 kB Z80 BIOS 16 kB C64 ROM: ≈9 kB C64 BASIC 2.0 + ≈7 kB C64 KERNAL 4 kB C64 (or international) character generator 4 kB C128 (or national) character generator 32 kB Internal Function ROM (optional: for placement in motherboard socket) 32 kB External Function ROM (optional: for placement in REU socket) Video: MOS 8564/8566 VIC-II E (NTSC/PAL) for 40-column composite video (a TV set can be used instead of a monitor if desired) Direct register access through memory-mapped I/O Text mode: 40×25, 16 colors Graphics modes: 160×200, 320×200 8 hardware sprites 2 kB dedicated 4-bit color RAM, otherwise uses main memory as video RAM MOS 8563 VDC (or, in C128DCR, the 8568) for 80-column digital RGBI component video, compatible with IBM PC CGA monitors, monochrome display also possible on composite video monitors; usable with TV sets only when the set has SCART and/or baseband video-in sockets in addition to the antenna connector. Color is possible through SCART, only monochrome through baseband video-in. Indirect register access (address register, data register in mapped memory) Text mode: Fully programmable, typically 80×25 or 80x50, 16 RGBI colors (not the same palette as the VIC-II) Graphics modes: Fully programmable, typical modes are 320x200, 640×200, and 640×400 (interlaced). 16 kB dedicated video RAM (64 kB standard in C128DCR, C128/C128D can be upgraded to 64 kB), accessible to the CPU only in a doubly indirect method (address register, data register on VDC, which in turn are addressed through address register, data register in mapped memory) Limited blitter functionality Sound: MOS 6581 SID (or, in the C128DCR, the MOS 8580 SID) synthesizer chip 3 voices, ADSR-controllable Standard SID waveforms (triangle, sawtooth, variable pulse, noise, and certain combined modes) Multi-mode filter 3 ring modulators I/O Ports: All Commodore 64 ports with 100 percent compatibility, plus the following: Higher "burst mode" speed possible on the serial bus Expansion port more flexibly programmable RGBI video output (DE9-connector) logically similar to the IBM PC CGA connector, but with an added monochrome composite signal.  This added signal causes a minor incompatibility with certain CGA monitors that can be rectified by removing pin 7 from the plug at one end of the connecting cable. External keyboard input (DB25-connector) (C128D(CR) only) Commodore BASIC Greenley, Larry, et al. (1986). Commodore 128 Programmer's Reference Guide. Bantam Computer Books/Commodore Publications. ISBN 0-553-34378-5. Gerits, K.; Schieb, J.; Thrun, F. (1986). Commodore 128 Internals. 2nd ed. Grand Rapids, Michigan: Abacus Software, Inc. ISBN 0-916439-42-9. Original German edition (1985), Düsseldorf, West Germany: DATA BECKER GmbH & Co. KG. Commodore 128 Systems Guide Commodore 128 CP/M User's Guide VICE: Versatile Commodore Emulator Commodore 128 Alive! RUN Magazine Issue 18 June 1985

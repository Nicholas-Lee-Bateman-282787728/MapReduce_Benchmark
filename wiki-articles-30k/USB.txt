    USB, short for Universal Serial Bus, is an industry standard developed in the mid-1990s that defines the cables, connectors and communications protocols used in a bus for connection, communication, and power supply between computers and electronic devices. It is currently developed by the USB Implementers Forum. USB was designed to standardize the connection of computer peripherals (including keyboards, pointing devices, digital cameras, printers, portable media players, disk drives and network adapters) to personal computers, both to communicate and to supply electric power. It has become commonplace on other devices, such as smartphones, PDAs and video game consoles. USB has effectively replaced a variety of earlier interfaces, such as serial and parallel ports, as well as separate power chargers for portable devices. In general, there are three basic kinds or sizes related to the USB connectors and types of established connection: the older "standard" size, in its USB&nbsp;1.1, 2.0, and 3.0 variants (for example, on USB flash drives), the "mini" size (primarily for the B connector end, such as on many cameras), and the "micro" size, in its USB&nbsp;1.1, 2.0, and 3.0 variants (for example, on most modern mobile phones). Unlike other data cables (e.g., Ethernet, HDMI), each end of a USB cable uses a different kind of connector; a Type-A or a Type-B. This kind of design was chosen to prevent electrical overloads and damaged equipment, as only the Type-A socket provides power. There are cables with Type-A connectors on both ends, but they should be used carefully. Therefore, in general, each of the different "sizes" requires four different connectors; USB cables have the Type-A and Type-B plugs, and the corresponding receptacles are on the computer or electronic device. In common practice, the Type-A connector is usually the full size, and the Type-B side can vary as needed. The mini and micro sizes also allow for a reversible Type-AB receptacle, which accepts either a Type-A or a Type-B plug. In this scheme, known as USB On-The-Go, one receptacle performs double duty in space-constrained applications. Counter-intuitively, the "micro" size is the most durable from the point of designed insertion lifetime. The standard and mini connectors were designed for less than daily connections, with a design lifetime of 1,500 insertion-removal cycles. (Improved mini-B connectors have reached 5,000-cycle lifetimes.) Micro connectors were designed with frequent charging of portable devices in mind; not only is design lifetime of the connector improved to 10,000 cycles, but it was also redesigned to place the flexible contacts, which wear out sooner, on the easily replaced cable, while the more durable rigid contacts are located in the micro-USB receptacles. Likewise, the springy part of the retention mechanism (parts that provide required gripping force) were also moved into plugs on the cable side. USB connections also come in five data transfer modes, in ascending order: Low Speed, Full Speed, High Speed (2.0), SuperSpeed (3.0), and SuperSpeed+ (3.1). High Speed is supported only by specifically designed USB 2.0 High Speed interfaces (that is, USB 2.0 controllers without the High Speed designation do not support it), as well as by USB 3.0 and newer interfaces. SuperSpeed is supported only by USB 3.0 and newer interfaces, and requires a connector and cable with extra pins and wires, usually distinguishable by the blue inserts in connectors.   A group of seven companies began the development of USB in 1994: Compaq, DEC, IBM, Intel, Microsoft, NEC, and Nortel. The goal was to make it fundamentally easier to connect external devices to PCs by replacing the multitude of connectors at the back of PCs, addressing the usability issues of existing interfaces, and simplifying software configuration of all devices connected to USB, as well as permitting greater data rates for external devices. A team including Ajay Bhatt worked on the standard at Intel; the first integrated circuits supporting USB were produced by Intel in 1995. The original USB&nbsp;1.0 specification, which was introduced in January 1996, defined data transfer rates of 1.5&nbsp;Mbit/s "Low Speed" and 12&nbsp;Mbit/s "Full Speed". Microsoft Windows 95, OSR 2.1 provided OEM support for the devices. The first widely used version of USB was 1.1, which was released in September 1998. The 12&nbsp;Mbit/s data rate was intended for higher-speed devices such as disk drives, and the lower 1.5&nbsp;Mbit/s rate for low data rate devices such as joysticks. Apple Inc.'s iMac was the first mainstream usage of USB and the iMac's success popularized USB itself. Following Apple's design decision to remove all legacy ports from the iMac, many PC manufactures began building legacy-free PCs, which lead to the broader PC market using USB as a standard. The USB&nbsp;2.0 specification was released in April 2000 and was ratified by the USB Implementers Forum (USB-IF) at the end of 2001. Hewlett-Packard, Intel, Lucent Technologies (now Alcatel-Lucent), NEC, and Philips jointly led the initiative to develop a higher data transfer rate, with the resulting specification achieving 480&nbsp;Mbit/s, a 40-times increase over the original USB 1.1 specification. The USB&nbsp;3.0 specification was published on 12 November 2008. Its main goals were to increase the data transfer rate (up to 5&nbsp;Gbit/s), decrease power consumption, increase power output, and be backward compatible with USB 2.0.08-Sep-2012 USB 3.0 includes a new, higher speed bus called SuperSpeed in parallel with the USB 2.0 bus. For this reason, the new version is also called SuperSpeed. The first USB 3.0 equipped devices were presented in January 2010. , approximately six billion USB ports and interfaces were in the global marketplace, and about two billion were being sold each year. In December 2014, USB-IF submitted USB&nbsp;3.1, USB Power Delivery 2.0 and USB Type-C specifications to the IEC (TC 100&nbsp;– Audio, video and multimedia systems and equipment) for inclusion in the international standard IEC 62680 Universal Serial Bus interfaces for data and power, which is currently based on USB 2.0.http://www.usb.org/press/USB-IF_Press_Releases/IEC_USB-IF_Press_Release_12.3.14_FINAL.pdf The USB standard evolved through several versions before its official release in 1996: Released in January 1996, USB&nbsp;1.0 specified data rates of 1.5&nbsp;Mbit/s (Low Bandwidth or Low Speed) and 12&nbsp;Mbit/s (Full Bandwidth or Full Speed). It did not allow for extension cables or pass-through monitors, due to timing and power limitations. Few USB devices made it to the market until USB&nbsp;1.1 was released in August 1998, fixing problems identified in 1.0, mostly related to using hubs. USB&nbsp;1.1 was the earliest revision that was widely adopted and led to Legacy-free PCs.   USB&nbsp;2.0 was released in April 2000, adding a higher maximum signaling rate of 480&nbsp;Mbit/s called High Speed, in addition to the USB&nbsp;1.x Full Speed signaling rate of 12&nbsp;Mbit/s. Due to bus access constraints, the effective throughput of the High Speed signaling rate is limited to 35&nbsp;MB/s or 280&nbsp;Mbit/s. Further modifications to the USB specification have been made via Engineering Change Notices (ECN). The most important of these ECNs are included into the USB 2.0 specification package available from USB.org:   USB&nbsp;3.0 standard was released in November 2008, defining a new SuperSpeed mode. A USB&nbsp;3.0 port, usually colored blue, is backward compatible with USB&nbsp;2.0 devices and cables. On the release of the USB 3.1 specification in 2015, USB&nbsp;3.0 was renamed USB 3.1 Gen1 for marketing purposes. The USB&nbsp;3.0 Promoter Group announced on 17 November 2008 that the specification of version 3.0 had been completed and had made the transition to the USB Implementers Forum (USB-IF), the managing body of USB specifications. This move effectively opened the specification to hardware developers for implementation in products. The new SuperSpeed bus provides a fourth transfer mode with a data signaling rate of 5.0&nbsp;Gbit/s, in addition to the modes supported by earlier versions. The payload throughput is 4&nbsp;Gbit/s (due to the overhead incurred by 8b/10b encoding), and the specification considers it reasonable to achieve around 3.2&nbsp;Gbit/s (0.4&nbsp;GB/s or 400&nbsp;MB/s), which should increase with future hardware advances. Communication is full-duplex in SuperSpeed transfer mode; in the modes supported previously, by 1.x and 2.0, communication is half-duplex, with direction controlled by the host. As with previous USB versions, USB&nbsp;3.0 ports come in low-power and high-power variants, providing 150&nbsp;mA and 900&nbsp;mA respectively, while simultaneously transmitting data at SuperSpeed rates. Additionally, there is a Battery Charging Specification (Version 1.2&nbsp;– December 2010), which increases the power handling capability to 1.5&nbsp;A but does not allow concurrent data transmission. The Battery Charging Specification requires that the physical ports themselves be capable of handling 5&nbsp;A of current but limits the maximum current drawn to 1.5&nbsp;A. A January 2013 press release from the USB group revealed plans to update USB&nbsp;3.0 to 10&nbsp;Gbit/s. The group ended up creating a new USB version, USB&nbsp;3.1, which was released on 31 July 2013, introducing a faster transfer mode called SuperSpeed USB 10&nbsp;Gbit/s, putting it on par with a single first-generation Thunderbolt channel. The new mode's logo features a "Superspeed+" caption (stylized as SUPERSPEED+). The USB&nbsp;3.1 standard increases the data signaling rate to 10&nbsp;Gbit/s in the USB&nbsp;3.1 Gen2 mode, double that of USB&nbsp;3.0 (referred to as USB&nbsp;3.1 Gen1) and reduces line encoding overhead to just 3% by changing the encoding scheme to 128b/132b. The first USB&nbsp;3.1 implementation demonstrated transfer speeds of 7.2&nbsp;Gbit/s. The USB&nbsp;3.1 standard is backward compatible with USB&nbsp;3.0 and&nbsp;USB 2.0. In 2015, USB&nbsp;3.1 was renamed USB 3.1 Gen2 to differentiate it from USB 3.1 Gen1 (5Gbps, formerly USB 3.0). It initiated a new naming scheme where the data speed is referred to by Generation number.   Developed at roughly the same time as the USB&nbsp;3.1 specification, but distinct from it, the USB&nbsp;Type-C Specification 1.0 defines a new small reversible-plug connector for USB devices. The Type-C plug connects to both hosts and devices, replacing various Type-A and Type-B connectors and cables with a standard meant to be future-proof, similar to Apple Lightning and Thunderbolt.http://www.cnet.com/news/usb-type-c-one-cable-to-connect-them-all/http://www.anandtech.com/show/8377/usb-typec-connector-specifications-finalized The 24-pin double-sided connector provides four power/ground pairs, two differential pairs for USB&nbsp;2.0 data bus (though only one pair is implemented in a Type-C cable), four pairs for high-speed data bus, two "sideband use" pins, and two configuration pins for cable orientation detection, dedicated biphase mark code (BMC) configuration data channel, and VCONN +5&nbsp;V power for active cables.https://intel.activeevents.com/sf14/connect/sessionDetail.ww?SESSION_ID=1254http://www.anandtech.com/show/8558/displayport-alternate-mode-for-usb-typec-announced Type-A and Type-B adaptors and cables are required for older devices to plug into Type-C hosts. Adapters and cables with a Type-C receptacle are not allowed. Full-featured USB Type-C cables are active, electronically marked cables that contain a chip with an ID function based on the configuration data channel and vendor-defined messages (VDMs) from the USB Power Delivery 2.0 specification. USB Type-C devices also support power currents of 1.5&nbsp;A and 3.0&nbsp;A over the 5&nbsp;V power bus in addition to baseline 900&nbsp;mA; devices can either negotiate increased USB current through the configuration line, or they can support the full Power Delivery specification using both BMC-coded configuration line and legacy BFSK-coded VBUS line. Alternate Mode dedicates some of the physical wires in the Type-C cable for direct device-to-host transmission of alternate data protocols. The four high-speed lanes, two sideband pins, andfor dock, detachable device and permanent cable applications onlytwo USB&nbsp;2.0 pins and one configuration pin can be used for Alternate Mode transmission. The modes are configured using VDMs through the configuration channel. The design architecture of USB is asymmetrical in its topology, consisting of a host, a multitude of downstream USB ports, and multiple peripheral devices connected in a tiered-star topology. Additional USB hubs may be included in the tiers, allowing branching into a tree structure with up to five tier levels. A USB host may implement multiple host controllers and each host controller may provide one or more USB ports. Up to 127 devices, including hub devices if present, may be connected to a single host controller.08-Sep-2012 USB devices are linked in series through hubs. One hub—built into the host controller—is the root hub. A physical USB device may consist of several logical sub-devices that are referred to as device functions. A single device may provide several functions, for example, a webcam (video device function) with a built-in microphone (audio device function). This kind of device is called a composite device. An alternative to this is compound device, in which the host assigns each logical device a distinctive address and all logical devices connect to a built-in hub that connects to the physical USB cable. USB device communication is based on pipes (logical channels). A pipe is a connection from the host controller to a logical entity, found on a device, and named an endpoint. Because pipes correspond 1-to-1 to endpoints, the terms are sometimes used interchangeably. A USB device could have up to 32 endpoints (16 IN, 16 OUT), though it's rare to have so many. An endpoint is defined and numbered by the device during initialization (the period after physical connection called "enumeration") and so is relatively permanent, whereas a pipe may be opened and closed. There are two types of pipe: stream and message. A message pipe is bi-directional and is used for control transfers. Message pipes are typically used for short, simple commands to the device, and a status response, used, for example, by the bus control pipe number 0. A stream pipe is a uni-directional pipe connected to a uni-directional endpoint that transfers data using an isochronous, interrupt, or bulk transfer: An endpoint of a pipe is addressable with a tuple (device_address, endpoint_number) as specified in a TOKEN packet that the host sends when it wants to start a data transfer session. If the direction of the data transfer is from the host to the endpoint, an OUT packet (a specialization of a TOKEN packet) having the desired device address and endpoint number is sent by the host. If the direction of the data transfer is from the device to the host, the host sends an IN packet instead. If the destination endpoint is a uni-directional endpoint whose manufacturer's designated direction does not match the TOKEN packet (e.g. the manufacturer's designated direction is IN while the TOKEN packet is an OUT packet), the TOKEN packet is ignored. Otherwise, it is accepted and the data transaction can start. A bi-directional endpoint, on the other hand, accepts both IN and OUT packets. Endpoints are grouped into interfaces and each interface is associated with a single device function. An exception to this is endpoint zero, which is used for device configuration and is not associated with any interface. A single device function composed of independently controlled interfaces is called a composite device. A composite device only has a single device address because the host only assigns a device address to a function. When a USB device is first connected to a USB host, the USB device enumeration process is started. The enumeration starts by sending a reset signal to the USB device. The data rate of the USB device is determined during the reset signaling. After reset, the USB device's information is read by the host and the device is assigned a unique 7-bit address. If the device is supported by the host, the device drivers needed for communicating with the device are loaded and the device is set to a configured state. If the USB host is restarted, the enumeration process is repeated for all connected devices. The host controller directs traffic flow to devices, so no USB device can transfer any data on the bus without an explicit request from the host controller. In USB&nbsp;2.0, the host controller polls the bus for traffic, usually in a round-robin fashion. The throughput of each USB port is determined by the slower speed of either the USB port or the USB device connected to the port. High-speed USB&nbsp;2.0 hubs contain devices called transaction translators that convert between high-speed USB&nbsp;2.0 buses and full and low speed buses. When a high-speed USB&nbsp;2.0 hub is plugged into a high-speed USB host or hub, it operates in high-speed mode. The USB hub then uses either one transaction translator per hub to create a full/low-speed bus routed to all full and low speed devices on the hub, or uses one transaction translator per port to create an isolated full/low-speed bus per port on the hub. Because there are two separate controllers in each USB&nbsp;3.0 host, USB&nbsp;3.0 devices transmit and receive at USB&nbsp;3.0 data rates regardless of USB&nbsp;2.0 or earlier devices connected to that host. Operating data rates for earlier devices are set in the legacy manner. The functionality of USB devices is defined by class codes, communicated to the USB host to affect the loading of suitable software driver modules for each connected device. This provides for adaptability and device independence of the host to support new devices from different manufacturers. Device classes include:.    USB implements connections to storage devices using a set of standards called the USB mass storage device class (MSC or UMS). This was at first intended for traditional magnetic and optical drives and has been extended to support flash drives. It has also been extended to support a wide variety of novel devices as many systems can be controlled with the familiar metaphor of file manipulation within directories. The process of making a novel device look like a familiar device is also known as extension. The ability to boot a write-locked SD card with a USB adapter is particularly advantageous for maintaining the integrity and non-corruptible, pristine state of the booting medium. Though most computers since mid-2004 can boot from USB mass storage devices, USB is not intended as a primary bus for a computer's internal storage. Buses such as Parallel ATA (PATA or IDE), Serial ATA (SATA), or SCSI fulfill that role in PC class computers. However, USB has one important advantage, in that it is possible to install and remove devices without rebooting the computer (hot-swapping), making it useful for mobile peripherals, including drives of various kinds (given SATA or SCSI devices may or may not support hot-swapping). Firstly conceived and still used today for optical storage devices (CD-RW drives, DVD drives, etc.), several manufacturers offer external portable USB hard disk drives, or empty enclosures for disk drives. These offer performance comparable to internal drives, limited by the current number and types of attached USB devices, and by the upper limit of the USB interface (in practice about 30&nbsp;MB/s for USB 2.0 and potentially 400&nbsp;MB/s or moreUniversal Serial Bus 3.0 Specification,4.4.11 "Efficiency" for USB 3.0). These external drives typically include a "translating device" that bridges between a drive's interface to a USB interface port. Functionally, the drive appears to the user much like an internal drive. Other competing standards for external drive connectivity include eSATA, ExpressCard, FireWire (IEEE 1394), and most recently Thunderbolt. Another use for USB mass storage devices is the portable execution of software applications (such as web browsers and VoIP clients) with no need to install them on the host computer. Media Transfer Protocol (MTP) was designed by Microsoft to give higher-level access to a device's filesystem than USB mass storage, at the level of files rather than disk blocks. It also has optional DRM features. MTP was designed for use with portable media players, but it has since been adopted as the primary storage access protocol of the Android operating system from the version 4.1 Jelly Bean as well as Windows Phone 8 (Windows Phone 7 devices had used the Zune protocol which was an evolution of MTP). The primary reason for this is that MTP does not require exclusive access to the storage device the way UMS does, alleviating potential problems should an Android program request the storage while it is attached to a computer. The main drawback is that MTP is not as well supported outside of Windows operating systems.  Joysticks, keypads, tablets and other human-interface devices (HIDs) are also progressively migrating from MIDI, and PC game port connectors to USB. USB mice and keyboards can usually be used with older computers that have PS/2 connectors with the aid of a small USB-to-PS/2 adapter. For mice and keyboards with dual-protocol support, an adaptor that contains no logic circuitry may be used: the hardware in the USB keyboard or mouse is designed to detect whether it is connected to a USB or PS/2 port, and communicate using the appropriate protocol. Converters also exist that connect PS/2 keyboards and mice (usually one of each) to a USB port. These devices present two HID endpoints to the system and use a microcontroller to perform bidirectional data translation between the two standards. Device Firmware Upgrade (DFU) is a vendor- and device-independent mechanism for upgrading the firmware of USB devices with improved versions provided by their manufacturers, offering (for example) a way for firmware bugfixes to be deployed. During the firmware upgrade operation, USB devices change their operating mode effectively becoming a PROM programmer. Any class of USB device can implement this capability by following the official DFU specifications. In addition to its intended legitimate purposes, DFU can also be exploited by uploading maliciously crafted firmwares that cause USB devices to spoof various other device types; one such exploiting approach is known as BadUSB.   The connectors the USB committee specifies support a number of USB's underlying goals, and reflect lessons learned from the many connectors the computer industry has used. The connector mounted on the host or device is called the receptacle, and the connector attached to the cable is called the plug. The official USB specification documents also periodically define the term male to represent the plug, and female to represent the receptacle. By design, it is difficult to insert a USB plug into its receptacle incorrectly. The USB specification states that the required USB icon must be embossed on the "topside" of the USB plug, which "...provides easy user recognition and facilitates alignment during the mating process." The specification also shows that the "recommended" "Manufacturer's logo" ("engraved" on the diagram but not specified in the text) is on the opposite side of the USB icon. The specification further states, "The USB Icon is also located adjacent to each receptacle. Receptacles should be oriented to allow the icon on the plug to be visible during the mating process." However, the specification does not consider the height of the device compared to the eye level height of the user, so the side of the cable that is "visible" when mated to a computer on a desk can depend on whether the user is standing or kneeling. While connector interfaces can be designed to allow plugging with either orientation, the original design omitted such functionality to decrease manufacturing costs. Ajay Bhatt, who was involved in the original USB design team, is working on a new design to make the cable insertable either side up. The new reversible Type-C plug is an addition to the USB&nbsp;3.1 specification; it is much smaller than the current USB&nbsp;3.0 micro-B connector Only moderate force is needed to insert or remove a USB cable. USB cables and small USB devices are held in place by the gripping force from the receptacle (without need of the screws, clips, or thumb-turns other connectors have required). The standard connectors were deliberately intended to enforce the directed topology of a USB network: Type-A receptacles on host devices that supply power and Type-B receptacles on target devices that draw power. This prevents users from accidentally connecting two USB power supplies to each other, which could lead to short circuits and dangerously high currents, circuit failures, or even fire. USB does not support cyclic networks and the standard connectors from incompatible USB devices are themselves incompatible. However, some of this directed topology is lost with the advent of multi-purpose USB connections (such as USB On-The-Go in smartphones, and USB-powered Wi-Fi routers), which require A-to-A, B-to-B, and sometimes Y/splitter cables. See the USB On-The-Go connectors section below, for a more detailed summary description. The standard connectors were designed to be robust. Because USB is hot-pluggable, the connectors would be used more frequently, and perhaps with less care, than other connectors. Many previous connector designs were fragile, specifying embedded component pins or other delicate parts that were vulnerable to bending or breaking. The electrical contacts in a USB connector are protected by an adjacent plastic tongue, and the entire connecting assembly is usually protected by an enclosing metal sheath. The connector construction always ensures that the external sheath on the plug makes contact with its counterpart in the receptacle before any of the four connectors within make electrical contact. The external metallic sheath is typically connected to system ground, thus dissipating damaging static charges. This enclosure design also provides a degree of protection from electromagnetic interference to the USB signal while it travels through the mated connector pair (the only location when the otherwise twisted data pair travels in parallel). In addition, because of the required sizes of the power and common connections, they are made after the system ground but before the data connections. This type of staged make-break timing allows for electrically safe hot-swapping. The newer micro-USB receptacles are designed for a minimum rated lifetime of 10,000 cycles of insertion and removal between the receptacle and plug, compared to 1,500 for the standard USB and 5,000 for the mini-USB receptacle. Features intended to accomplish include, a locking device was added and the leaf-spring was moved from the jack to the plug, so that the most-stressed part is on the cable side of the connection. This change was made so that the connector on the less expensive cable would bear the most wear instead of the more expensive micro-USB device. However the idea that these changes did in fact make the connector more durable in real world use has been widely disputed, with many contending that they are in fact, much less durable. The USB standard specifies relatively loose tolerances for compliant USB connectors to minimize physical incompatibilities in connectors from different vendors. To address a weakness present in some other connector standards, the USB specification also defines limits to the size of a connecting device in the area around its plug. This was done to prevent a device from blocking adjacent ports due to the size of the cable strain relief mechanism (usually molding integral with the cable outer insulation) at the connector. Compliant devices must either fit within the size restrictions or support a compliant extension cable that does. In general, USB cables have only plugs on their ends, while hosts and devices have only receptacles. Hosts almost universally have Type-A receptacles, while devices have one or another Type-B variety. Type-A plugs mate only with Type-A receptacles, and the same applies to their Type-B counterparts; they are deliberately physically incompatible. However, an extension to the USB standard specification called USB On-The-Go (OTG) allows a single port to act as either a host or a device, which is selectable by the end of the cable that plugs into the receptacle on the OTG-enabled unit. Even after the cable is hooked up and the units are communicating, the two units may "swap" ends under program control. This capability is meant for units such as PDAs in which the USB link might connect to a PC's host port as a device in one instance, yet connect as a host itself to a keyboard and mouse device in another instance. Type-A plugs and receptacles from both USB&nbsp;3.0 and USB&nbsp;2.0 are designed to interoperate. Type-B plugs and receptacles in USB&nbsp;3.0 are somewhat larger than those in USB&nbsp;2.0; thus, USB&nbsp;2.0 Type-B plugs can fit into USB&nbsp;3.0 Type-B receptacles, while the opposite is not possible. There are several types of USB connector, including some that have been added while the specification progressed. The original USB specification detailed standard-A and standard-B plugs and receptacles; the B connector was necessary so that cabling could be plug ended at both ends and still prevent users from connecting one computer receptacle to another. The first engineering change notice to the USB&nbsp;2.0 specification added mini-B plugs and receptacles. The data pins in the standard plugs are actually recessed in the plug compared to the outside power pins. This permits the power pins to connect first, preventing data errors by allowing the device to power up first and then establish the data connection. Also, some devices operate in different modes depending on whether the data connection is made. To reliably enable a charge-only feature, modern USB accessory peripherals now include charging cables that provide power connections to the host port but no data connections, and both home and vehicle charging docks are available that supply power from a converter device and do not include a host device and data pins, allowing any capable USB device to charge or operate from a standard USB cable. The USB&nbsp;2.0 standard-A type of USB plug is a flattened rectangle that inserts into a "downstream-port" receptacle on the USB host, or a hub, and carries both power and data. This plug is frequently seen on cables that are permanently attached to a device, such as one connecting a keyboard or mouse to the computer via USB connection. USB connections eventually wear out as the connection loosens through repeated plugging and unplugging. The lifetime of a USB-A male connector is approximately 1,500 connect/disconnect cycles. A standard-B plugwhich has a square shape with beveled exterior cornerstypically plugs into an "upstream receptacle" on a device that uses a removable cable (e.g. a printer). On some devices, the Type-B receptacle has no data connections, being used solely for accepting power from the upstream device. This two-connector-type scheme (A/B) prevents a user from accidentally creating an electrical loop.  The maximum allowed size of the overmold boot (which is part of the connector used for its handling) is 16 by 8&nbsp;mm for the standard-A plug type, while for the Type-B it is 11.5 by 10.5&nbsp;mm. The UC-E6 connector is non-USB, proprietary connector with 8 pins, used by Nikon, Sony, Kodak and other digital cameras.    Various connectors have been used for smaller devices such as digital cameras, smartphones, and tablet computers. These include the now-deprecated (i.e. de-certified but standardized) mini-A and mini-AB connectors; mini-B connectors are still supported, but are not OTG-compliant (On The Go, used in mobile devices). The mini-B USB connector was standard for transferring data to and from the early smartphones and PDAs. Both mini-A and mini-B plugs are approximately 3 by 7&nbsp;mm; the mini-A connector and the mini-AB receptacle connector were deprecated on 23 May 2007. The micro-USB connector was announced by the USB-IF on 4 January 2007. Micro-USB plugs have a similar width to mini-USB, but approximately half the thickness, enabling their integration into thinner portable devices. The micro-A connector is 6.85 by 1.8&nbsp;mm with a maximum overmold boot size of 11.7 by 8.5&nbsp;mm, while the micro-B connector is 6.85 by 1.8&nbsp;mm with a maximum overmold size of 10.6 by 8.5&nbsp;mm. The thinner micro connectors are intended to replace the mini connectors in new devices including smartphones, personal digital assistants, and cameras. While some of the devices and cables still use the older mini variant, the newer micro connectors are widely adopted, and  they are the most widely used. The micro plug design is rated for at least 10,000 connect-disconnect cycles, which is more than the mini plug design. The micro connector is also designed to reduce the mechanical wear on the device; instead the easier-to-replace cable is designed to bear the mechanical wear of connection and disconnection. The Universal Serial Bus Micro-USB Cables and Connectors Specification details the mechanical characteristics of micro-A plugs, micro-AB receptacles (which accept both micro-A and micro-B plugs), and micro-B plugs and receptacles, along with a standard-A receptacle to micro-A plug adapter. The cellular phone carrier group Open Mobile Terminal Platform (OMTP) in 2007 endorsed micro-USB as the standard connector for data and power on mobile devices In addition, on 22 October 2009 the International Telecommunication Union (ITU) has also announced that it had embraced micro-USB as the Universal Charging Solution its "energy-efficient one-charger-fits-all new mobile phone solution," and added: "Based on the Micro-USB interface, UCS chargers also include a 4-star or higher efficiency ratingup to three times more energy-efficient than an unrated charger." The European Standardisation Bodies CEN, CENELEC and ETSI (independent of the OMTP/GSMA proposal) defined a common External Power Supply (EPS) for use with smartphones sold in the EU based on micro-USB. 14 of the world's largest mobile phone manufacturers signed the EU's common EPS Memorandum of Understanding (MoU). Apple, one of the original MoU signers, makes micro-USB adapters available&nbsp;– as permitted in the Common EPS MoU&nbsp;– for its iPhones equipped with Apple's proprietary 30-pin dock connector or (later) Lightning connector. All current USB On-The-Go (OTG) devices are required to have one, and only one, USB connector: a micro-AB receptacle. Non-OTG compliant devices are not allowed to use the micro-AB receptacle, due to power supply shorting hazards on the VBUS line. The micro-AB receptacle is capable of accepting both micro-A and micro-B plugs, attached to any of the legal cables and adapters as defined in revision 1.01 of the micro-USB specification. Prior to the development of micro-USB, USB On-The-Go devices were required to use mini-AB receptacles to perform the equivalent job. To enable Type-AB receptacles to distinguish which end of a cable is plugged in, mini and micro plugs have an "ID" pin in addition to the four contacts found in standard-size USB connectors. This ID pin is connected to GND in Type-A plugs, and left unconnected in Type-B plugs. Typically, a pull-up resistor in the device is used to detect the presence or absence of an ID connection. The OTG device with the A-plug inserted is called the A-device and is responsible for powering the USB interface when required and by default assumes the role of host. The OTG device with the B-plug inserted is called the B-device and by default assumes the role of peripheral. An OTG device with no plug inserted defaults to acting as a B-device. If an application on the B-device requires the role of host, then the Host Negotiation Protocol (HNP) is used to temporarily transfer the host role to the B-device. OTG devices attached either to a peripheral-only B-device or a standard/embedded host have their role fixed by the cable, since in these scenarios it is only possible to attach the cable one way. USB plugs fit one receptacle with notable exceptions for USB On-The-Go "AB" support and the general backwards compatibility of USB 3.0 as shown. USB cables exist with various combinations of plugs on each end of the cable, as displayed below. Notes from the section above apply here as well.   USB 3.0 introduced new standard and micro-sized Type-A and Type-B plugs and receptacles. The 3.0 receptacles are backward-compatible with the corresponding pre-3.0 plugs. See the micro-B cable plug photo on the right. The micro-B 3.0 plug effectively consists of a standard USB 1.x/2.0 micro-B cable plug, with an additional five-pin plug "stacked" to the side of it. In this way, USB 3.0 micro-A host connectors can achieve backward compatibility with the USB 1.x/2.0 micro-B cable plugs. USB is a serial bus, using four shielded wires for the USB&nbsp;2.0 variant: two for power (VBUS and GND), and two for differential data signals (labelled as D+ and D− in pinouts). Non-Return-to-Zero Inverted (NRZI) encoding scheme is used for transferring data, with a sync field to synchronize the host and receiver clocks. D+ and D− signals are transmitted on a twisted pair, providing half-duplex data transfers for USB&nbsp;2.0.  Mini and micro connectors have their GND connections moved from pin #4 to pin #5, while their pin #4 serves as an ID pin for the On-The-Go host/client identification. USB&nbsp;3.0 provides two additional twisted pairs (four wires, SSTx+, SSTx−, SSRx+ and SSRx−), providing full-duplex data transfers at super-speed, which makes it similar to Serial ATA or single-lane PCI Express.   Manufacturers of personal electronic devices might not include a USB standard connector on their product for technical or marketing reasons. Some manufacturers provide proprietary cables that permit their devices to physically connect to a USB standard port. Full functionality of proprietary ports and cables with USB standard ports is not assured; for example, some devices only use the USB connection for battery charging and do not implement any data transfer functions. 5 widths=180px heights=140px HTC ExtMicro USB port and connector Nokia Pop-Port connector An Apple Lightning-to-USB Cable USB ports and connectors are often color-coded to distinguish their different functions and USB versions. These colors are not part of the USB specification and can vary between manufacturers; for example, USB&nbsp;3.0 specification mandates appropriate color-coding while it only recommends blue inserts for standard-A USB&nbsp;3.0 connectors and plugs.  The data cables for USB&nbsp;1.x and USB&nbsp;2.x use a twisted pair to reduce noise and crosstalk. USB&nbsp;3.0 cables contain twice as many wires as USB&nbsp;2.x to support SuperSpeed data transmission, and are thus larger in diameter. The USB&nbsp;1.1 standard specifies that a standard cable can have a maximum length of 5&nbsp;meters with devices operating at Full Speed (12&nbsp;Mbit/s), and a maximum length of 3&nbsp;meters with devices operating at Low Speed (1.5&nbsp;Mbit/s). USB&nbsp;2.0 provides for a maximum cable length of 5 meters for devices running at Hi Speed (480&nbsp;Mbit/s). The primary reason for this limit is the maximum allowed round-trip delay of about 1.5&nbsp;μs. If USB host commands are unanswered by the USB device within the allowed time, the host considers the command lost. When adding USB device response time, delays from the maximum number of hubs added to the delays from connecting cables, the maximum acceptable delay per cable amounts to 26&nbsp;ns. The USB&nbsp;2.0 specification requires that cable delay be less than 5.2&nbsp;ns per meter , which is close to the maximum achievable transmission speed for standard copper wire). The USB&nbsp;3.0 standard does not directly specify a maximum cable length, requiring only that all cables meet an electrical specification: for copper cabling with AWG 26 wires the maximum practical length is . The USB&nbsp;1.x and 2.0 specifications provide a 5&nbsp;V supply on a single wire to power connected USB devices. The specification provides for no more than 5.25&nbsp;V and no less than 4.75&nbsp;V (5&nbsp;V&nbsp;±&nbsp;5%) between the positive and negative bus power lines (VBUS voltage). For USB&nbsp;3.0, the voltage supplied by low-powered hub ports is 4.45–5.25&nbsp;V. A unit load is defined as 100&nbsp;mA in USB&nbsp;1.x and 2.0, and 150&nbsp;mA in USB&nbsp;3.0. A device may draw a maximum of five unit loads from a port in USB&nbsp;1.x and 2.0 (500&nbsp;mA), or six unit loads in USB&nbsp;3.0 (900&nbsp;mA). There are two types of device: low-power and high-power. A low-power device (such as a USB HID) draws at most one-unit load, with minimum operating voltage of 4.4&nbsp;V in USB&nbsp;2.0, and 4&nbsp;V in USB&nbsp;3.0. A high-power device draws, at most, the maximum number of unit loads the standard permits. Every device functions initially as low-power (including high-power functions during their low-power enumeration phases), but may request high-power, and get it if available on the providing bus. Some devices, such as high-speed external disk drives, require more than 500&nbsp;mA of current and therefore may have power issues if powered from just one USB&nbsp;2.0 port: erratic function, failure to function, or overloading/damaging the port. Such devices may come with an external power source or a Y-shaped cable that has two USB connectors (one for power and data, the other for power only) to plug into a computer. With such a cable, a device can draw power from two USB ports simultaneously. However, USB compliance specification states that "use of a 'Y' cable (a cable with two A-plugs) is prohibited on any USB peripheral", meaning that "if a USB peripheral requires more power than allowed by the USB specification to which it is designed, then it must be self-powered." A bus-powered hub initializes itself at one-unit load and transitions to maximum unit loads after it completes hub configuration. Any device connected to the hub draws one-unit load regardless of the current draw of devices connected to other ports of the hub (i.e., one device connected on a four-port hub draws only one-unit load despite the fact that more unit loads are being supplied to the hub). A self-powered hub supplies maximum supported unit loads to any device connected to it. In addition, the VBUS presents one-unit load upstream for communication if parts of the Hub are powered down.   The USB Battery Charging Specification Revision 1.1 (released in 2007) defines a new type of USB port, called the charging port. Contrary to the standard downstream port, for which current draw by a connected portable device can exceed 100&nbsp;mA only after digital negotiation with the host or hub, a charging port can supply currents between 500&nbsp;mA and 1.5&nbsp;A without the digital negotiation. A charging port supplies up to 500&nbsp;mA at 5&nbsp;V, up to the rated current at 3.6&nbsp;V or more, and drops its output voltage if the portable device attempts to draw more than the rated current. The charger port may shut down if the load is too high. Two types of charging port exist: the charging downstream port (CDP), supporting data transfers as well, and the dedicated charging port (DCP), without data support. A portable device can recognize the type of USB port; on a dedicated charging port, the D+ and D− pins are shorted with a resistance not exceeding 200&nbsp;ohms, while charging downstream ports provide additional detection logic so their presence can be determined by attached devices. (see ref pg. 2, Section 1.4.5, & Table 5-3 "Resistances"—pg. 29). With charging downstream ports, current passing through the thin ground wire may interfere with high-speed data signals; therefore, current draw may not exceed 900&nbsp;mA during high-speed data transfer. A dedicated charge port may have a rated current between 500 and 1,500&nbsp;mA. For all charging ports, there is maximum current of 5&nbsp;A, as long as the connector can handle the current (standard USB&nbsp;2.0 A-connectors are rated at 1.5&nbsp;A). Before the battery charging specification was defined, there was no standardized way for the portable device to inquire how much current was available. For example, Apple's iPod and iPhone chargers indicate the available current by voltages on the D− and D+ lines. When D+ = D− = 2.0&nbsp;V, the device may pull up to 500&nbsp;mA. When D+ = 2.0&nbsp;V and D− = 2.8&nbsp;V, the device may pull up to 1&nbsp;A of current. When D+ = 2.8&nbsp;V and D− = 2.0&nbsp;V, the device may pull up to 2&nbsp;A of current. Dedicated charging ports can be found on USB power adapters that convert utility power or another power source (e.g. a car's electrical system) to run attached devices and battery packs. On a host (such as a laptop computer) with both standard and charging USB ports, the charging ports should be labeled as such. To support simultaneous charge and data communication, even if the communication port does not support charging a demanding device, so-called accessory charging adapters (ACA) are introduced. By using an accessory charging adapter, a device providing a single USB port can be attached to both a charger, and another USB device at the same time. The USB Battery Charging Specification Revision 1.2 (released in 2010) makes clear that there are safety limits to the rated current at 5&nbsp;A coming from USB&nbsp;2.0. On the other hand, several changes are made and limits are increasing including allowing 1.5&nbsp;A on charging downstream ports for unconfigured devices, allowing high speed communication while having a current up to 1.5&nbsp;A, and allowing a maximum current of 5&nbsp;A. Also, revision 1.2 removes support for USB ports type detection via resistive detection mechanisms. In July 2012, the USB Promoters Group announced the finalization of the USB Power Delivery ("PD") specification, an extension that specifies using certified "PD aware" USB cables with standard USB Type-A and Type-B connectors to deliver increased power (more than 7.5&nbsp;W) to devices with larger power demand. Devices can request higher currents and supply voltages from compliant hosts up to 2&nbsp;A at 5&nbsp;V (for a power consumption of up to 10&nbsp;W), and optionally up to 3&nbsp;A or 5&nbsp;A at either 12&nbsp;V (36&nbsp;W or 60&nbsp;W) or 20&nbsp;V (60&nbsp;W or 100&nbsp;W). In all cases, both host-to-device and device-to-host configurations are supported. The intent is to permit uniformly charging laptops, tablets, USB-powered disks and similarly higher power consumer electronics, as a natural extension of existing European and Chinese mobile telephone charging standards. This may also affect the way electric power used for small devices is transmitted and used in both residential and public buildings. The Power Delivery specification defines six fixed power profiles for the power sources. PD-aware devices implement a flexible power management scheme by interfacing with the power source through a bidirectional data channel and requesting a certain level of electrical power, variable up to 5&nbsp;A and 20&nbsp;V depending on supported profile. The power configuration protocol uses a 24&nbsp;MHz BFSK-coded transmission channel on the VBUS line. The USB Power Delivery revision 2.0 specification has been released as part of the USB 3.1 suite. It covers the Type-C cable and connector with four power/ground pairs and a separate configuration channel, which now hosts a DC coupled low-frequency BMC-coded data channel that reduces the possibilities for RF interference. Power Delivery protocols have been updated to facilitate Type-C features such as cable ID function, Alternate Mode negotiation, increased VBUS currents, and VCONN-powered accessories. Sleep-and-charge USB ports can be used to charge electronic devices even when the computer is switched off. Normally, when a computer is powered off the USB ports are powered down, preventing phones and other devices from charging. Sleep-and-charge USB ports remain powered even when the computer is off. On laptops, charging devices from the USB port when it is not being powered from AC drains the laptop battery faster; most laptops have a facility to stop charging if their own battery charge level gets too low. Sleep-and-charge USB ports may be found colored differently than regular ports, mostly red or yellow, though that is not always the case. On Dell and Toshiba laptops, the port is marked with the standard USB symbol with an added lightning bolt icon on the right side. Dell calls this feature PowerShare, while Toshiba calls it USB Sleep-and-Charge. On Acer Inc. and Packard Bell laptops, sleep-and-charge USB ports are marked with a non-standard symbol (the letters USB over a drawing of a battery); the feature is simply called Power-off USB. On some laptops such as Dell and Apple MacBook models, it is possible to plug a device in, close the laptop (putting it into sleep mode) and have the device continue to charge.   , all new mobile phones applying for a license in China are required to use a USB port as a power port for battery charging.The Chinese FCC's technical standard:  This was the first standard to use the convention of shorting D+ and D−. In September 2007, the Open Mobile Terminal Platform group (a forum of mobile network operators and manufacturers such as Nokia, Samsung, Motorola, Sony Ericsson and LG) announced that its members had agreed on micro-USB as the future common connector for mobile devices. The GSM Association (GSMA) followed suit on 17 February 2009, and on 22 April 2009, this was further endorsed by the CTIA – The Wireless Association, with the International Telecommunication Union (ITU) announcing on 22 October 2009 that it had also embraced the Universal Charging Solution as its "energy-efficient one-charger-fits-all new mobile phone solution," and added: "Based on the Micro-USB interface, UCS chargers will also include a 4-star or higher efficiency rating—up to three times more energy-efficient than an unrated charger." In June 2009, many of the world's largest mobile phone manufacturers signed an EC-sponsored Memorandum of Understanding (MoU), agreeing to make most data-enabled mobile phones marketed in the European Union compatible with a common External Power Supply (EPS). The EU's common EPS specification (EN 62684:2010) references the USB Battery Charging standard and is similar to the GSMA/OMTP and Chinese charging solutions. In January 2011, the International Electrotechnical Commission (IEC) released its version of the (EU's) common EPS standard as IEC 62684:2011.    Some USB devices require more power than is permitted by the specifications for a single port. This is common for external hard and optical disc drives, and generally for devices with motors or lamps. Such devices can use an external power supply, which is allowed by the standard, or use a dual-input USB cable, one input of which is used for power and data transfer, the other solely for power, which makes the device a non-standard USB device. Some USB ports and external hubs can, in practice, supply more power to USB devices than required by the specification but a standard-compliant device may not depend on this. In addition to limiting the total average power used by the device, the USB specification limits the inrush current (i.e., that used to charge decoupling and filter capacitors) when the device is first connected. Otherwise, connecting a device could cause problems with the host's internal power. USB devices are also required to automatically enter ultra low-power suspend mode when the USB host is suspended. Nevertheless, many USB host interfaces do not cut off the power supply to USB devices when they are suspended. Some non-standard USB devices use the 5&nbsp;V power supply without participating in a proper USB network, which negotiates power draw with the host interface. These are usually called USB decorations. Examples include USB-powered keyboard lights, fans, mug coolers and heaters, battery chargers, miniature vacuum cleaners, and even miniature lava lamps. In most cases, these items contain no digital circuitry, and thus are not standard compliant USB devices. This may cause problems with some computers, such as drawing too much current and damaging circuitry. Prior to the Battery Charging Specification, the USB specification required that devices connect in a low-power mode (100&nbsp;mA maximum) and communicate their current requirements to the host, which then permits the device to switch into high-power mode. Some devices, when plugged into charging ports, draw even more power (10 watts or 2.1 amperes) than the Battery Charging Specification allows — The iPad is one such device. Barnes & Noble NOOK Color devices also require a special charger that runs at 1.9 amperes. PoweredUSB is a proprietary extension that adds four additional pins supplying up to 6&nbsp;A at 5&nbsp;V, 12&nbsp;V, or 24&nbsp;V. It is commonly used in point of sale systems to power peripherals such as barcode readers, credit card terminals, and printers. USB allows the following signaling rates (the terms speed and bandwidth are used interchangeably, while "high-" is alternatively written as "hi-"): USB signals are transmitted using differential signaling on a twisted-pair data cable with  characteristic impedance. A USB connection is always between a host or hub at the A connector end, and a device or hub's "upstream" port at the other end. Originally, this was a B connector, preventing erroneous loop connections, but additional upstream connectors were specified, and some cable vendors designed and sold cables that permitted erroneous connections (and potential damage to circuitry). USB interconnections are not as fool-proof or as simple as originally intended. The host includes 15&nbsp;kΩ pull-down resistors on each data line. When no device is connected, this pulls both data lines low into the so-called single-ended zero state (SE0 in the USB documentation), and indicates a reset or disconnected connection. A USB device pulls one of the data lines high with a 1.5&nbsp;kΩ resistor. This overpowers one of the pull-down resistors in the host and leaves the data lines in an idle state called J. For USB 1.x, the choice of data line indicates what signal rates the device is capable of; full-bandwidth devices pull D+ high, while low-bandwidth devices pull D− high. The K state is just the opposite polarity to the J state. USB data is transmitted by toggling the data lines between the J state and the opposite K state. USB encodes data using the NRZI line coding; a 0 bit is transmitted by toggling the data lines from J to K or vice versa, while a 1 bit is transmitted by leaving the data lines as-is. To ensure a minimum density of signal transitions remains in the bitstream, USB uses bit stuffing; an extra 0 bit is inserted into the data stream after any appearance of six consecutive 1 bits. Seven consecutive received 1 bits is always an error. USB 3.0 has introduced additional data transmission encodings. A USB packet begins with an 8-bit synchronization sequence, 00000001₂. That is, after the initial idle state J, the data lines toggle KJKJKJKK. The final 1 bit (repeated K state) marks the end of the sync pattern and the beginning of the USB frame. For high bandwidth USB, the packet begins with a 32-bit synchronization sequence. A USB packet's end, called EOP (end-of-packet), is indicated by the transmitter driving 2 bit times of SE0 (D+ and D− both below max.) and 1 bit time of J state. After this, the transmitter ceases to drive the D+/D− lines and the aforementioned pull up resistors hold it in the J (idle) state. Sometimes skew due to hubs can add as much as one bit time before the SE0 of the end of packet. This extra bit can also result in a "bit stuff violation" if the six bits before it in the CRC are 1s. This bit should be ignored by receiver. A USB bus is reset using a prolonged (10 to 20 milliseconds) SE0 signal. USB 2.0 devices use a special protocol during reset, called chirping, to negotiate the high bandwidth mode with the host/hub. A device that is HS capable first connects as an FS device (D+ pulled high), but upon receiving a USB RESET (both D+ and D− driven LOW by host for 10 to 20&nbsp;ms) it pulls the D− line high, known as chirp K. This indicates to the host that the device is high bandwidth. If the host/hub is also HS capable, it chirps (returns alternating J and K states on D− and D+ lines) letting the device know that the hub operates at high bandwidth. The device has to receive at least three sets of KJ chirps before it changes to high bandwidth terminations and begins high bandwidth signaling. Because USB 3.0 uses wiring separate and additional to that used by USB 2.0 and USB 1.x, such bandwidth negotiation is not required. Clock tolerance is 480.00±0.24&nbsp;Mbit/s, 12.00±0.03&nbsp;Mbit/s, 1.50±0.18&nbsp;Mbit/s. Though high bandwidth devices are commonly referred to as "USB 2.0" and advertised as "up to 480&nbsp;Mbit/s," not all USB 2.0 devices are high bandwidth. The USB-IF certifies devices and provides licenses to use special marketing logos for either "basic bandwidth" (low and full) or high bandwidth after passing a compliance test and paying a licensing fee. All devices are tested according to the latest specification, so recently compliant low bandwidth devices are also 2.0 devices. USB 3 uses tinned copper stranded AWG-28 cables with  impedance for its high-speed differential pairs and linear feedback shift register and 8b/10b encoding sent with a voltage of 1 V nominal with a 100 mV receiver threshold; the receiver uses equalization. 100717 usb3.com SSC clock and  precision is used. Packet headers are protected with CRC-16, while data payload is protected with CRC-32. 100717 usb3.com Power up to 3.6&nbsp;W may be used. One unit load in superspeed mode is equal to 150 mA. The theoretical maximum data rate in USB&nbsp;2.0 is 480&nbsp;Mbit/s (60&nbsp;MB/s) per controller and is shared amongst all attached devices. Some chipset manufacturers overcome this bottleneck by providing multiple USB&nbsp;2.0 controllers within the southbridge. According to routine testing performed by CNet, write operations to typical Hi-Speed (USB&nbsp;2.0) hard drives can sustain rates of 25–30&nbsp;MB/s, while read operations are at 30–42&nbsp;MB/s; this is 70% of the total available bus bandwidth. For USB&nbsp;3.0, typical write speed is 70–90&nbsp;MB/s, while read speed is 90–110&nbsp;MB/s. Mask Tests, also known as Eye Diagram Tests, are used to determine the quality of a signal in the time domain. They are defined in the referenced document as part of the electrical test description for the high-speed (HS) mode at 480&nbsp;Mbit/s. According to a USB-IF chairman, "at least 10 to 15 percent of the stated peak 60&nbsp;MB/s (480&nbsp;Mbit/s) of Hi-Speed USB goes to overhead—the communication protocol between the card and the peripheral. Overhead is a component of all connectivity standards". Tables illustrating the transfer limits are shown in Chapter 5 of the USB spec. For isochronous devices like audio streams, the bandwidth is constant, and reserved exclusively for a given device. The bus bandwidth therefore only has an effect on the number of channels that can be sent at a time, not the "speed" or latency of the transmission. For USB1 low-speed  and full-speed  devices the shortest time for a transaction in one direction is  USB2 high-speed  uses transactions within each micro frame  where using 1-byte interrupt packet results in a minimal response time of  4-byte interrupt packet results in  During USB communication, data is transmitted as packets. Initially, all packets are sent from the host, via the root hub and possibly more hubs, to devices. Some of those packets direct a device to send some packets in reply. After the sync field, all packets are made of 8-bit bytes, transmitted least-significant bit first. The first byte is a packet identifier (PID) byte. The PID is actually 4 bits; the byte consists of the 4-bit PID followed by its bitwise complement. This redundancy helps detect errors. (Note also that a PID byte contains at most four consecutive 1 bits, and thus never needs bit-stuffing, even when combined with the final 1 bit in the sync byte. However, trailing 1 bits in the PID may require bit-stuffing within the first few bits of the payload.) Packets come in three basic types, each with a different format and CRC (cyclic redundancy check): Handshake packets consist of only a single PID byte, and are generally sent in response to data packets. Error detection is provided by transmitting four bits that represent the packet type twice, in a single PID byte using complemented form.  Three basic types are ACK, indicating that data was successfully received, NAK, indicating that the data cannot be received and should be retried, and STALL, indicating that the device has an error condition and cannot transfer data until some corrective action (such as device initialization) occurs. USB&nbsp;2.0 added two additional handshake packets: NYET and ERR. NYET indicates that a split transaction is not yet complete, while ERR handshake indicates that a split transaction failed. A second use for a NYET packet is to tell the host that the device has accepted a data packet, but cannot accept any more due to full buffers. This allows a host to switch to sending small PING tokens to inquire about the device's readiness, rather than sending an entire unwanted DATA packet just to elicit a NAK. The only handshake packet the USB host may generate is ACK. If it is not ready to receive data, it should not instruct a device to send. Token packets consist of a PID byte followed by two payload bytes: 11 bits of address and a five-bit CRC. Tokens are only sent by the host, never a device. IN and OUT tokens contain a seven-bit device number and four-bit function number (for multifunction devices) and command the device to transmit DATAx packets, or receive the following DATAx packets, respectively. An IN token expects a response from a device. The response may be a NAK or STALL response, or a DATAx frame. In the latter case, the host issues an ACK handshake if appropriate. An OUT token is followed immediately by a DATAx frame. The device responds with ACK, NAK, NYET, or STALL, as appropriate. SETUP operates much like an OUT token, but is used for initial device setup. It is followed by an eight-byte DATA0 frame with a standardized format. Every millisecond (12000 full-bandwidth bit times), the USB host transmits a special SOF (start of frame) token, containing an 11-bit incrementing frame number in place of a device address. This is used to synchronize isochronous and interrupt data transfers. High-bandwidth USB&nbsp;2.0 devices receive seven additional SOF tokens per frame, each introducing a 125&nbsp;µs "microframe" (60000 high-bandwidth bit times each). USB&nbsp;2.0 added PING token, which asks a device if it is ready to receive an OUT/DATA packet pair. PING is usually sent by a host when polling a device that most recently responded with NAK or NYET. This avoids the need to send a large data packet to a device that the host suspects to be unwilling to accept it. The device responds with ACK, NAK or STALL, as appropriate. USB&nbsp;2.0 also added a larger three-byte SPLIT token with a seven-bit hub number, 12 bits of control flags, and a five-bit CRC. This is used to perform split transactions. Rather than tie up the high-bandwidth USB bus sending data to a slower USB device, the nearest high-bandwidth capable hub receives a SPLIT token followed by one or two USB packets at high bandwidth, performs the data transfer at full or low bandwidth, and provides the response at high bandwidth when prompted by a second SPLIT token. A data packet consists of the PID followed by 0–1,024 bytes of data payload (up to 1,024 bytes for high-speed devices, up to 64 bytes for full-speed devices, and at most eight bytes for low-speed devices), and a 16-bit CRC. There are two basic forms of data packet, DATA0 and DATA1. A data packet must always be preceded by an address token, and is usually followed by a handshake token from the receiver back to the transmitter. The two packet types provide the 1-bit sequence number required by Stop-and-wait ARQ. If a USB host does not receive a response (such as an ACK) for data it has transmitted, it does not know if the data was received or not; the data might have been lost in transit, or it might have been received but the handshake response was lost. To solve this problem, the device keeps track of the type of DATAx packet it last accepted. If it receives another DATAx packet of the same type, it is acknowledged but ignored as a duplicate. Only a Data x packet of the opposite type is actually received. If the data is corrupted while transmitted or received, the CRC check fails. When this happens, the receiver does not generate an ACK, which makes the sender resend the packet. When a device is reset with a SETUP packet, it expects an 8-byte DATA0 packet next. USB 2.0 added DATA2 and MDATA packet types as well. They are used only by high-bandwidth devices doing high-bandwidth isochronous transfers that must transfer more than 1024 bits per 125&nbsp;µs micro frame (8,192&nbsp;kB/s). Low-bandwidth devices are supported with a special PID value, PRE. This marks the beginning of a low-bandwidth packet, and is used by hubs that normally do not send full-bandwidth packets to low-bandwidth devices. Since all PID bytes include four 0 bits, they leave the bus in the full-bandwidth K state, which is the same as the low-bandwidth J state. It is followed by a brief pause, during which hubs enable their low-bandwidth outputs, already idling in the J state. Then a low-bandwidth packet follows, beginning with a sync sequence and PID byte, and ending with a brief period of SE0. Full-bandwidth devices other than hubs can simply ignore the PRE packet and its low-bandwidth contents, until the final SE0 indicates that a new packet follows. At first, USB was considered a complement to IEEE 1394 (FireWire) technology, which was designed as a high-bandwidth serial bus that efficiently interconnects peripherals such as disk drives, audio interfaces, and video equipment. In the initial design, USB operated at a far lower data rate and used less sophisticated hardware. It was suitable for small peripherals such as keyboards and pointing devices. The most significant technical differences between FireWire and USB include: These and other differences reflect the differing design goals of the two buses: USB was designed for simplicity and low cost, while FireWire was designed for high performance, particularly in time-sensitive applications such as audio and video. Although similar in theoretical maximum transfer rate, FireWire 400 is faster than USB 2.0 Hi-Bandwidth in real-use, especially in high-bandwidth use such as external hard-drives. The newer FireWire 800 standard is twice as fast as FireWire 400 and faster than USB 2.0 Hi-Bandwidth both theoretically and practically. However, Firewire's speed advantages rely on low-level techniques such as direct memory access (DMA), which in turn have created opportunities for security exploits such as the DMA attack. The chipset and drivers used to implement USB and FireWire have a crucial impact on how much of the bandwidth prescribed by the specification is achieved in the real world, along with compatibility with peripherals. The IEEE 802.3af Power over Ethernet (PoE) standard specifies a more elaborate power negotiation scheme than powered USB. It operates at 48&nbsp;V DC and can supply more power (up to 12.95&nbsp;W, PoE+ 25.5&nbsp;W) over a cable up to 100&nbsp;meters compared to USB 2.0, which provides 2.5&nbsp;W with a maximum cable length of 5&nbsp;meters. This has made PoE popular for VoIP telephones, security cameras, wireless access points and other networked devices within buildings. However, USB is cheaper than PoE provided that the distance is short, and power demand is low. Ethernet standards require electrical isolation between the networked device (computer, phone, etc.) and the network cable up to  or  for 60 seconds. USB has no such requirement as it was designed for peripherals closely associated with a host computer, and in fact it connects the peripheral and host grounds. This gives Ethernet a significant safety advantage over USB with peripherals such as cable and DSL modems connected to external wiring that can assume hazardous voltages under certain fault conditions. Digital musical instruments are another example where USB is competitive in low-cost devices. However Power over Ethernet and the MIDI plug standard have an advantage in high-end devices that may have long cables. USB can cause ground loop problems between equipment, because it connects ground references on both transceivers. By contrast, the MIDI plug standard and Ethernet have built-in isolation to  or more. The eSATA connector is a more robust SATA connector, intended for connection to external hard drives and SSDs. eSATA's transfer rate (up to 6&nbsp;Gbit/s) is similar to that of USB 3.0 (up to 5&nbsp;Gbit/s on current devices; 10&nbsp;Gbit/s speeds via USB 3.1, announced on 31 July 2013). A device connected by eSATA appears as an ordinary SATA device, giving both full performance and full compatibility associated with internal drives. eSATA does not supply power to external devices. This is an increasing disadvantage compared to USB. Even though USB 3.0's 4.5&nbsp;W is sometimes insufficient to power external hard drives, technology is advancing and external drives gradually need less power, diminishing the eSATA advantage. eSATAp (power over eSATA; aka ESATA/USB) is a connector introduced in 2009 that supplies power to attached devices using a new, backward compatible, connector. On a notebook eSATAp usually supplies only 5&nbsp;V to power a 2.5-inch HDD/SSD; on a desktop workstation it can additionally supply 12&nbsp;V to power larger devices including 3.5-inch HDD/SSD and 5.25-inch optical drives. eSATAp support can be added to a desktop machine in the form of a bracket connecting to motherboard SATA, power, and USB resources. eSATA, like USB, supports hot plugging, although this might be limited by OS drivers and device firmware. Thunderbolt combines PCI Express and Mini DisplayPort into a new serial data interface. Original Thunderbolt implementations have two channels, each with a transfer speed of 10&nbsp;Gbit/s, resulting in an aggregate unidirectional bandwidth of 20&nbsp;Gbit/s. Thunderbolt 2 uses link aggregation to combine the two 10&nbsp;Gbit/s channels into one bi-directional 20&nbsp;Gbit/s channel. Thunderbolt 3 is announced to use USB Type-C connectors. Thunderbolt 3 has one 40&nbsp;Gbit/s channel.  Various protocol converters are available that convert USB data signals to and from other communications standards. The USB Implementers Forum is working on a wireless networking standard based on the USB protocol. Wireless USB is a cable-replacement technology, and uses ultra-wideband wireless technology for data rates of up to 480&nbsp;Mbit/s. USB 2.0 High-Speed Inter-Chip (HSIC) is a chip-to-chip variant of USB 2.0 that eliminates the conventional analog transceivers found in normal USB. It was adopted as a standard by the USB Implementers Forum in 2007. The HSIC physical layer uses about 50% less power and 75% less board area compared to traditional USB 2.0. HSIC uses two signals at 1.2 V and has a throughput of 480&nbsp;Mbit/s. Maximum PCB trace length for HSIC is 10&nbsp;cm. It does not have low enough latency to support RAM memory sharing between two chips. The USB&nbsp;3.0 successor of HSIC is called SuperSpeed Inter-Chip (SSIC).      Release name Release date Speed and max signalling rate Note USB 0.8 December 1994 USB 0.9 April 1995 USB 0.99 August 1995 USB 1.0 Release Candidate November 1995 USB 1.0 January 1996 Low Speed (1.5 Mbit/s), Full Speed (12 Mbit/s) USB 1.1 August 1998 USB 2.0 April 2000 High Speed (480 Mbit/s) USB 3.0 November 2008 SuperSpeed (5 Gbit/s) Also called USB 3.1 Gen 1http://www.usb.org/developers/ssusb/USB_3_1_Language_Product_and_Packaging_Guidelines_FINAL.pdf USB 3.1 July 2013 SuperSpeed+ (10 Gbit/s)http://www.usb.org/press/USB-IF_Press_Releases/SuperSpeedUSB_10Gbps_Available_20130731.pdf Also called USB 3.1 Gen 2 Release name Release date Max rate Note USB Battery-Charging 1.0 March 8, 2007 5V, 1.5A max USB Battery-Charging 1.1 April 15, 2009 USB Battery-Charging 1.2 December 7, 2010 USB Power-Delivery 1 (v1.0) July 5, 2012 20V, 5A max Based on FSK protocol over Vbus pin USB Power-Delivery 1 (v1.3) March 11, 2014 USB Type-C 1.0 August 11, 2014 5V, 3A max New cable definition USB Power-Delivery 2 (v1.0) August 11, 2014 20V, 5A max Based on BMC protocol over CC pin on new cable Type-C USB Type-C 1.1 April 3, 2015 5V, 3A max USB Power-Delivery 2 (v1.1) May 7, 2015 20V, 5A max Class Usage Description Examples, or exception 00h Device UnspecifiedUse class information in the interface descriptors. This base class is defined to use in device descriptors to indicate that class information should be determined from the Interface Descriptors in the device. Device class is unspecified, interface descriptors are used to determine needed drivers 01h Interface Audio Speaker, microphone, sound card, MIDI 02h Both Communications and CDC Control Modem, Ethernet adapter, Wi-Fi adapter, RS232 serial adapter. Used together with class 0Ah (below) 03h Interface Human interface device (HID) Keyboard, mouse, joystick 05h Interface Physical Interface Device (PID) Force feedback joystick 06h Interface Image Webcam, scanner 07h Interface Printer Laser printer, inkjet printer, CNC machine 08h Interface Mass storage (MSC or UMS) USB flash drive, memory card reader, digital audio player, digital camera, external drive 09h Device USB hub Full bandwidth hub 0Ah Interface CDC-Data Used together with class 02h (above) 0Bh Interface Smart Card USB smart card reader 0Dh Interface Content security Fingerprint reader 0Eh Interface Video Webcam 0Fh Interface Personal healthcare device class (PHDC) Pulse monitor (watch) 10h Interface Audio/Video (AV) Webcam, TV 11h Device Billboard Describes USB Type-C alternate modes supported by device DCh Both Diagnostic Device USB compliance testing device E0h Interface Wireless Controller Bluetooth adapter, Microsoft RNDIS EFh Both Miscellaneous ActiveSync device FEh Interface Application-specific IrDA Bridge, Test & Measurement Class (USBTMC), USB DFU (Device Firmware Upgrade) FFh Both Vendor-specific Indicates that a device needs vendor-specific drivers Receptacle Plug Standard A Standard B USB 3.0 micro-B Standard A Standard B USB 3.0 micro-B Plugs, each end USB 3.0 micro-B Pin Name Wire color Description 1 VBUS Red (or orange) +5&nbsp;V 2 D− White (or gold) Data− 3 D+ Green Data+ 4 GND Black (or blue) Ground Pin Name Wire color Description 1 VBUS Red +5&nbsp;V 2 D− White Data− 3 D+ Green Data+ 4 ID USB On-The-Go ID distinguishes cable ends:• "A" plug (host): connected to GND• "B" plug (device): not connected 5 GND Black Signal ground Color Description Black or white USB 1.x or USB 2.0 Blue (Pantone 300C) USB 3.0 Teal blue USB 3.1 Yellow, orange or red Ports only. High-current or sleep-and-charge Specification !! Current !! Voltage !! Power USB&nbsp;1.x and 2.0 500&nbsp;mA 5&nbsp;V 2.5&nbsp;W USB&nbsp;3.x 900&nbsp;mA 5&nbsp;V 4.5&nbsp;W USB Battery Charging (BC 1.2) 0.5–1.5&nbsp;A 5&nbsp;V 2.5–7.5&nbsp;W USB Type-C 500/900&nbsp;mA 5&nbsp;V 2.5/4.5&nbsp;W 1.5&nbsp;A 5&nbsp;V 7.5&nbsp;W 3&nbsp;A 5&nbsp;V 15&nbsp;W USB Power Delivery 2&nbsp;A 5&nbsp;V 10&nbsp;W 1.5&nbsp;A 12&nbsp;V 18&nbsp;W 3&nbsp;A 12&nbsp;V 36&nbsp;W 5&nbsp;A 12&nbsp;V 60&nbsp;W 3&nbsp;A 20&nbsp;V 60&nbsp;W 5&nbsp;A 20&nbsp;V 100&nbsp;W Custom Custom Up to 100&nbsp;W Profile +5&nbsp;V +12&nbsp;V +20&nbsp;V 1 2.0&nbsp;A, 10&nbsp;W  2 1.5&nbsp;A, 18&nbsp;W 3 3.0&nbsp;A,  36&nbsp;W 4 3.0&nbsp;A,  60&nbsp;W 5 5.0&nbsp;A,  60&nbsp;W 5.0&nbsp;A, 100&nbsp;W Mode !! Gross data rate !! Introduced in Low Speed 1.5&nbsp;Mbit/s USB&nbsp;1.0 Full Speed 12&nbsp;Mbit/s USB&nbsp;1.0 High Speed 480&nbsp;Mbit/s USB&nbsp;2.0 SuperSpeed 5&nbsp;Gbit/s USB&nbsp;3.0 SuperSpeed+ 10&nbsp;Gbit/s USB&nbsp;3.1 Type !! PID value(msb-first) !! Transmitted byte(lsb-first) !! Name !! Description 0000 0000 1111 Token 1000 0001 1110 SPLIT High-bandwidth (USB 2.0) split transaction 0100 0010 1101 PING Check if endpoint can accept data (USB 2.0) Special 1100 0011 1100 PRE Low-bandwidth USB preamble Handshake ERR Split transaction error (USB 2.0) 0010 0100 1011 ACK Data packet accepted 1010 0101 1010 NAK Data packet not accepted; please retransmit 0110 0110 1001 NYET Data not ready yet (USB 2.0) 1110 0111 1000 STALL Transfer impossible; do error recovery Token 0001 1000 0111 OUT Address for host-to-device transfer 1001 1001 0110 IN Address for device-to-host transfer 0101 1010 0101 SOF Start of frame marker (sent each ms) 1101 1011 0100 SETUP Address for host-to-device control transfer Data 0011 1100 0011 DATA0 Even-numbered data packet 1011 1101 0010 DATA1 Odd-numbered data packet 0111 1110 0001 DATA2 Data packet for high-bandwidth isochronous transfer (USB 2.0) 1111 1111 0000 MDATA Data packet for high-bandwidth isochronous transfer (USB 2.0) Existing for specific proprietary purposes, and in most cases not inter-operable with USB-IF compliant equipment. In addition to the above cable assemblies comprising two plugs, an "adapter" cable with a micro-A plug and a standard-A receptacle is compliant with USB specifications. Other combinations of connectors are not compliant. There do exist A-to-A assemblies, referred to as cables (such as the Easy Transfer Cable); however, these have a pair of USB devices in the middle, making them more than just cables. Some older devices and cables with mini-A connectors have been certified by USB-IF. The mini-A connector is obsolete: no new mini-A connectors and neither mini-A nor mini-AB receptacles will be certified. Note: Mini-B is not deprecated, but less and less used since the arrival of micro-B. USB 0.8 released in December 1994 USB 0.9 released in April 1995 USB 0.99 released in August 1995 USB 1.0 Release Candidate released in November 1995 Mini-A and Mini-B Connector ECN: Released in October 2000.Specifications for mini-A and mini-B plug and receptacle. Also receptacle that accepts both plugs for On-The-Go. These should not be confused with micro-B plug and receptacle. Pull-up/Pull-down Resistors ECN: Released in May 2002 Interface Associations ECN: Released in May 2003.New standard descriptor was added that allows associating multiple interfaces with a single device function. Rounded Chamfer ECN: Released in October 2003.A recommended, backward compatible change to mini-B plugs that results in longer lasting connectors. Unicode ECN: Released in February 2005.This ECN specifies that strings are encoded using UTF-16LE. USB 2.0 specified Unicode, but did not specify the encoding. Inter-Chip USB Supplement: Released in March 2006 On-The-Go Supplement 1.3: Released in December 2006.USB On-The-Go makes it possible for two USB devices to communicate with each other without requiring a separate USB host. In practice, one of the USB devices acts as a host for the other device. Battery Charging Specification 1.1: Released in March 2007 and updated on 15 April 2009.Adds support for dedicated chargers (power supplies with USB connectors), host chargers (USB hosts that can act as chargers) and the No Dead Battery provision, which allows devices to temporarily draw 100&nbsp;mA current after they have been attached. If a USB device is connected to a dedicated charger, maximum current drawn by the device may be as high as 1.8&nbsp;A. (Note that this document is not distributed with USB 2.0 specification package, only USB 3.0 and USB On-The-Go.) Micro-USB Cables and Connectors Specification 1.01: Released in April 2007. Link Power Management Addendum ECN: Released in July 2007.This adds sleep, a new power state between enabled and suspended states. Device in this state is not required to reduce its power consumption. However, switching between enabled and sleep states is much faster than switching between enabled and suspended states, which allows devices to sleep while idle. Battery Charging Specification 1.2: Released in December 2010.Several changes and increasing limits including allowing 1.5&nbsp;A on charging ports for unconfigured devices, allowing High Speed communication while having a current up to 1.5&nbsp;A and allowing a maximum current of 5&nbsp;A. Isochronous transfers: At some guaranteed data rate (often, but not necessarily, as fast as possible) but with possible data loss (e.g. realtime audio or video) Interrupt transfers: Devices that need guaranteed quick responses (bounded latency) (e.g. pointing devices and keyboards) Bulk transfers: Large sporadic transfers using all remaining available bandwidth, but with no guarantees on bandwidth or latency (e.g. file transfers) A low-speed (USB 1.0) rate of 1.5&nbsp;Mbit/s is defined by USB 1.0. It is very similar to full-bandwidth operation except each bit takes 8 times as long to transmit. It is intended primarily to save cost in low-bandwidth human interface devices (HID) such as keyboards, mice, and joysticks. The full-speed (USB 1.1) rate of 12&nbsp;Mbit/s is the basic USB data rate defined by USB 1.0. All USB hubs can operate at this speed. A high-speed (USB 2.0) rate of 480&nbsp;Mbit/s was introduced in 2001. All hi-speed devices are capable of falling back to full-bandwidth operation if necessary; i.e., they are backward compatible with USB 1.1. Connectors are identical for USB 2.0 and USB 1.x. A SuperSpeed (USB 3.0) rate of 5.0&nbsp;Gbit/s. The written USB 3.0 specification was released by Intel and its partners in August 2008. The first USB 3.0 controller chips were sampled by NEC in May 2009, and the first products using the USB 3.0 specification arrived in January 2010. USB 3.0 connectors are generally backward compatible, but include new wiring and full duplex operation. Low- and full-speed modes (USB&nbsp;1.x) use a single data pair, labeled D+ and D−, in half-duplex. Transmitted signal levels are 0.0–0.3&nbsp;V for logical low, and 2.8–3.6&nbsp;V for logical high level. The signal lines are not terminated. High-speed mode (USB&nbsp;2.0) uses the same wire pair, but with different electrical conventions. Lower signal voltages of −10 – 10&nbsp;mV for low and 360–440&nbsp;mV for logical high level, and termination of 45&nbsp;Ω to ground, or 90&nbsp;Ω differential to match the data cable impedance. SuperSpeed (USB&nbsp;3.0) adds two additional pairs of shielded twisted wire (and new, mostly compatible expanded connectors), dedicated to full-duplex SuperSpeed operation. The half-duplex lines are still used for configuration. USB networks use a tiered-star topology, while IEEE 1394 networks use a tree topology. USB 1.0, 1.1 and 2.0 use a "speak-when-spoken-to" protocol; peripherals cannot communicate with the host unless the host specifically requests communication. USB 3.0 allows for device-initiated communications towards the host. A FireWire device can communicate with any other node at any time, subject to network conditions. A USB network relies on a single host at the top of the tree to control the network. In a FireWire network, any capable node can control the network. USB runs with a 5&nbsp;V power line, while FireWire in current implementations supplies 12&nbsp;V and theoretically can supply up to 30&nbsp;V. Standard USB hub ports can provide from the typical 500&nbsp;mA/2.5&nbsp;W of current, only 100&nbsp;mA from non-hub ports. USB 3.0 and USB On-The-Go supply 1.8&nbsp;A/9.0&nbsp;W (for dedicated battery charging, 1.5&nbsp;A/7.5&nbsp;W Full bandwidth or 900&nbsp;mA/4.5&nbsp;W High Bandwidth), while FireWire can in theory supply up to 60&nbsp;watts of power, although 10 to 20 watts is more typical. DockPort Easy Transfer Cable Extensible Host Controller Interface (XHCI) LIO Target List of device bit rates#Peripheral Media Transfer Protocol Mobile High-Definition Link  524  pp. Muller, Henk. "How To Create And Program USB Devices," Electronic Design, July 2012 An Analysis of Throughput Characteristics of Universal Serial Bus, June 1996, by John Garney USB&nbsp;2.0 Protocol Engine, October 2010, by Razi Hershenhoren and Omer Reznik Universal serial bus interfaces for data and power: IEC 62680-1:2013 Part 1: Universal serial bus specification, revision 2.0 IEC 62680-2:2013 Part 2: Universal serial bus - Micro-USB cables and connectors specification, revision 1.01 IEC 62680-3:2013 Part 3: USB Battery Charging Specification, revision 1.2

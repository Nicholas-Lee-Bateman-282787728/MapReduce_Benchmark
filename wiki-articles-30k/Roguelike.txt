    Roguelike is a subgenre of role-playing video games, characterized by a dungeon crawl through procedurally-generated game levels, turn-based gameplay, tile-based graphics, and permanent death of the player-character. Most roguelike are based on a high fantasy narrative, reflecting their influence from tabletop role playing games such as Dungeons & Dragons. Though the roguelikes Beneath Apple Manor and Sword of Fargoal predate it, the 1980 game Rogue is considered the forerunner and the namesake of the genre, with derivative games mirroring Rogues character- or sprite-based graphics. These games were popularized among college students and computer programmers of the 1980s and 1990s, leading to a large number of variants but adhering to these common gameplay elements, often titled the "Berlin Interpretation". Some of the better-known variants include Hack, NetHack, Ancient Domains of Mystery, Moria, Angband, and Tales of Maj'Eyal. The Japanese series of Mystery Dungeon games by Chunsoft, inspired by Rogue, also fall within the concept of roguelike games. More recently, with more powerful home computers and gaming systems, new variations of roguelikes incorporating other gameplay genres, thematic elements and graphical styles have become popular, typically retaining the notion of procedural generation and permanent death of the player-character. Indie games like Weird Worlds: Return to Infinite Space, Spelunky, The Binding of Isaac, FTL: Faster Than Light, and Rogue Legacy helped to establish the use of roguelike elements in other genres. These titles are sometimes labeled as "roguelike-like", "rogue-lite", or "procedural death labyrinths" to reflect the variation from titles which mimic the gameplay of traditional roguelikes more faithfully. Other games, like Diablo and UnReal World, the predecessor of the survival game genre, took inspiration from roguelikes. Deriving from the concepts of tabletop role-playing games such as Dungeons & Dragons, nearly all roguelikes give the player control of a character, which they may customize by selecting a class, race, and gender, and adjusting attributes points and skills. At the start of the game, the character is placed at the top-most level of a dungeon, with basic equipment such as a simple weapon, armor, torches, and food. Following along the role-playing concept of a dungeon crawl, the player moves the character through the dungeon, collecting treasure which can include new weapons, armors, magical devices, potions, scrolls, food, and in-game money, while having to fight monsters that roam the dungeon. Most combat is performed simply by attempting to move the character into the same space as the monster, which the game then calculates the damage that the character and monster deal. Other types of attacks, such as firing an arrow or performing an offensive magic spell, can often be performed as well. Defeating monsters earns the character experience points, and after earning enough points, the character will gain an experience level, improving their hit points, magic capability, and other attributes. Monsters may drop treasure to be looted. On the other hand, the character dies if they lose all their hit points. As most roguelikes feature the concept of permadeath, this represents the end of the game, and the player will need to restart the game with a newly made character. Roguelikes are nearly always turn-based, with the game only reacting when the player makes an action with the character. This allows players to evaluate a difficult situation, such as being cornered by several monsters, at their own pace and determine the best strategy. The player generally has to explore the dungeon to reveal its contents similar to a fog of war. Many roguelikes include factors related to light sources such as a torch to provide illumination to see monsters in nearby squares, and line of sight can also limit what monsters are visible. Dungeons tend to be connected by stairs; lower dungeon levels generally are more difficult than higher ones, so that a character that is underdeveloped may have difficulty by progressing too fast. Dungeon levels and the population of monsters and treasure within them are generated randomly using procedural generation, so that no game is the same on subsequent playthroughs. Most roguelikes have an ultimate goal of either claiming an item located at the deepest level of the dungeon, or to defeat a specific monster that lives on that level. Typical roguelikes include a scoreboard, ranking the player's performance once their game is over (be it through permadeath or completing the objective) based on the amount of treasure, money, and experience earned, and how fast the player completed the game in such cases.    The genre of roguelike broadly encompasses the gameplay that was popularized by the text-based game Rogue (1980), which bore out many variations due to its success; As of 2015, several hundred games claiming to be roguelikes were available through the Steam's game catalog,Craddock 2015, Introduction: "Rodney and Friends". and the user-run wiki RogueBasin tracks hundreds of roguelikes and their development. Because of the expansion of numerous variations on the roguelike theme, the gameplay elements characterizing the roguelike genre were explicitly defined at the International Roguelike Development Conference 2008 held in Berlin, Germany; these factors encompass what is known as the "Berlin Interpretation". Some of the factors used in this definition include:  Early roguelikes were developed to be played on text-based user interfaces, commonly UNIX-based computer mainframes and terminals used at colleges and universities before transitioning to personal computers. Games used a mix of ASCII or ANSI characters to represent elements of the dungeon levels, creatures, and items on the level. These games typically included one or two text lines presenting the player's current status at the bottom of the screen, and text-based menu screens to manage inventory, statistics, and other details. The player's character was nearly always represented by the @ across text-based roguelikes, which had been chosen by the developers of Rogue to stand for "where you're at". Other examples would include $ for monetary treasure and D for a dragon. Later games would take advantage of color-based text graphics to increase the variation of creature types, such as a red D for a red dragon that would shoot fire, while a green D could indicate a green dragon that would shoot acid. Players would use the keyboard, using one keypress to enter a command. With modern computer systems, users developed alternate means of displaying the game, such as graphical tilesets and Isometric-based graphical front ends, as well as interfaces that took advantage of keyboard and mouse UI controls. As computers offered more advanced user interfaces, such as windows and point-and-click menus, many traditional roguelikes were modified to include support for having multiple windows. This was useful to not only show the character-based dungeon, but details on the character's inventory, the monster they were in battle with, and other status messages, in separate windows. Having access to multiple windows also allowed having menus to complete more complex commands.  With computers and video game consoles capable of more advanced graphics and gameplay, numerous games have emerged that are loosely based on the classic roguelike design but diverge in one or more features. Many of these games use the concepts of procedurally generated maps and permadeath, while moving away from tile-based movement and turn-based gameplay, often using another gameplay genre such as action games or platformers. As such, the term  "roguelike-like" or "rogue-lite" has been used to distinguish these games that possess some, but not all, of the Berlin Interpretation features from those that exactly meet the Berlin roguelike definition. The phrase "procedural death labyrinth" has also been applied to such games, as they retain the notion of permadeath and random level generation but lack the other high-value factors normally associated with roguelike games. Roguelike-likes are generally much shorter games intended to be winnable within a single gaming session, in contrast to traditional roguelikes that are designed for multiple sessions of gameplay. Associated with their short length, many roguelike-likes feature a metagame, whereby achieving certain goals will unlock features such as the ability to select a new character at the start of the game or the addition of new items and monsters in the procedural generation of the game's levels. Several roguelike-likes feature daily challenges, in which a preset random seed is used to generate the game's levels in a deterministic fashion so that each player will have the same encounters; players attempt to complete the game through those levels or otherwise get the highest score through online leaderboards. Roguelike-likes may also allow the player to enter the random seed directly as to be able to rechallenge the same set of levels or share a difficult set of levels with other players. US Gamer further identified games they consider edge cases of being roguelikes or roguelike-likes, as they are inspired by Rogue, and "that stray a bit further from the genre but still manage to scratch the same itch as a great roguelike". These include games such as the Diablo series, Dark Souls and its sequel, ToeJam & Earl, and Dwarf Fortress. The creation of roguelike games came from hobbyist programmers and computer hackers, attempting to create games for the nascent computer field in the early 1980s, particularly influenced by the 1975 text adventure game Colossal Cave Adventure (often simply titled Adventure). Some elements of the roguelike genre were present in dungeon crawlers written for the PLATO system, like the multi-user games dnd (1975) and  Moria (1975), although there is no evidence that the early roguelike creators had access to these games. The core roguelike games were developed independently of each other, many of the developers not learning about their respective projects until several years after the genre took off. Roguelike games were initially developed for computing environments with limited memory, including shared mainframe systems and early home computers; this limitation prevented developers from retaining all but a few dungeon levels in memory while the game was running, leading to procedural generation to avoid the memory storage issue. Roguelikes were also often written in languages like BASIC, which are not as efficient in memory and data management compared to modern languages, further limiting the scope the game could cover. Though the term "roguelike" derives from the 1980 game Rogue, the first known game with the core roguelike gameplay elements was Beneath Apple Manor (1978), written by Don Worth for the Apple II; Beneath Apple Manor is also recognized as the first commercial roguelike game.Craddock 2015, Chapter 1: "The BAM-Like: Exploring Beneath Apple Manor". The game, inspired by Worth's enjoyment of Dungeons & Dragons roleplaying, included procedural generation using a modification of the random maze generator from the game Dragon Maze, role-playing elements for the characters, tile-based movement and turn-based combat. Though Beneath Apple Manor predated Rogue, it was not as popular as Rogue: Rogue had advantage of being distributed over ARPANET which many college students had easy access to, while Beneath Apple Manor was packaged and sold by hand by Worth either at local stores or through mail fulfillment. Another early roguelike whose development pre-dated Rogue was Sword of Fargoal (1982), developed by Jeff McCord starting in 1979.Craddock 2015, Chapter 4: "There and Back Again: Retrieving the Sword of Fargoal" The game was based on GammaQuest, an earlier title McCord had created on the Commodore PET which he shared locally with friends while a student at Henry Clay High School in Kentucky; the game itself was based on a Dungeons & Dragons campaign he had run himself in the prior years. Before graduating and attending the University of Tennessee in 1981, he had started work on GammaQuest II, which required the player to navigate through randomly generated dungeon levels, acquire a sword, and make it back to the surface with that sword through more randomly generated levels. The more advanced computers available at the school, such as the Commodore VIC-20, enabled him to expand out the game further from the highly limited memory on the PET. On seeing the prospects of selling computer software, he eventually got a publication deal with Epyx, where they helped him to refine the marketing of the game, renaming it Sword of Fargoal, and giving him access to the more powerful Commodore 64, enabling him to use graphics and sound as part of the game. The game was considered a success, and when it was ported to the PC in 1983, it out-shown Rogues PC release the same year due to Sword of Fargoals superior graphics and sound. Rogue was written by Glenn Wichman and Michael Toy in 1980 while students at the University of California, Santa Cruz. The game was inspired by Toy's prior experience in playing the 1971 Star Trek game and programming clones of it for various other computer systems.Craddock 2015, Chapter 2: "Procedural Dungeons of Doom: Building Rogue, Part 1" It was also inspired by interactive fiction Adventure. While looking for a way to randomize the experience of Adventure, they came across Ken Arnold's curses library that enabled them to better manipulate characters on the terminal screen, prompting Toy and Wichman to create a graphical-like randomized adventure game. They created the story of the game by having the player seek out the "Amulet of Yendor", "Yendor" being "Rodney" spelled backwards, the name of the wizard they envisioned had created the dungeon. Rogue was originally executed on a VAX-11/780 computer; its limited memory forced them to use a simple text-based interface for the game. Toy eventually dropped out of school but got a job at the computing labs at University of California, Berkeley, where he meet with Arnold. Arnold helped to optimize the curses code and implement more features into the game.Craddock 2015, Chapter 3: "Rodney and the Free Market: Building Rogue, Part 2" Rogue proved popular with college students and computer researchers at the time, including Ken Thompson; Dennis Ritchie had joked at the time that Rogue was "the biggest waste of CPU cycles in history". Its popularity led to the game's inclusion on BSD UNIX v4.2 in 1984, though at that time, without its source code. Toy and Arnold had anticipated selling Rogue commercially and were hesitant about releasing it; Toy would go on to meet Jon Lane at Olivetti, and together they would go on to create the company A.I. Design to port the games for various home systems, later bringing Wichman back to help.                The hierarchy of the major Roguelike games that are known to descend from Rogue. Solid lines represent games developed from the parent's source code, while dotted lines represent games that were inspired by the parent game.   The popularity of Rogue led developers to create their own versions of the game, though their efforts were originally limited by the lack of access to Rogues source, which was not released until BSD v4.3 in 1986. These developers resorted to building games from scratch similar to Rogue but with features that they wanted to see.Craddock 2015, Chapter 5: "When the Inmates Run the Asylum - Hack-ing at Lincoln-Sudbury High School" These versions would be distributed with source code, and along with the original Rogue source, other developers were able to create software forks of the games, adding in new monsters, items, and gameplay features, creating several dozen variants. This process was aided by switching code to languages with better data typing, including object-oriented and scripting languages, and cleaning up and modularizing the code so that contributors can better follow where changes can be made. While there are some direct variants of Rogue, such as Brogue, most variants of Rogue could be classified into two branches based on two key games, Moria and Hack, that were developed in the spirit of Rogue. Moria (1983) was developed by Robert Alan Koeneke while a student at University of Oklahoma, inspired by both Adventure and Rogue. Having access to a VAX-11/780, but without the source to Rogue due to computer administrator restrictions, he began trying to recreate Rogue but specifically flavored with the complex underground cave maze of the same name in J.R.R. Tolkien's Middle Earth stories. Following Tolkien's fiction, the player's goal was to descend to the depths of Moria to defeat the  Balrog, akin to a boss battle.Craddock 2015, Chapter 7: "None Shall Pass: Braving the Mines of Moria" As with Rogue, levels were not persistent: when the player left the level and then tried to return, a new level would be procedurally generated. Among other improvement to Rogue, Koeneke included a persistent town at the highest level where players could buy and sell equipment, and the use of data structures within the Pascal language allowed him to create a more diverse bestiary within the game. He got help from several playtesters as well as another student, Jimmey Wayne Todd, who helped to program a deeper character generation system. UMoria (short for UNIX Moria) is a close variation on Moria by Jim E. Wilson, making the game more portable to a larger variety of computers while fixing various bugs.  Angband (1990) was developed by Alex Cutler and Andy Astrand while attending the University of Warwick. Having played UMoria, they wanted to expand the game even further. Working from UMorias code, they increased the number of levels and monsters, flavored the game based on Angband, the massive fortress controlled by Morgoth from Tolkien's fiction, and incorporated more of the deadlier creatures described within the Middle Earth mythology. They kept the Balrog as a difficult creature that must be overcome at a mid-game level, while Morgoth became the final boss the player must defeat to win the game.Craddock 2015, Chapter 8: "Neapolitan Roguelike: The Many Flavors of Angband" Following Cutler and Astrand's graduation, Sean March and Geoff Hill took over the development to see the game through to a public release outside of the university, adding in elements such as giving the player a sense of the rewards and dangers of a level when they entered it the first time. Once Angband was released to the public via USENET, there were efforts to have code maintainers (the "devteam") to fix bugs, clean up the code and implement suggestions into the code. Due to numerous shifts in those maintaining the code (due to other obligations), and the number of potential user suggestions to include, Angband would become highly forked, leading to a number of Angband variants; at least sixty known variants exist with about a half dozen still under active development. One significant fork was ZAngband (1994) (short for Zelanzy Angband), which expanded on Angband and altered the theme towards Roger Zelazny's The Chronicles of Amber. The ZAngband codebase would be used to create Tales of Middle Earth (TOME) in 2002, which later swapped out the Tolkien and Zelazny fiction setting for a new original one to become Tales of Maj'Eyal (2009). The vanilla Angband remains in development today by the devteam. Hack (1982) was developed by Jay Fenlason with help from Kenny Woodland, Mike Thome, and Jonathan Payne, students at Lincoln-Sudbury Regional High School at the time, while participating in the school's computer lab overseen by Brian Harvey. Harvey had been able to acquire a PDP-11/7 mainframe for the school and instituted a course curriculum that allowed students to do whatever they wanted on the computers, including playing games, as long as they had completed assignments by the end of each semester. Fenlason, Woodland, Thome, and Payne met through these courses and became a close-group of friends and competent programmers. Harvey had invited the group to the computer labs at UC Berkeley where they had the opportunity to use the mainframe systems there, and were introduced to Rogue, inspiring them to create their own version as their class project. Fenlason had created a list of features they wanted to improve upon in Rogue such as having a level's layout saved once the player moved off that level.  They approached Toy and Arnold at a local USENIX conference for the source code to Rogue, but were refused, forcing them to develop the routines from scratch. The resulting program, Hack, stayed true to the original Dungeons and Dragons influences, and derived its name from being both a "hack and slash" game as well as a programming hack to recreate Rogue without having access to its source code. Fenlason was not able to include all the desired features, and his involvement in Hacks development concluded after the students had left the school. Fenlason had provided the source code to Hack to the USENIX conferences to be distributed on their digital tapes, from which it was later discovered and built upon through USENET newsgroups, porting it to various systems. Like Angband, the maintainership of the Hack code passed through several hands, and some variants were created by different forks.  Hack would eventually be dropped in favor of NetHack (1987). When Mike Stephenson, an analyst at a computer hardware manufacture, took maintainership of Hacks code, he took the opportunity to improve upon it along with suggestions for game improvements from Izchak Miller, a philosophy professor at University of Pennsylvania, and Janet Walz, another computer hacker. Calling themselves the DevTeam, they began to make major modifications to Hacks code.  They named their new version NetHack, in part for the collaboration of the game over USENET. NetHacks major deviations from Hack were the introduction of a wider variety of monsters, borrowing from other mythologies and lores, including anachronistic and contemporary cultural elements (such as a tourist class with a flash-bulb camera inspired by Terry Pratchet's Discworld series) in the high fantasy setting, and the use of pre-defined levels with some procedural elements that the player would encounter deeper in the dungeons. Further iterations of the game included branching pathways through the dungeon and optional character-based quests that could grant the player an extremely useful item to complete the game. Though the DevTeam released the code publicly, they carefully maintained who could contribute to the code base to avoid excessive forking of the vanilla game, and remain relatively quiet about suggested improvements to each release, working in relatively secrecy from its player base.Craddock 2015, Chapter 6: "It Takes a Village: Raising NetHack" There are separate forks of NetHack, such as Slash'EM. Ancient Domains of Mystery (1994), or ADOM for short, derived from concepts presented in NetHack. ADOM was originally developed by Thomas Biskup while a student at Technical University of Dortmund.Craddock 2015, Chapter 9: "Wish You Were Here! Questing for Postcards in Ancient Domains of Mystery" After playing through Rogue and Hack, he came to NetHack and was inspired by the game but dismayed at the complexity and elements he found unnecessary or distracting. Biskup created ADOM from scratch with the aim of creating a more story-driven game than NetHack that kept the depth of gameplay with a focused theme and setting. The resulting game featured several different dungeons, many generated procedurally, connected through an overworld map of the fictional realm of Ancardia, and would have the player complete various quests in those dungeons to progress the game. A major feature was the influence of Chaos forces through unsealed portals, which the player would have to close.  While in areas affected by Chaos, the player's character would become tainted, causing mutations that could be either detrimental or beneficial. ADOM, like NetHack and Angband, would gain a devteam to maintain the code and implement updates and patches to avoid excessive forking. Not all early roguelikes were readily classified as Hack or Moria descendants. Larn (1986), developed by Noah Morgan, borrowed concepts from both Hack (in that there are persistent and fixed levels) and Moria (in the availability of a shop level and general difficulty increasing with dungeon level), but while these two games have spiraled in size to take multiple play sessions to complete, Larn was aimed to be completed in a single session. Larn also uses a fixed-time feature, in that the player had only so many turns to complete a goal, though there were ways to jump back in time as to extend play. This was further limited by the stamina decay created by the need to feed the character, as failure to find food would result in the character's death. Omega, developed by the Laurence Brothers in the late 1980s, is credited with introducing an overworld concept to the roguelike genre, prior to the feature's appearance in ADOM. Omega was often remembered for its odd inventory approach in which the player would have to pick up an object, considering it being held, and then moving that object to a bag or an equipment slot. Linley's Dungeon Crawl (1995) was created by Linley Henzell and featured a skill-based character progression system, in which experience points could be used to improve specific skills, such as weapon proficiency or trap detection. One fork of this would form the basis for Dungeon Crawl Stone Soup (2006). A variation of the roguelike genre came from Japan, primarily through the Mystery Dungeon series by Chunsoft. The first game in this series was  based on the Dragon Quest series. Producer Koichi Nakamura stated the game was directly inspired by Rogue, looking to make a "more understandable, more easy-to-play version" of the title. The developers had developed ways to reduce the difficulty of the roguelike by using progressively more difficult dungeons that were randomly generated, and made permadeath an option by selection of difficulty level. To date, over 25 games in the Mystery Dungeon series have been made across various platforms, and spanning various franchises, including Chocobo series based on Final Fantasy and Pokémon Mystery Dungeon based on Pokémon. Several titles in the Mystery Dungeon series were popular, and would become a staple of the Japanese video game market."Permanece vigente Akira Toriyama gracias a 'Dragon Ball'" from Milenio.comドラクエＶＳファイナルファンタジー　売り上げ対決 from www9.plala.or.jp The games were not as successful in Western markets when published there, as the target players &ndash; younger players who likely had not experienced games like Rogue &ndash; found the lack of a traditional role-playing game save system odd. Other Japanese role-playing games would incorporate random dungeon generation as part of their design, mimicking part of the nature of roguelikes, and were considered roguelike titles when published in Western markets. Such titles include Vagrant Story, Shining Soul, and Baroque.  Though new classical roguelike variants would continue to be developed within the Western market, the genre languished as more advanced personal computers capable of improved graphics capabilities and games that utilized these features became popular. However, some of these new graphical games drew influence for roguelike concepts, notably action role-playing games like Blizzard Entertainment's Diablo (1996). Blizzard acknowledged that games like Nethack, Telengard and other roguelikes influenced the design of Diablo, including the nature of randomly generated dungeons and loot. Existing roguelikes continue to be developed: a sequel to ADOM successfully received crowd funding in 2012, while NetHacks first major release in ten years in 2015 is set to help the DevTeam expand the game further. New roguelikes that adhere to core Berlin Interpretation rules are still being created, including Dungeon Crawl Stone Soup (2006), Dungeons of Dredmor (2011), and Dragon Fin Soup (2015). A subclass of "coffeebreak roguelikes" that could be completed in a short period of time have developed, often derived from entries in the Seven Day Roguelike Challenge; examples include such as DoomRL (2013) and Desktop Dungeons (2013) Some games would also take advantage of the ease of developing in the tile-based ASCII interfaces common to roguelikes. For example, the highly popular Dwarf Fortress (2006) uses the roguelike interface atop a construction and management simulation, and would serve as a major inspiration for Minecraft, while SanctuaryRPG (2014) is a more traditional turn-based role playing game featuring a scripted story that uses an ASCII interface and roguelike gameplay elements. UnReal World (1992), the game that is considered to be the forerunner of the survival game genre,  and which frequently uses procedural generation to create the worlds that players must survive in, was developed by Sami Maaranen and was influenced by roguelikes, with its initial interface being similar to that of  NetHack. The roguelike genre saw a resurgence in Western markets after 2000 through independent developers that created a new subgenre designated the roguelike-like. Indie developers began to incorporate roguelike elements into genres not normally associated with roguelikes, creating games that would form the basis of this new subgenre. Two of the earliest cited examples of roguelike-likes are Strange Adventures in Infinite Space (2002) and its sequel Weird Worlds: Return to Infinite Space (2005) by Digital Eel, both space exploration games that included randomly generated planets and encounters, and permadeath. Digital Eel based their work on roguelikes like Nethack but wanted to provide a shorter experience that would be easier to replay, akin to tabletop beer and pretzels games.  Spelunky (2008), released shortly after the formation of the Berlin Interpretation, is considered to be a major contribution to the growth of indie-developed roguelike-likes. Spelunky was developed by Derek Yu, who wanted to take the deep gameplay that is offered by roguelikes and combine it with the ease and pick-up-and-play of a platformer. The result was a platform game incorporating the notion of permadeath in which the player takes an explorer character through randomly-generated underground caves. The intent was to create "deep" gameplay in which the game could be replayed over and over again, with the randomly generated situations driving the need for the player to develop novel, emergent strategies on the fly.  Developer Jason Rohrer stated that Spelunky "totally revamped my thinking about single-player videogame design". The formula and success of both Weird Worlds and Spelunky would influence other developers in creating new roguelike-likes. Edmund McMillen, the developer of The Binding of Isaac (2011), and Kenny and Teddy Lee, the co-develoeprs of Rogue Legacy (2012), credit Yu's approach with Spelunky as showing how to distill down the nature of a traditional roguelike to apply it to other gaming genres which they had done for their roguelike-likes. Justin Ma and Matthew Davis, the co-developers of FTL: Faster Than Light (2012), credited both Weird Worlds: Return to Infinite Space and Spelunky as part of their influence for FTL. All of these games earned critical praise, and their success has led to a more modern resurgence in roguelike-likes since their release. The newfound success in roguelike-likes is considered part of a larger trend in those that play both board and computer games, looking for "rich play experiences", as described by 100 Rogues developer Keith Burgun, that more popular titles may not always offer. David Bamguart of Gaslight Games stated that there is a thrill of the risk inherent in roguelike-likes with random generation and permadeath, helping the player become more invested in the fate of their player character: "The deadly precariousness inherent to the unknown environments of roguelikes gives that investment a great deal of meaning." Additionally, many of these newer roguelike-likes strive to address the apparent high difficulty and ruthlessness that traditional roguelikes were known for, and newer players will be able to find more help through user-generated game guides and walkthroughs made possible through wide Internet accessibility. Particularly for smaller indie developers, the nature of the procedural-generated world allows teams to deliver many hours worth of game content without having to spend resources and development time on fleshing out detailed worlds. This also allows developers to devote more time in building out complex gameplay features and their interacting systems that are part of the enjoyment of roguelike and roguelike-like games. McMillan of The Binding of Isaac stated that incorporating roguelike elements into other game genres can be difficult due to overcoming the complex interfaces roguelikes tend to have, but once a means to do so is found, "it becomes an increasingly beautiful, deep, and everlasting design that allows you to generate a seemingly dynamic experience for players, so that each time they play your game they're getting a totally new adventure".  With the expansion of both classical roguelikes and modern roguelike-like titles, there has been more interest in developing roguelikes. The 7 Day Roguelike challenge (7DRL) was born out of a USENET newsgroup in 2005 for roguelike developers, informally challenging them to create the core of a novel roguelike within 7 days to be submitted for judging and play by the public. The competition has continued annually each year, since growing from 5–6 entries in 2005 to over 130 in 2014.   Roguelike games create random tile-based levels, monster encounters, and treasure through procedural generation on each new game. Preferably roguelikes adhering to the Berlin Interpretation use ASCII-based graphics. They may include pre-determined levels as well, such as a town level common to the Moria family where the player can buy and sell equipment. Generated layouts typically incorporate rooms connected by corridors, some of which may be preset to some degree (e.g., monster lairs or treasuries). Open areas or natural features, such as rivers, may occur, though these are considered against the Berlin Interpretation. While early roguelikes would have levels confided to the bounds of the terminal screen, other roguelikes enabled a much larger level size, only a portion shown to the player as they moved around it. Roguelikes traditionally implement permadeath. Once a character dies, the player must begin a new game, which will regenerate the game's levels anew due to procedural generation. A "save game" feature will only provide suspension of gameplay and not a limitlessly recoverable state; the stored session is deleted upon resumption or character death. Players can circumvent this by backing up stored game data ("save scumming"), an act that is usually considered cheating. The combat system is turn-based instead of real-time. Gameplay is usually step-based, where player actions are performed serially and take a variable measure of in-game time to complete. Game processes (e.g., monster movement and interaction, progressive effects such as poisoning or starvation) advance based on the passage of time dictated by these actions. This requires the player to learn and apply tactics as they progress in the dungeon. Roguelikes generally have complex interacting systems that allow the player to complete certain goals in multiple ways, creating emergent gameplay. For example, to get through a locked door, the player may attempt to pick the lock, kick it down, burn down the door, or even tunnel around it, depending on their current situation and inventory. A common phrase associated with NetHack is "The Dev Team Thinks of Everything" in that the developers have seem to anticipated every possible combination of actions that a player may attempt to try in their gameplay strategy. Roguelike games are focused on hack and slash-based gameplay, where the goal is to kill lots of monsters, and where other peaceful options do not exist. The identity of magical items, including magically enchanted items, varies across games. Newly discovered objects only offer a vague physical description that is randomized between games, with purposes and capabilities left unstated. For example, a "bubbly" potion might heal wounds one game, then poison the player character in the next. Items are often subject to alteration, acquiring specific traits, such as a curse, or direct player modification. Exploration and discovery to learn the identity and function of items is of high value. The player must use resource management to survive. Items that help sustain the player, such as food and healing items, are in limited supply, and the player must figure out how to use these most advantageously in order to survive in the dungeon. USGamer further considers "stamina decay" as another feature related to resource management. The player's character constantly needs to find food to survive or will die from hunger, which prevents the player from exploiting health regeneration by simply either passing turns for a long period of time or fighting very weak monsters at low level dungeons. Most are single-player games. On multi-user systems, leaderboards are often shared between players. Some roguelikes allow traces of former player characters to appear in later game sessions in the form of ghosts or grave markings. Some games such as NetHack even have the player's former characters reappear as enemies within the dungeon. Multi-player turn-based derivatives such as TomeNET, MAngband, and Crossfire do exist and are playable online.Craddock 2015, Bonus Round: "Excerpt from One Week Dungeons: Diaries of a Seven-Day Roguelike Challenge" List of roguelikes MUD rec.games.roguelike Usenet hierarchy at Google Groups Roguebasin – The Roguelike information wiki @Play – A column about roguelikes and their various aspects by John Harris at GameSetWatch. Roguelike Roundup at Kuro5hin Introduction to Roguelike Games 7 Day Roguelikes
